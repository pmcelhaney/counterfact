{
    "x-generator": "NSwag v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))",
    "swagger": "2.0",
    "info": {
        "title": "Jack Henry Treasury BackOffice API",
        "version": "1.0.0"
    },
    "host": "treasurybackoffice.jackhenry.com",
    "basePath": "/Jha.Web.Treasury.BackOffice.API",
    "schemes": ["https"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "paths": {
        "/TermsAndConditions": {
            "get": {
                "tags": ["TermsAndConditions"],
                "summary": "Retrieves the Terms and Conditions.",
                "operationId": "TermsAndConditions_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "TermsAndConditionsModel",
                        "schema": {
                            "$ref": "#/definitions/TermsAndConditionsModel"
                        }
                    }
                }
            },
            "post": {
                "tags": ["TermsAndConditions"],
                "summary": "Posts terms and conditions.",
                "operationId": "TermsAndConditions_Post",
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "THe TermsAndConditionsModel instance.",
                        "schema": {
                            "$ref": "#/definitions/TermsAndConditionsModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/TermsAndConditionsModel"
                        }
                    }
                }
            }
        },
        "/authentication/logon": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Logs onto the system.",
                "operationId": "Authentication_Logon",
                "parameters": [
                    {
                        "name": "input",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/LogonInputModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The LogonResponseModel instance.",
                        "schema": {
                            "$ref": "#/definitions/LogonResponseModel"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/health/api/health": {
            "get": {
                "tags": ["Health"],
                "summary": "Gets a the information for the health check.",
                "operationId": "Health_Get",
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "skipDatabaseConnectivity",
                        "in": "query",
                        "description": "Skip database connectivity.",
                        "default": true,
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "skipRedisConnectivity",
                        "in": "query",
                        "description": "Skip redis connectivity.",
                        "default": true,
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "skipPackageInformation",
                        "in": "query",
                        "description": "Skip package information.",
                        "default": true,
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A HealthCheckActionResponse instance.",
                        "schema": {
                            "$ref": "#/definitions/HealthCheckActionResponse"
                        }
                    }
                }
            }
        },
        "/account/login": {
            "post": {
                "tags": ["Account"],
                "summary": "Initiates login for an FI user, checking initial login credentials and possibly MFA.\nReturns login credentials model.",
                "operationId": "Account_Login",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InitialLoginCredentialModel"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/account/authenticatesecuretoken": {
            "post": {
                "tags": ["Account"],
                "summary": "Authenticates a secure token.",
                "operationId": "Account_AuthenticateSecureToken",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "An instance of SecureTokenMfaLoginRequestModel.",
                        "schema": {
                            "$ref": "#/definitions/SecureTokenMfaLoginRequestModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "An instance of SecureTokenMfaLoginResponseModel.",
                        "schema": {
                            "$ref": "#/definitions/SecureTokenMfaLoginResponseModel"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/account/registersecuretoken": {
            "post": {
                "tags": ["Account"],
                "summary": "Registers a secure token.",
                "operationId": "Account_RegisterSecureToken",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "An instance of RegisterSecureTokenMfaRequestModel.",
                        "schema": {
                            "$ref": "#/definitions/RegisterSecureTokenMfaRequestModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "An instance of RegisterSecureTokenMfaResponseModel.",
                        "schema": {
                            "$ref": "#/definitions/RegisterSecureTokenMfaResponseModel"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/account/securetokencredentials": {
            "get": {
                "tags": ["Account"],
                "summary": "Gets the users secure token credentials.",
                "operationId": "Account_GetSecureTokenCredentials",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "User secure token credentials.",
                        "schema": {
                            "$ref": "#/definitions/SecureTokenMfaCredentialsResponseModel"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/account/logout": {
            "get": {
                "tags": ["Account"],
                "summary": "Ends the user's session.",
                "operationId": "Account_Logout",
                "parameters": [
                    {
                        "type": "string",
                        "name": "reason",
                        "in": "query",
                        "default": "",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OkResult"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/account/securityquestions": {
            "post": {
                "tags": ["Account"],
                "summary": "Save Security Question and Answers",
                "operationId": "Account_SecurityQuestions",
                "parameters": [
                    {
                        "name": "securityQuestions",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SecurityQuestionModel"
                            }
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/account/verifysecurityquestions": {
            "put": {
                "tags": ["Account"],
                "summary": "Validate MFA Challenge Questions Answers",
                "operationId": "Account_VerifySecurityQuestions",
                "parameters": [
                    {
                        "name": "securityQuestions",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SecurityQuestionModel"
                            }
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Credential"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/account/verifyuser": {
            "put": {
                "tags": ["Account"],
                "summary": "Initiates login in context of new user credentials.",
                "operationId": "Account_VerifyUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User to verify.",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A new instance of InitialLoginCredentialModel.",
                        "schema": {
                            "$ref": "#/definitions/InitialLoginCredentialModel"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/account/VerifyUserForPasswordReset": {
            "put": {
                "tags": ["Account"],
                "summary": "Initiates login in context of resetting an existing user.",
                "operationId": "Account_VerifyUserForPasswordReset",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User to validate.",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A new instance of InitialLoginCredentialModel.",
                        "schema": {
                            "$ref": "#/definitions/InitialLoginCredentialModel"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/account/updatepassword": {
            "put": {
                "tags": ["Account"],
                "summary": "Update User Password",
                "operationId": "Account_UpdatePassword",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ChangePasswordViewModel"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/account/passwordrequirements": {
            "get": {
                "tags": ["Account"],
                "summary": "Get Password Strength Requirements",
                "operationId": "Account_PasswordRequirements",
                "parameters": [
                    {
                        "type": "string",
                        "name": "fiId",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/account/getOnDemandMfaChallengeSecurityQuestions": {
            "put": {
                "tags": ["Account"],
                "summary": "Validate MFA Challenge Questions Answers",
                "operationId": "Account_GetOnDemandMfaChallengeSecurityQuestions",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Credential"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/account/settings": {
            "get": {
                "tags": ["Account"],
                "operationId": "Account_Settings",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserSettingsModel",
                        "schema": {
                            "$ref": "#/definitions/UserSettingsModel"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/account/currentFiDateTime": {
            "get": {
                "tags": ["Account"],
                "summary": "Retrieves the current date time for the financial institution",
                "operationId": "Account_CurrentFiDateTime",
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Nullable`1\n            ",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/account/recentLogins": {
            "get": {
                "tags": ["Account"],
                "operationId": "Account_RecentLogins",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserSettingsModel",
                        "schema": {
                            "$ref": "#/definitions/RecentLoginsModel"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/FeatureFlags/AllInstitutions": {
            "post": {
                "tags": ["FeatureFlags"],
                "summary": "Gets all the institutions.",
                "operationId": "FeatureFlags_GetAllInstitutions",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "The GetAllInstitutionsRequest instance.",
                        "schema": {
                            "$ref": "#/definitions/GetAllInstitutionsRequest"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A InstitutionCollection instance.",
                        "schema": {
                            "$ref": "#/definitions/InstitutionCollection"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/FeatureFlags/AllFeatureFlags": {
            "post": {
                "tags": ["FeatureFlags"],
                "summary": "Gets all the feature flags.",
                "operationId": "FeatureFlags_GetAllFeatureFlags",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "The GetAllFeatureFlagsRequest instance.",
                        "schema": {
                            "$ref": "#/definitions/GetAllFeatureFlagsRequest"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A FeatureFlagDataPage instance.",
                        "schema": {
                            "$ref": "#/definitions/FeatureFlagDataPage"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/FeatureFlags/SaveFeatureFlags": {
            "post": {
                "tags": ["FeatureFlags"],
                "summary": "Saves the feature flags.",
                "operationId": "FeatureFlags_SaveFeatureFlags",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "The SaveFeatureFlagsRequest instance.",
                        "schema": {
                            "$ref": "#/definitions/SaveFeatureFlagsRequest"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A Boolean value indicating whether the operation was successful or not.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/BaiConfiguration": {
            "get": {
                "tags": ["BaiConfiguration"],
                "summary": "Returns BAI configurations.",
                "operationId": "BaiConfiguration_GetBaiConfiguration",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The BaiConfigurationModel instance.",
                        "schema": {
                            "$ref": "#/definitions/BaiConfigurationModel"
                        }
                    }
                }
            },
            "post": {
                "tags": ["BaiConfiguration"],
                "summary": "Save configurations related to BAI.",
                "operationId": "BaiConfiguration_SaveBaiConfiguration",
                "parameters": [
                    {
                        "name": "baiConfigurationModel",
                        "in": "body",
                        "description": "THe BaiConfigurationModel instance.",
                        "schema": {
                            "$ref": "#/definitions/BaiConfigurationModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The BaiConfigurationModel instance.",
                        "schema": {
                            "$ref": "#/definitions/BaiConfigurationModel"
                        }
                    }
                }
            }
        },
        "/checkImages/check": {
            "get": {
                "tags": ["CheckImages"],
                "summary": "End point to get check images.",
                "operationId": "CheckImages_GetCheckImage",
                "parameters": [
                    {
                        "type": "string",
                        "name": "checkImageNumber",
                        "in": "query",
                        "required": true,
                        "description": "The check image number.",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The CheckImageModel.",
                        "schema": {
                            "$ref": "#/definitions/CheckImageModel"
                        }
                    }
                }
            }
        },
        "/checkImages/deposit": {
            "get": {
                "tags": ["CheckImages"],
                "summary": "End point to get deposit images.",
                "operationId": "CheckImages_GetDepositSet",
                "parameters": [
                    {
                        "type": "string",
                        "name": "depositImageNumber",
                        "in": "query",
                        "required": true,
                        "description": "The deposit image number.",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The List of CheckImageModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CheckImageModel"
                            }
                        }
                    }
                }
            }
        },
        "/CompanyAdminSettings": {
            "get": {
                "tags": ["CompanyAdminSettings"],
                "summary": "Gets The Company Admin Settings.",
                "operationId": "CompanyAdminSettings_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserApprovalSettingsModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserApprovalSettingsModel"
                            }
                        }
                    }
                }
            }
        },
        "/CompanyAdminSettings/{id}": {
            "put": {
                "tags": ["CompanyAdminSettings"],
                "summary": "Updates the Approval Settings with the specified information.",
                "operationId": "CompanyAdminSettings_ApprovalSettings",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Approval Settings  Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "approvalSettings",
                        "in": "body",
                        "description": "UserApprovalSettingsModel model to be updated.",
                        "schema": {
                            "$ref": "#/definitions/UserApprovalSettingsModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserApprovalSettingsModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserApprovalSettingsModel"
                            }
                        }
                    }
                }
            }
        },
        "/companyUserAccountSettings": {
            "get": {
                "tags": ["CompanyUserAccountSettings"],
                "operationId": "CompanyUserAccountSettings_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyUserAccountSettingsModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyUserAccountSettingsModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["CompanyUserAccountSettings"],
                "operationId": "CompanyUserAccountSettings_Put",
                "parameters": [
                    {
                        "name": "companyUserAccountSettings",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CompanyUserAccountSettingsModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyUserAccountSettingsModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyUserAccountSettingsModel"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/resetpassword": {
            "post": {
                "tags": ["CompanyUser"],
                "summary": "Reset company user password.",
                "operationId": "CompanyUser_ResetPassword",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The user id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "True or False.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/users/search": {
            "post": {
                "tags": ["CompanyUser"],
                "summary": "Searches for users.",
                "operationId": "CompanyUser_Search",
                "parameters": [
                    {
                        "name": "searchUserModel",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SearchCompanyUserModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserSummaryModel"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/manualresetpassword": {
            "post": {
                "tags": ["CompanyUser"],
                "summary": "Manually reset company user password.",
                "operationId": "CompanyUser_ManualResetPassword",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "the company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The user id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "password",
                        "in": "body",
                        "description": "the password.",
                        "schema": {
                            "$ref": "#/definitions/LookupModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "True or False.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}": {
            "delete": {
                "tags": ["CompanyUser"],
                "summary": "Delete user.",
                "operationId": "CompanyUser_DeleteUser",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The user id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "True or False.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/setactive": {
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Sets as user as active or inactive",
                "operationId": "CompanyUser_SetActive",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "query",
                        "required": true,
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "comments",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserModel",
                        "schema": {
                            "$ref": "#/definitions/UserSummaryModel"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/unlock": {
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Unlocks a user",
                "operationId": "CompanyUser_Unlock",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserModel",
                        "schema": {
                            "$ref": "#/definitions/UserSummaryModel"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/header": {
            "get": {
                "tags": ["CompanyUser"],
                "summary": "Gets the header information when editing a user",
                "operationId": "CompanyUser_GetUserState",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserModel",
                        "schema": {
                            "$ref": "#/definitions/UserStateModel"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/productfeaturesummary": {
            "get": {
                "tags": ["CompanyUser"],
                "summary": "Gets the product feature summary when editing a user",
                "operationId": "CompanyUser_GetProductFeatureSummary",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserModel",
                        "schema": {
                            "$ref": "#/definitions/UserProductFeatureSummaryModel"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/submit": {
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Submits new user information",
                "operationId": "CompanyUser_Submit",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "bool",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/discard": {
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Discards user information that is pending submission",
                "operationId": "CompanyUser_Discard",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "comments",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "bool",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/approve": {
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Approves user information that has been submitted",
                "operationId": "CompanyUser_Approve",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "comments",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "bool",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/reject": {
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Rejects user information that has been submitted",
                "operationId": "CompanyUser_Reject",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "comments",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "bool",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/userinformation": {
            "post": {
                "tags": ["CompanyUser"],
                "summary": "Creates a new user using User Information",
                "operationId": "CompanyUser_SaveUserInformation",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "userInformation",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserInformationModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserInformationModel",
                        "schema": {
                            "$ref": "#/definitions/UserInformationModel"
                        }
                    }
                }
            },
            "get": {
                "tags": ["CompanyUser"],
                "summary": "Gets a user's User Information",
                "operationId": "CompanyUser_GetUserInformation",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserInformationResponseModel",
                        "schema": {
                            "$ref": "#/definitions/UserInformationResponseModel"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/userchallengedetail": {
            "get": {
                "tags": ["CompanyUser"],
                "summary": "Returns user challenge details.",
                "operationId": "CompanyUser_GetUserChallengeDetail",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The user id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The ChallengeSettingsModel instance.",
                        "schema": {
                            "$ref": "#/definitions/ChallengeSettingsModel"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/accountaccess": {
            "get": {
                "tags": ["CompanyUser"],
                "summary": "Gets a user's Account Access",
                "operationId": "CompanyUser_GetAccountAccess",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "GetUserAccountAccessModel",
                        "schema": {
                            "$ref": "#/definitions/GetUserAccountAccessModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Updates a user's Account Access",
                "operationId": "CompanyUser_SaveUserAccountAccess",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "accountAccess",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SaveUserAccountAccessModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "vocompanyId",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/productentitlements": {
            "get": {
                "tags": ["CompanyUser"],
                "summary": "Gets a user's Product Entitlements",
                "operationId": "CompanyUser_GetUserProductEntitlements",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "productFeatureType",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GetUserProductEntitlementsModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Updates a user's Product Entitlements",
                "operationId": "CompanyUser_SaveUserProductEntitlements",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "saveUserProductEntitlementsModel",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SaveUserProductEntitlementsModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "bool",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/achproductentitlements": {
            "get": {
                "tags": ["CompanyUser"],
                "summary": "Gets a user's Ach Entitlements",
                "operationId": "CompanyUser_GetUserAchEntitlements",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GetUserAchEntitlementsModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Updates a user's Product Entitlements Config",
                "operationId": "CompanyUser_SaveUserAchProductEntitlements",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "saveUserProductEntitlementsModel",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SaveUserAchProductEntitlementsModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "bool",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/productlimits": {
            "get": {
                "tags": ["CompanyUser"],
                "summary": "Gets a user's Product Limits",
                "operationId": "CompanyUser_GetUserProductLimits",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "productFeatureType",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "vocompanyId",
                        "schema": {
                            "$ref": "#/definitions/GetUserProductLimitsResponseModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Updates a User's Product Limits Config",
                "operationId": "CompanyUser_SaveUserProductLimits",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "productLimitsConfig",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/GetUserProductLimitsResponseModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "bool",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/achlimits": {
            "get": {
                "tags": ["CompanyUser"],
                "summary": "Gets a user's Ach limits",
                "operationId": "CompanyUser_GetUserAchLimits",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GetUserAchLimitsModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Updates a User's ACH Limits",
                "operationId": "CompanyUser_SaveUserAchLimits",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "achLimits",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/GetUserAchLimitsModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{id}/users/{actionId}/unlockUserChallenge": {
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Unlocks User Challenge points",
                "operationId": "CompanyUser_UnlockUserChallenge",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "recollect",
                        "in": "query",
                        "required": true,
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserModel",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{id}/users/{actionId}/reCollectUserChallenge": {
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Recollect User Challenge Authentication Information",
                "operationId": "CompanyUser_ReCollectUserChallenge",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserModel",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{id}/users/{actionId}/usertimeaccess": {
            "get": {
                "tags": ["CompanyUser"],
                "summary": "Gets a User's Time Access",
                "operationId": "CompanyUser_GetUserTimeAccess",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CompanyUserTimeAccess"
                        }
                    }
                }
            },
            "post": {
                "tags": ["CompanyUser"],
                "summary": "Updates a User's Time Access",
                "operationId": "CompanyUser_SaveUserTimeAccess",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "userTimeAccess",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CompanyUserTimeAccess"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/iprestrictions": {
            "get": {
                "tags": ["CompanyUser"],
                "summary": "Gets IP restrictions.",
                "operationId": "CompanyUser_GetIpRestrictions",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The user id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "THe IP restriction data.",
                        "schema": {
                            "$ref": "#/definitions/IpRestrictionModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Update IP restrictions.",
                "operationId": "CompanyUser_PutIpRestrictions",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The user id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "restricted",
                        "in": "query",
                        "required": true,
                        "description": "True or False.",
                        "x-nullable": false
                    },
                    {
                        "name": "models",
                        "in": "body",
                        "description": "The ICollection`1 of IpRestrictionAddressModel .",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IpRestrictionAddressModel"
                            }
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/ssopospaysettings": {
            "get": {
                "tags": ["CompanyUser"],
                "summary": "Gets SSO positive pay settings.",
                "operationId": "CompanyUser_GetUserSsoPosPaySettings",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The user id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The SsoPosPayUserSettingsModel",
                        "schema": {
                            "$ref": "#/definitions/SsoPosPayUserSettingsModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Update SSO positive pay settings.",
                "operationId": "CompanyUser_PutUserSsoPosPaySettings",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The user id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The  SsoPosPayUserSettingsModel instance. ",
                        "schema": {
                            "$ref": "#/definitions/SsoPosPayUserSettingsModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "True or False.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/receivablessettings": {
            "get": {
                "tags": ["CompanyUser"],
                "summary": "Gets user receivable settings.",
                "operationId": "CompanyUser_GetUserReceivablesSettings",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The user id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "THe ReceivablesUserSettingsModel instance.",
                        "schema": {
                            "$ref": "#/definitions/ReceivablesUserSettingsModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["CompanyUser"],
                "summary": "Updates user receivable settings.",
                "operationId": "CompanyUser_PutUserReceivablesSettings",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The user id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The ReceivablesUserSettingsModel instance.",
                        "schema": {
                            "$ref": "#/definitions/ReceivablesUserSettingsModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "True or False.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companyuser/{companyId}/users/{userId}/generateenrollmentemail": {
            "post": {
                "tags": ["CompanyUser"],
                "summary": "Generates an enrollment email and sends it to the user's registered email.",
                "operationId": "CompanyUser_GenerateEnrollmentEmail",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The user id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "True or False.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/CompanyUserChallengeSettings": {
            "get": {
                "tags": ["CompanyUserChallengeSettings"],
                "summary": "End point to get company user challenge settings.",
                "operationId": "CompanyUserChallengeSettings_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The CompanyUserChallengeSettingsModel instance.",
                        "schema": {
                            "$ref": "#/definitions/CompanyUserChallengeSettingsModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["CompanyUserChallengeSettings"],
                "summary": "Update company user challenge settings.",
                "operationId": "CompanyUserChallengeSettings_Put",
                "parameters": [
                    {
                        "name": "companyUserChallengeSettings",
                        "in": "body",
                        "description": "The CompanyUserChallengeSettingsModel instance.",
                        "schema": {
                            "$ref": "#/definitions/CompanyUserChallengeSettingsModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The CompanyUserChallengeSettingsModel instance.",
                        "schema": {
                            "$ref": "#/definitions/CompanyUserChallengeSettingsModel"
                        }
                    }
                }
            }
        },
        "/cutoffconfigurations/transfer": {
            "put": {
                "tags": ["CutOffConfigurations"],
                "summary": "Updates the transfer time.",
                "operationId": "CutOffConfigurations_Put",
                "parameters": [
                    {
                        "type": "string",
                        "name": "transferTime",
                        "in": "query",
                        "required": true,
                        "description": "Transfer time to be updated.",
                        "format": "date-time",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "boolean",
                        "schema": {
                            "$ref": "#/definitions/CutoffConfigurationModel"
                        }
                    }
                }
            },
            "get": {
                "tags": ["CutOffConfigurations"],
                "summary": "Gets the transfer time.",
                "operationId": "CutOffConfigurations_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "transferTime",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            }
        },
        "/Download": {
            "post": {
                "tags": ["Download"],
                "summary": "End point to get downloads.",
                "operationId": "Download_Post",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "THe DownloadRequest instance.",
                        "schema": {
                            "$ref": "#/definitions/DownloadRequest"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The download content as byte array.",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/Download/GetDownloadOptions": {
            "get": {
                "tags": ["Download"],
                "summary": "Gets download options available for downloads.",
                "operationId": "Download_GetDownloadOptions",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "downloadPage",
                        "in": "query",
                        "required": true,
                        "description": "The DownloadPage instance.",
                        "x-schema": {
                            "$ref": "#/definitions/DownloadPage"
                        },
                        "x-nullable": false,
                        "enum": [
                            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection of download options.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DownloadOption"
                            }
                        }
                    }
                }
            }
        },
        "/EntitlementGroups": {
            "get": {
                "tags": ["EntitlementGroups"],
                "summary": "Returns the permissions for the logged in user.",
                "operationId": "EntitlementGroups_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection EntitlementGroupModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EntitlementGroupModel"
                            }
                        }
                    }
                }
            }
        },
        "/Entitlements": {
            "get": {
                "tags": ["Entitlements"],
                "summary": "Returns the permissions for the logged in user.",
                "operationId": "Entitlements_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection FiPermissionModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FiPermissionModel"
                            }
                        }
                    }
                }
            }
        },
        "/FiPermission": {
            "get": {
                "tags": ["FiPermission"],
                "summary": "Returns all the FI Parameters",
                "operationId": "FiPermission_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "FiPermissionModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FiPermissionModel"
                            }
                        }
                    }
                }
            }
        },
        "/HolidayCalendars": {
            "get": {
                "tags": ["HolidayCalendars"],
                "summary": "Retrieves the Holiday calendar dates.",
                "operationId": "HolidayCalendars_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection HolidayCalendarModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HolidayCalendarModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["HolidayCalendars"],
                "summary": "Save the passed Holiday Calendar.",
                "operationId": "HolidayCalendars_Post",
                "parameters": [
                    {
                        "name": "holidayCalendarMessage",
                        "in": "body",
                        "description": "Holiday calendar model to be added.",
                        "schema": {
                            "$ref": "#/definitions/HolidayCalendarModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "HolidayCalendarModel",
                        "schema": {
                            "$ref": "#/definitions/HolidayCalendarModel"
                        }
                    }
                }
            }
        },
        "/HolidayCalendars/{id}": {
            "put": {
                "tags": ["HolidayCalendars"],
                "summary": "Updates the passed holiday calendar model.",
                "operationId": "HolidayCalendars_Put",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Holiday calendar id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "holidayCalendarModel",
                        "in": "body",
                        "description": "Holiday calendar to be updated.",
                        "schema": {
                            "$ref": "#/definitions/HolidayCalendarModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "HolidayCalendarModel",
                        "schema": {
                            "$ref": "#/definitions/HolidayCalendarModel"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["HolidayCalendars"],
                "summary": "Delete the Holiday calendar for the specified Id.",
                "operationId": "HolidayCalendars_Delete",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Holiday calendar Id to be deleted.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/InformationCenterConfigurations": {
            "get": {
                "tags": ["InformationCenterConfigurations"],
                "summary": "Returns the Info center configurations.",
                "operationId": "InformationCenterConfigurations_GetAll",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "InformationCenterConfigurationModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InformationCenterConfigurationModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["InformationCenterConfigurations"],
                "summary": "Creates the info center.",
                "operationId": "InformationCenterConfigurations_Post",
                "parameters": [
                    {
                        "name": "infocenterModel",
                        "in": "body",
                        "description": "Info center to added.",
                        "schema": {
                            "$ref": "#/definitions/InformationCenterConfigurationModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "InformationCenterConfigurationModel",
                        "schema": {
                            "$ref": "#/definitions/InformationCenterConfigurationModel"
                        }
                    }
                }
            }
        },
        "/InformationCenterConfigurations/{id}": {
            "delete": {
                "tags": ["InformationCenterConfigurations"],
                "summary": "Deletes the information center for the specified Id.",
                "operationId": "InformationCenterConfigurations_Delete",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Info center id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "get": {
                "tags": ["InformationCenterConfigurations"],
                "summary": "Returns the info center for the specified info center id.",
                "operationId": "InformationCenterConfigurations_Get",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Info center id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "InformationCenterConfigurationModel",
                        "schema": {
                            "$ref": "#/definitions/InformationCenterConfigurationModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["InformationCenterConfigurations"],
                "summary": "Updates the passed info center.",
                "operationId": "InformationCenterConfigurations_Put",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Info center id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "infocenterModel",
                        "in": "body",
                        "description": "info center to be updated.",
                        "schema": {
                            "$ref": "#/definitions/InformationCenterConfigurationModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "InformationCenterConfigurationModel",
                        "schema": {
                            "$ref": "#/definitions/InformationCenterConfigurationModel"
                        }
                    }
                }
            }
        },
        "/InformationCenterConfigurations/Resequence": {
            "get": {
                "tags": ["InformationCenterConfigurations"],
                "summary": "Returns the info center for the specified info center id.",
                "operationId": "InformationCenterConfigurations_Resequence",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "description": "Info center id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query",
                        "required": true,
                        "description": "up/down",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "InformationCenterConfigurationModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InformationCenterConfigurationModel"
                            }
                        }
                    }
                }
            }
        },
        "/ContentManagementConfiguration": {
            "get": {
                "tags": ["ContentManagementConfiguration"],
                "summary": "Gets content management data.",
                "operationId": "ContentManagementConfiguration_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The InstitutionModel instance.",
                        "schema": {
                            "$ref": "#/definitions/InstitutionModel"
                        }
                    }
                }
            },
            "post": {
                "tags": ["ContentManagementConfiguration"],
                "summary": "Save content management data.",
                "operationId": "ContentManagementConfiguration_Post",
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The InstitutionModel instance.",
                        "schema": {
                            "$ref": "#/definitions/InstitutionModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "THe InstitutionModel instance.",
                        "schema": {
                            "$ref": "#/definitions/InstitutionModel"
                        }
                    }
                }
            }
        },
        "/QboSettings": {
            "get": {
                "tags": ["QboSettings"],
                "summary": "Gets QBO settings",
                "operationId": "QboSettings_Get",
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "The QboSettingsModel instance.",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            },
            "post": {
                "tags": ["QboSettings"],
                "summary": "Posts QBO settings.",
                "operationId": "QboSettings_Post",
                "parameters": [
                    {
                        "name": "settings",
                        "in": "body",
                        "description": "The QboSettingsModel instance.",
                        "schema": {
                            "$ref": "#/definitions/QboSettingsModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "True or False.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/jhasupport/institutions": {
            "get": {
                "tags": ["JhaSupport"],
                "summary": "Gets institutions.",
                "operationId": "JhaSupport_GetInstitutions",
                "parameters": [
                    {
                        "type": "string",
                        "name": "searchText",
                        "in": "query",
                        "description": "The search text.",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Returns InstitutionModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionModel"
                            }
                        }
                    }
                }
            }
        },
        "/jhasupport/impersonateInstitution/{newInstitutionId}": {
            "post": {
                "tags": ["JhaSupport"],
                "summary": "Impersonates an institutions.",
                "operationId": "JhaSupport_ImpersonateInstitution",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "newInstitutionId",
                        "in": "path",
                        "required": true,
                        "description": "The institution id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "FI ID of the institution being impersonated.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/LoginParameters": {
            "get": {
                "tags": ["LoginParameters"],
                "summary": "Provides the Login parameter for the specified type.",
                "operationId": "LoginParameters_Get",
                "parameters": [
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "description": "Parameters for FI company or FI.",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "LoginIdPasswordParametersModel",
                        "schema": {
                            "$ref": "#/definitions/LoginIdPasswordParametersModel"
                        }
                    }
                }
            },
            "post": {
                "tags": ["LoginParameters"],
                "summary": "Adds the passed Login parameter.",
                "operationId": "LoginParameters_Post",
                "parameters": [
                    {
                        "name": "loginParameter",
                        "in": "body",
                        "description": "Login Parameter to be added",
                        "schema": {
                            "$ref": "#/definitions/LoginIdPasswordParametersModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "LoginIdPasswordParametersModel",
                        "schema": {
                            "$ref": "#/definitions/LoginIdPasswordParametersModel"
                        }
                    }
                }
            }
        },
        "/LoginParameters/{id}": {
            "put": {
                "tags": ["LoginParameters"],
                "summary": "Updates the modifed login parameter.",
                "operationId": "LoginParameters_Put",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Id",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "loginParameter",
                        "in": "body",
                        "description": "Login Id Password parameter",
                        "schema": {
                            "$ref": "#/definitions/LoginIdPasswordParametersModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "LoginIdPasswordParametersModel",
                        "schema": {
                            "$ref": "#/definitions/LoginIdPasswordParametersModel"
                        }
                    }
                }
            },
            "get": {
                "tags": ["LoginParameters"],
                "summary": "Provides the Login parameter for the specified type.",
                "operationId": "LoginParameters_Defaults",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "isCompanyParameter",
                        "in": "query",
                        "required": true,
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "LoginIdPasswordParametersModel",
                        "schema": {
                            "$ref": "#/definitions/LoginIdPasswordParametersModel"
                        }
                    }
                }
            }
        },
        "/Navigations": {
            "get": {
                "tags": ["Navigations"],
                "summary": "Gets navigation menu.",
                "operationId": "Navigations_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The NavigationMenuModel",
                        "schema": {
                            "$ref": "#/definitions/NavigationMenuModel"
                        }
                    }
                }
            }
        },
        "/navigations/UpdateInstitution/{institutionId}": {
            "post": {
                "tags": ["Navigations"],
                "summary": "Update institution.",
                "operationId": "Navigations_UpdateInstitution",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "institutionId",
                        "in": "path",
                        "required": true,
                        "description": "THe institution id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The UpdateSsoUserInstitutionModel",
                        "schema": {
                            "$ref": "#/definitions/UpdateSsoUserInstitutionModel"
                        }
                    }
                }
            }
        },
        "/navigations/AuditMenulessUserActivity/{menulessNavigationId}": {
            "post": {
                "tags": ["Navigations"],
                "summary": "Save menu user activity.",
                "operationId": "Navigations_AuditMenulessUserActivity",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "menulessNavigationId",
                        "in": "path",
                        "required": true,
                        "description": "The menu less navigation id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OkResult"
                        }
                    }
                }
            }
        },
        "/navigations/auditUserActivity/{navigationKey}": {
            "post": {
                "tags": ["Navigations"],
                "summary": "Save audit user activity",
                "operationId": "Navigations_AuditUserActivity",
                "parameters": [
                    {
                        "type": "string",
                        "name": "navigationKey",
                        "in": "path",
                        "required": true,
                        "description": "The navigation key.",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OkResult"
                        }
                    }
                }
            }
        },
        "/NotificationConfiguration": {
            "get": {
                "tags": ["NotificationConfiguration"],
                "summary": "Returns FI notification configuration.",
                "operationId": "NotificationConfiguration_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The NotificationConfigurationModel instance.",
                        "schema": {
                            "$ref": "#/definitions/NotificationConfigurationModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["NotificationConfiguration"],
                "summary": "Updates FI notification configurations.",
                "operationId": "NotificationConfiguration_Put",
                "parameters": [
                    {
                        "name": "notificationConfiguration",
                        "in": "body",
                        "description": "The NotificationConfigurationModel instance.",
                        "schema": {
                            "$ref": "#/definitions/NotificationConfigurationModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The NotificationConfigurationModel instance.",
                        "schema": {
                            "$ref": "#/definitions/NotificationConfigurationModel"
                        }
                    }
                }
            }
        },
        "/challenge-groups": {
            "get": {
                "tags": ["ChallengeGroups"],
                "summary": "Gets all the challenge Groups.",
                "operationId": "ChallengeGroups_GetAll",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection ChallengeGroupModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChallengeGroupModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["ChallengeGroups"],
                "summary": "Saves the challenge Group Detail to the Group List.",
                "operationId": "ChallengeGroups_Post",
                "parameters": [
                    {
                        "name": "challengeGroupDetail",
                        "in": "body",
                        "description": "ChallengeGroupDetail",
                        "schema": {
                            "$ref": "#/definitions/ChallengeGroupDetailModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "int id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "put": {
                "tags": ["ChallengeGroups"],
                "operationId": "ChallengeGroups_Put",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "int id",
                        "schema": {
                            "$ref": "#/definitions/ChallengeGroupModel"
                        }
                    }
                }
            }
        },
        "/challenge-groups/{id}": {
            "get": {
                "tags": ["ChallengeGroups"],
                "summary": "Gets the challenge Group Detail.",
                "operationId": "ChallengeGroups_Get",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Group Id",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection ChallengeGroupModel",
                        "schema": {
                            "$ref": "#/definitions/ChallengeGroupModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["ChallengeGroups"],
                "summary": "Updates the Challenge Group Detail Object.",
                "operationId": "ChallengeGroups_Put2",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "challengeGroupDetail",
                        "in": "body",
                        "description": "ChallengeGroupDetail",
                        "schema": {
                            "$ref": "#/definitions/ChallengeGroupDetailModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "int id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["ChallengeGroups"],
                "summary": "Deletes the challenge group detail object.",
                "operationId": "ChallengeGroups_Delete",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "bool",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/challenge-groups/{id}/companies": {
            "get": {
                "tags": ["ChallengeGroups"],
                "summary": "Gets the Challenge Group Companies.",
                "operationId": "ChallengeGroups_GetGroupCOmpanies",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection ChallengeGroupModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChallengeGroupCompanyModel"
                            }
                        }
                    }
                }
            }
        },
        "/ProductFeatureConfigurations": {
            "get": {
                "tags": ["ProductFeatureConfigurations"],
                "summary": "Provides the Product features available for the FI.",
                "operationId": "ProductFeatureConfigurations_GetAll",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A List of FiProductFeatureModel objects describing the available product features.\n            ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FiProductFeatureModel"
                            }
                        }
                    }
                }
            }
        },
        "/ProductFeatureConfigurations/{id}/ChangeStatus/{status}": {
            "post": {
                "tags": ["ProductFeatureConfigurations"],
                "summary": "Provides the endpoint to change the status for the specified Product Feature Id.",
                "operationId": "ProductFeatureConfigurations_ChangeStatus",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Institution Product Type ID.\n            ",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "description": "New status for the Product Feature.\n            ",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A new instance of the FiProductFeatureModel class.\n            ",
                        "schema": {
                            "$ref": "#/definitions/FiProductFeatureModel"
                        }
                    }
                }
            }
        },
        "/ProductFeatureConfigurations/{id}": {
            "get": {
                "tags": ["ProductFeatureConfigurations"],
                "summary": "Provides the Product Feature for the specified Id.",
                "operationId": "ProductFeatureConfigurations_Get",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Institution Product Type ID.\n            ",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A List of FiProductFeatureModel objects describing the available product features.\n            ",
                        "schema": {
                            "$ref": "#/definitions/FiProductFeatureModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["ProductFeatureConfigurations"],
                "summary": "Provides the endpoint to update the parameters for the Product Feature.",
                "operationId": "ProductFeatureConfigurations_Put",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Institution Product Type ID.\n            ",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "productFeature",
                        "in": "body",
                        "description": "An instance of FiProductFeatureModel providing values to be updated.\n            ",
                        "schema": {
                            "$ref": "#/definitions/FiProductFeatureModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A new instance of the FiProductFeatureModel class.\n            ",
                        "schema": {
                            "$ref": "#/definitions/FiProductFeatureModel"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BadRequestResult"
                        }
                    }
                }
            }
        },
        "/productFeatureConfigurations/getByName/{name}": {
            "get": {
                "tags": ["ProductFeatureConfigurations"],
                "summary": "Provides the Product Feature for the specified Type.",
                "operationId": "ProductFeatureConfigurations_GetByName",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "description": "String value for ProductTypesEnum\nindicating the product feature type to return.\n            ",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A new instance of the FiProductFeatureModel class.\n            ",
                        "schema": {
                            "$ref": "#/definitions/FiProductFeatureModel"
                        }
                    }
                }
            }
        },
        "/productFeatureConfigurations/UpdateInstitutionArpProduct": {
            "post": {
                "tags": ["ProductFeatureConfigurations"],
                "summary": "Provides the endpoint to update the Account Reconciliation Processing\n(ARP/Positive Pay) configuration for the financial institution.",
                "operationId": "ProductFeatureConfigurations_UpdateInstitutionArpProduct",
                "parameters": [
                    {
                        "name": "fiArpProductModel",
                        "in": "body",
                        "description": "An instance of FiArpProductFeatureModel providing values to be updated.\n            ",
                        "schema": {
                            "$ref": "#/definitions/FiArpProductFeatureModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A new instance of the FiProductFeatureModel class.\n            ",
                        "schema": {
                            "$ref": "#/definitions/FiProductFeatureModel"
                        }
                    }
                }
            }
        },
        "/productFeatureConfigurations/UpdateRemoteDepositProduct": {
            "post": {
                "tags": ["ProductFeatureConfigurations"],
                "summary": "Provides the endpoint to update the Remote Deposit product\nconfiguration for the financial institution.",
                "operationId": "ProductFeatureConfigurations_UpdateRemoteDepositProduct",
                "parameters": [
                    {
                        "name": "remoteDepositProductModel",
                        "in": "body",
                        "description": "An instance of UpdateRemoteDepositProductModel providing values to be updated.\n            ",
                        "schema": {
                            "$ref": "#/definitions/UpdateRemoteDepositProductModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Http Status 200 on successful update.\n            ",
                        "schema": {
                            "$ref": "#/definitions/OkResult"
                        }
                    }
                }
            }
        },
        "/productFeatureConfigurations/UploadAchStateTaxCodes": {
            "post": {
                "tags": ["ProductFeatureConfigurations"],
                "summary": "Provides the endpoint to upload ACH State Tax Codes.",
                "operationId": "ProductFeatureConfigurations_UploadAchStateTaxCodes",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A new instance of UploadStateTaxCodeFileResponseModel.\n            ",
                        "schema": {
                            "$ref": "#/definitions/UploadStateTaxCodeFileResponseModel"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BadRequestResult"
                        }
                    }
                }
            }
        },
        "/productFeatureConfigurations/DownloadAchStateTaxCodes": {
            "get": {
                "tags": ["ProductFeatureConfigurations"],
                "summary": "Provides the endpoint to download ACH State Tax Codes.",
                "operationId": "ProductFeatureConfigurations_DownloadAchStateTaxCodes",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A new instance of FileModel.\n            ",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/productFeatureConfigurations/GetAchStateTaxCodeFileMetadata": {
            "get": {
                "tags": ["ProductFeatureConfigurations"],
                "summary": "Provides the endpoint to download ACH State Tax Code file metadata.",
                "operationId": "ProductFeatureConfigurations_GetAchStateTaxCodeFileMetadata",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A new instance of StateTaxCodeFileMetadataModel.\n            ",
                        "schema": {
                            "$ref": "#/definitions/StateTaxCodeFileMetadataModel"
                        }
                    }
                }
            }
        },
        "/corpayProductFeatureConfigurations": {
            "get": {
                "tags": ["ProductFeatureConfigurations"],
                "summary": "Provides the endpoint to get the corpay product feature configuration for the financial institution.",
                "operationId": "ProductFeatureConfigurations_GetCorpayProductFeature",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A new instance of FiCorpayProductModel\n            ",
                        "schema": {
                            "$ref": "#/definitions/FiCorpayProductModel"
                        }
                    }
                }
            },
            "post": {
                "tags": ["ProductFeatureConfigurations"],
                "summary": "Provides the endpoint to save the corpay product feature configuration for the financial institution.",
                "operationId": "ProductFeatureConfigurations_SaveCorpayProductFeature",
                "parameters": [
                    {
                        "name": "fiCorpayProductModel",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/FiCorpayProductModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A new instance of FiCorpayProductModel\n            ",
                        "schema": {
                            "$ref": "#/definitions/FiCorpayProductResponseModel"
                        }
                    }
                }
            }
        },
        "/agileticsSsoProductFeatureConfigurations/{id}": {
            "get": {
                "tags": ["ProductFeatureConfigurations"],
                "summary": "Provides the endpoint to get the Agiletics Web Escrow product feature configuration for the financial institution.",
                "operationId": "ProductFeatureConfigurations_GetAgileticsSsoProductFeature",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Institution Product Type ID.\n            ",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A new instance of FiAgileticsSsoProductModel\n            ",
                        "schema": {
                            "$ref": "#/definitions/FiAgileticsSsoProductModel"
                        }
                    }
                }
            }
        },
        "/agileticsSsoProductFeatureConfigurations": {
            "post": {
                "tags": ["ProductFeatureConfigurations"],
                "summary": "Provides the endpoint to save the agiletics sso product feature configuration for the financial institution.",
                "operationId": "ProductFeatureConfigurations_SaveAgileticsSsoProductFeature",
                "parameters": [
                    {
                        "name": "fiAgileticsSsoProductModel",
                        "in": "body",
                        "description": "An instance of FiAgileticsSsoProductModel providing values to be updated.\n            ",
                        "schema": {
                            "$ref": "#/definitions/FiAgileticsSsoProductModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A new instance of FiAgileticsSsoProductResponseModel\n            ",
                        "schema": {
                            "$ref": "#/definitions/FiAgileticsSsoProductResponseModel"
                        }
                    }
                }
            }
        },
        "/productFeatureConfigurations/checkQfxProductStatusForFi": {
            "get": {
                "tags": ["ProductFeatureConfigurations"],
                "summary": "Check the status of Qfx enabled flag in institution option table.",
                "operationId": "ProductFeatureConfigurations_CheckQfxProductStatusForFi",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A new instance of FiQfxProductModel\n            ",
                        "schema": {
                            "$ref": "#/definitions/FiQfxProductModel"
                        }
                    }
                }
            }
        },
        "/ResourceCenterConfigurations": {
            "get": {
                "tags": ["ResourceCenterConfigurations"],
                "summary": "Returns the Resource center configurations.",
                "operationId": "ResourceCenterConfigurations_GetAll",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection ResourceConfigurationModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResourceConfigurationModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["ResourceCenterConfigurations"],
                "summary": "Creates the Resource center.",
                "operationId": "ResourceCenterConfigurations_Post",
                "parameters": [
                    {
                        "name": "resourceConfigurationModel",
                        "in": "body",
                        "description": "Resource center to added.",
                        "schema": {
                            "$ref": "#/definitions/ResourceConfigurationModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ResourceConfigurationModel",
                        "schema": {
                            "$ref": "#/definitions/ResourceConfigurationModel"
                        }
                    }
                }
            }
        },
        "/ResourceCenterConfigurations/{id}": {
            "delete": {
                "tags": ["ResourceCenterConfigurations"],
                "summary": "Deletes the Resourcermation center for the specified Id.",
                "operationId": "ResourceCenterConfigurations_Delete",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Resource center id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "get": {
                "tags": ["ResourceCenterConfigurations"],
                "summary": "Returns the Resource center for the specified Resource center id.",
                "operationId": "ResourceCenterConfigurations_Get",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Resource center id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection ResourceConfigurationModel",
                        "schema": {
                            "$ref": "#/definitions/ResourceConfigurationModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["ResourceCenterConfigurations"],
                "summary": "Updates the passed Resource center.",
                "operationId": "ResourceCenterConfigurations_Put",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Resource center id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "resourceConfigurationModel",
                        "in": "body",
                        "description": "Resource center to be updated.",
                        "schema": {
                            "$ref": "#/definitions/ResourceConfigurationModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ResourceConfigurationModel",
                        "schema": {
                            "$ref": "#/definitions/ResourceConfigurationModel"
                        }
                    }
                }
            }
        },
        "/ResourceCenterConfigurations/Resequence": {
            "get": {
                "tags": ["ResourceCenterConfigurations"],
                "summary": "Returns the info center for the specified info center id.",
                "operationId": "ResourceCenterConfigurations_Resequence",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "description": "Info center id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "direction",
                        "in": "query",
                        "required": true,
                        "description": "up/down",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection ResourceConfigurationModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResourceConfigurationModel"
                            }
                        }
                    }
                }
            }
        },
        "/Roles": {
            "get": {
                "tags": ["Roles"],
                "summary": "Returns the roles.",
                "operationId": "Roles_GetAll",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection RoleModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RoleModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Roles"],
                "summary": "Create the passed role.",
                "operationId": "Roles_Post",
                "parameters": [
                    {
                        "name": "roleModel",
                        "in": "body",
                        "description": "Role to be persisted",
                        "schema": {
                            "$ref": "#/definitions/RoleModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "RoleModel",
                        "schema": {
                            "$ref": "#/definitions/RoleModel"
                        }
                    }
                }
            }
        },
        "/Roles/{id}": {
            "get": {
                "tags": ["Roles"],
                "summary": "Returns the role for the specified Id.",
                "operationId": "Roles_Get",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Role Id",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection RoleModel",
                        "schema": {
                            "$ref": "#/definitions/RoleModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["Roles"],
                "summary": "Update the passed role.",
                "operationId": "Roles_Put",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Role Id",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "roleModel",
                        "in": "body",
                        "description": "Role to be updated",
                        "schema": {
                            "$ref": "#/definitions/RoleModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "RoleModel",
                        "schema": {
                            "$ref": "#/definitions/RoleModel"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Roles"],
                "summary": "Delete the role for the specified Id.",
                "operationId": "Roles_Delete",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Role Id",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "bool",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/MessagingCenter": {
            "get": {
                "tags": ["MessagingCenter"],
                "summary": "Gets messages",
                "operationId": "MessagingCenter_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The InstitutionMessagingCenterModel instance.",
                        "schema": {
                            "$ref": "#/definitions/LoginIdPasswordParametersModel"
                        }
                    }
                }
            },
            "post": {
                "tags": ["MessagingCenter"],
                "summary": "Save messages",
                "operationId": "MessagingCenter_Post",
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "The InstitutionMessagingCenterModel instance.",
                        "schema": {
                            "$ref": "#/definitions/InstitutionMessagingCenterModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The InstitutionMessagingCenterModel instance.",
                        "schema": {
                            "$ref": "#/definitions/InstitutionMessagingCenterModel"
                        }
                    }
                }
            }
        },
        "/messagingcenter/getmessagecategories": {
            "get": {
                "tags": ["MessagingCenter"],
                "summary": "Gets message categories.",
                "operationId": "MessagingCenter_GetMessageCategories",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The collection of MessageCategoryModel/>",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MessageCategoryModel"
                            }
                        }
                    }
                }
            }
        },
        "/messagingcenter/savemessage": {
            "post": {
                "tags": ["MessagingCenter"],
                "summary": "Save messages",
                "operationId": "MessagingCenter_SaveMessage",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The MessageModel instance.",
                        "schema": {
                            "$ref": "#/definitions/MessageModel"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BadRequestResult"
                        }
                    }
                }
            }
        },
        "/messagingcenter/search": {
            "post": {
                "tags": ["MessagingCenter"],
                "summary": "Search messages",
                "operationId": "MessagingCenter_SearchMessages",
                "parameters": [
                    {
                        "name": "searchTerms",
                        "in": "body",
                        "description": "The MessageCenterSearchTerms instance.",
                        "schema": {
                            "$ref": "#/definitions/MessageCenterSearchTerms"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection of MessageModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MessageModel"
                            }
                        }
                    }
                }
            }
        },
        "/messagingcenter/update": {
            "post": {
                "tags": ["MessagingCenter"],
                "summary": "Update messages.",
                "operationId": "MessagingCenter_UpdateMessage",
                "parameters": [
                    {
                        "name": "update",
                        "in": "body",
                        "description": "The UpdateMessageModel instance.",
                        "schema": {
                            "$ref": "#/definitions/UpdateMessageModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "True or False.",
                        "schema": {
                            "$ref": "#/definitions/LoginIdPasswordParametersModel"
                        }
                    }
                }
            }
        },
        "/messagingcenter/messagethread/{id}": {
            "get": {
                "tags": ["MessagingCenter"],
                "summary": "Gets message threads by id.",
                "operationId": "MessagingCenter_GetMessageThread",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Id",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The collection of MessageModel.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MessageModel"
                            }
                        }
                    }
                }
            }
        },
        "/messagingcenter/downloadattachment/{id}": {
            "get": {
                "tags": ["MessagingCenter"],
                "summary": "Download attachments.",
                "operationId": "MessagingCenter_DownloadAttachment",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "THe attachment id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The attachment.",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/secure-challenge/update-status": {
            "post": {
                "tags": ["SecureChallenge"],
                "summary": "Updates secure challenge.",
                "operationId": "SecureChallenge_UpdateStatus",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "query",
                        "required": true,
                        "description": "The company id",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "isSecureChallengeEnabled",
                        "in": "query",
                        "required": true,
                        "description": "True of False.",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The CompanyAuthenticationSettingsModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyAuthenticationSettingsModel"
                        }
                    }
                }
            }
        },
        "/secure-challenge/update-challenge-method": {
            "post": {
                "tags": ["SecureChallenge"],
                "summary": "Updates secure challenge method.",
                "operationId": "SecureChallenge_UpdateChallengeMethodType",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "query",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "challengeMethodType",
                        "in": "query",
                        "required": true,
                        "description": "The challenge method type.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The IHttpActionResult",
                        "schema": {
                            "$ref": "#/definitions/OkResult"
                        }
                    }
                }
            }
        },
        "/secure-challenge/update-challenge-group": {
            "post": {
                "tags": ["SecureChallenge"],
                "summary": "Updates the challenge group.",
                "operationId": "SecureChallenge_UpdateChallengeGroup",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "query",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "challengeGroupId",
                        "in": "query",
                        "required": true,
                        "description": "THe challenge group id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "THe CompanyAuthenticationSettingsModel.",
                        "schema": {
                            "$ref": "#/definitions/CompanyAuthenticationSettingsModel"
                        }
                    }
                }
            }
        },
        "/TransactionCodeGroups": {
            "get": {
                "tags": ["TransactionCodeGroups"],
                "summary": "Retrieves all the Transaction code groups.",
                "operationId": "TransactionCodeGroups_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "TransactionCodeGroupModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransactionCodeGroupModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["TransactionCodeGroups"],
                "summary": "Add a new Transaction code group.",
                "operationId": "TransactionCodeGroups_Post",
                "parameters": [
                    {
                        "name": "transactionCodeGroupMessage",
                        "in": "body",
                        "description": "Transaction Code Group to be added.",
                        "schema": {
                            "$ref": "#/definitions/TransactionCodeGroupModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "TransactionCodeGroupModel",
                        "schema": {
                            "$ref": "#/definitions/TransactionCodeGroupModel"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            }
        },
        "/TransactionCodeGroups/{id}": {
            "put": {
                "tags": ["TransactionCodeGroups"],
                "summary": "Updates the passed transaction code group.",
                "operationId": "TransactionCodeGroups_Put",
                "parameters": [
                    {
                        "name": "transactionCodeGroupMessage",
                        "in": "body",
                        "description": "Transaction code group message to be updated.",
                        "schema": {
                            "$ref": "#/definitions/TransactionCodeGroupModel"
                        },
                        "x-nullable": true
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Transaction code group id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "TransactionCodeGroupModel",
                        "schema": {
                            "$ref": "#/definitions/TransactionCodeGroupModel"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["TransactionCodeGroups"],
                "summary": "Deletes the transaction group for the specified Id.",
                "operationId": "TransactionCodeGroups_Delete",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Transaction code group id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/TransactionCodes": {
            "get": {
                "tags": ["TransactionCodes"],
                "summary": "Retrieves the synched Transaction Codes.",
                "operationId": "TransactionCodes_Get",
                "responses": {
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransactionCodeModel"
                            }
                        }
                    }
                }
            }
        },
        "/transactionCodes/syncdetails": {
            "get": {
                "tags": ["TransactionCodes"],
                "summary": "Retrieves the Transaction Code Details between channel and CORE.",
                "operationId": "TransactionCodes_SyncDetails",
                "responses": {
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransactionCodeModel"
                            }
                        }
                    }
                }
            }
        },
        "/TransactionCodes/getAnalysisTransactionCodesForInstitution": {
            "get": {
                "tags": ["TransactionCodes"],
                "summary": "Returns a listing of AnalysisTransactionCodes that have been assigned to an institution",
                "operationId": "TransactionCodes_GetAnalysisTransactionCodesForInstitution",
                "responses": {
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AnalysisTransactionCode"
                            }
                        }
                    }
                }
            }
        },
        "/TransactionCodes/getAnalysisTransactionTypes": {
            "get": {
                "tags": ["TransactionCodes"],
                "summary": "Returns a list of all transaction types",
                "operationId": "TransactionCodes_GetAnalysisTransactionTypes",
                "responses": {
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AnalysisTransactionType"
                            }
                        }
                    }
                }
            }
        },
        "/transactionCodes/company/{companyId}/category/{analysisTransactionTypeCategoryId}/getCustomTransactionCodesForCompany": {
            "get": {
                "tags": ["TransactionCodes"],
                "summary": "Returns a collection of all of the custom transaction codes for the requested company",
                "operationId": "TransactionCodes_GetCustomTransactionCodesForCompany",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "analysisTransactionTypeCategoryId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomTransactionCode"
                            }
                        }
                    }
                }
            }
        },
        "/transactionCodes/sync": {
            "post": {
                "tags": ["TransactionCodes"],
                "summary": "Imports the Transaction Code Changes between Channel and CORE.",
                "operationId": "TransactionCodes_Sync",
                "responses": {
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransactionCodeModel"
                            }
                        }
                    }
                }
            }
        },
        "/transactionCodes/SaveAnalysisTransactionCodes": {
            "post": {
                "tags": ["TransactionCodes"],
                "summary": "Saves the posted AnalysisTransactionCode's to the database",
                "operationId": "TransactionCodes_SaveAnalysisTransactionCodes",
                "parameters": [
                    {
                        "name": "analysisTransactionCodes",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AnalysisTransactionCode"
                            }
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AnalysisTransactionCode"
                            }
                        }
                    }
                }
            }
        },
        "/transactionCodes/company/{companyId}/category/{analysisTransactionTypeCategoryId}/SaveCustomTransactionCodes": {
            "post": {
                "tags": ["TransactionCodes"],
                "summary": "Posts custom transaction codes associated to a analysis transaction type category.",
                "operationId": "TransactionCodes_SaveCustomTransactionCodes",
                "parameters": [
                    {
                        "name": "customTransactionCodes",
                        "in": "body",
                        "description": "The ICollection`1 of CustomTransactionCode",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomTransactionCode"
                            }
                        },
                        "x-nullable": true
                    },
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "analysisTransactionTypeCategoryId",
                        "in": "path",
                        "required": true,
                        "description": "The analysisTransactionTypeCategoryId.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomTransactionCode"
                            }
                        }
                    }
                }
            }
        },
        "/TransactionCodes/{id}": {
            "put": {
                "tags": ["TransactionCodes"],
                "summary": "Updates the passed transaction code.",
                "operationId": "TransactionCodes_Put",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Transaction Code Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "transactionCodeModel",
                        "in": "body",
                        "description": "Transaction code to be updated.",
                        "schema": {
                            "$ref": "#/definitions/TransactionCodeModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "TransactionCodeModel",
                        "schema": {
                            "$ref": "#/definitions/TransactionCodeModel"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            }
        },
        "/transactionCodes/{id}/clone": {
            "put": {
                "tags": ["TransactionCodes"],
                "summary": "Clone the groups from the specified transaction code Id to the passed list of transaction code Ids.",
                "operationId": "TransactionCodes_Clone",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Transaction Code Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "transactionCodeIds",
                        "in": "body",
                        "description": "Transaction code ids to be cloned to.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LookupModel"
                            }
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/TransactionCodes/getOfxTransactionTypes": {
            "get": {
                "tags": ["TransactionCodes"],
                "summary": "Gets transaction codes for OFX",
                "operationId": "TransactionCodes_GetOfxTransactionTypes",
                "responses": {
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OfxTransactionTypeModel"
                            }
                        }
                    }
                }
            }
        },
        "/Xperience/SamlLogin": {
            "post": {
                "tags": ["Xperience"],
                "summary": "Attempts to log a user into BO using an Xperience SAML token.",
                "operationId": "Xperience_SamlLogin",
                "parameters": [
                    {
                        "name": "samlLoginRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SamlLoginRequest"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A Single SamlLoginResponse.",
                        "schema": {
                            "$ref": "#/definitions/SamlLoginResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": ["Users"],
                "summary": "Provides the user for the specified Id.",
                "operationId": "Users_Get",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "User Id",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserModel",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Users"],
                "summary": "Soft Delete the selected User.",
                "operationId": "Users_Delete",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Specified User Id",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "put": {
                "tags": ["Users"],
                "summary": "Updated the passed FI user.",
                "operationId": "Users_Put",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "User Id",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "userModel",
                        "in": "body",
                        "description": "User model to be updated",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserModel",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": ["Users"],
                "summary": "Retrieves the FI users.",
                "operationId": "Users_Get2",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserModel",
                        "schema": {
                            "$ref": "#/definitions/GetUsersModel"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Users"],
                "summary": "Adds the new FI user",
                "operationId": "Users_Post",
                "parameters": [
                    {
                        "name": "userModel",
                        "in": "body",
                        "description": "User to be added",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserModel",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            }
        },
        "/users/allusers": {
            "get": {
                "tags": ["Users"],
                "summary": "Retrieves all FI users including deleted users.",
                "operationId": "Users_GetAll",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserModel"
                            }
                        }
                    }
                }
            }
        },
        "/users/activeusers": {
            "get": {
                "tags": ["Users"],
                "summary": "Retrieves the Active FI users.",
                "operationId": "Users_GetActive",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserModel"
                            }
                        }
                    }
                }
            }
        },
        "/users/forgotpassword": {
            "post": {
                "tags": ["Users"],
                "summary": "Validates User for Forgot Password Functionality.\nIf the provided information is correct it will send an email,\notherwise returns false",
                "operationId": "Users_ForgotPassword",
                "parameters": [
                    {
                        "name": "userModel",
                        "in": "body",
                        "description": "User to be added",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "bool",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/Users/{id}/ResetPassword": {
            "post": {
                "tags": ["Users"],
                "summary": "Resets user password.",
                "operationId": "Users_ResetPassword",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The user id",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "True or False.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/Users/{id}/ManualResetPassword": {
            "post": {
                "tags": ["Users"],
                "summary": "Posts manual password reset.",
                "operationId": "Users_ManualResetPassword",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "password",
                        "in": "body",
                        "description": "The password.",
                        "schema": {
                            "$ref": "#/definitions/LookupModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "True or False.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/Users/{id}/ChangeStatus/{actionId}": {
            "post": {
                "tags": ["Users"],
                "summary": "Posts user change status.",
                "operationId": "Users_ChangeStatus",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "The Action Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/OkResult"
                        }
                    }
                }
            }
        },
        "/users/newusertimeaccess": {
            "get": {
                "tags": ["Users"],
                "summary": "Gets a User's Time Access",
                "operationId": "Users_GetUserTimeAccess",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserTimeAccess"
                        }
                    }
                }
            }
        },
        "/users/logintokendetail/{userId}": {
            "get": {
                "tags": ["Users"],
                "summary": "Gets user login  token details.",
                "operationId": "Users_GetUserLoginTokenDetail",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The User Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The UserLoginTokenDetailModel",
                        "schema": {
                            "$ref": "#/definitions/UserLoginTokenDetailModel"
                        }
                    }
                }
            }
        },
        "/users/UnlockSecureToken/{userId}/{recollectTokenCredentials}": {
            "post": {
                "tags": ["Users"],
                "summary": "Posts user unlock secure token.",
                "operationId": "Users_UnlockSecureToken",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The User Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "recollectTokenCredentials",
                        "in": "path",
                        "required": true,
                        "description": "True or False.",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/OkResult"
                        }
                    }
                }
            }
        },
        "/users/ResetSecureToken/{userId}": {
            "post": {
                "tags": ["Users"],
                "summary": "Resets user secure token.",
                "operationId": "Users_ResetSecureToken",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The User Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Success.",
                        "schema": {
                            "$ref": "#/definitions/OkResult"
                        }
                    }
                }
            }
        },
        "/users/channel": {
            "get": {
                "tags": ["Users"],
                "summary": "Gets channel users.",
                "operationId": "Users_GetChannelUsers",
                "parameters": [
                    {
                        "type": "array",
                        "name": "companyIds",
                        "in": "query",
                        "description": "The  array of company ids.",
                        "collectionFormat": "multi",
                        "x-nullable": true,
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "type": "array",
                        "name": "companyUniqueIds",
                        "in": "query",
                        "description": "The array of company unique ids.",
                        "collectionFormat": "multi",
                        "x-nullable": true,
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection of UserModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserModel"
                            }
                        }
                    }
                }
            }
        },
        "/Users/ChannelSearch": {
            "post": {
                "tags": ["Users"],
                "summary": "Searches for channel users that match the criteria in the request.",
                "operationId": "Users_SearchChannelUsers",
                "parameters": [
                    {
                        "name": "searchChannelUsersModel",
                        "in": "body",
                        "description": "Defines the criteria used to search for the users.\n            ",
                        "schema": {
                            "$ref": "#/definitions/SearchChannelUsersModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A list of channel users that match the search criteria.\n            ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserModel"
                            }
                        }
                    }
                }
            }
        },
        "/users/search": {
            "post": {
                "tags": ["Users"],
                "summary": "Searches for users that match the criteria in the request.",
                "operationId": "Users_SearchUsers",
                "parameters": [
                    {
                        "name": "searchUsersFilter",
                        "in": "body",
                        "description": "The SearchUsersFilter instance.",
                        "schema": {
                            "$ref": "#/definitions/SearchUsersFilter"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The SearchUsersDataPage instance.",
                        "schema": {
                            "$ref": "#/definitions/SearchUsersDataPage"
                        }
                    }
                }
            }
        },
        "/users/usertimeaccess": {
            "get": {
                "tags": ["Users"],
                "summary": "Gets the current users time access details.",
                "description": "This will return the current users time access details which include if the user has a time access restriction and,\nif they do, the details of that restriction.",
                "operationId": "Users_GetCurrentUserTimeAccess",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Instance of CurrentUserTimeAccess",
                        "schema": {
                            "$ref": "#/definitions/CurrentUserTimeAccess"
                        }
                    }
                }
            }
        },
        "/users/saveuseractivity": {
            "post": {
                "tags": ["Users"],
                "summary": "Saves user activity",
                "operationId": "Users_SaveUserActivity",
                "parameters": [
                    {
                        "name": "saveUserActivityRequest",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SaveUserActivityRequest"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BaseResponse"
                        }
                    }
                }
            }
        },
        "/users/searchchanneluser": {
            "post": {
                "tags": ["Users"],
                "summary": "Searches for company users that match the filter criteria in the request.",
                "operationId": "Users_SearchAllChannelUser",
                "parameters": [
                    {
                        "name": "channelUserSearchFilter",
                        "in": "body",
                        "description": "The ChannelUserSearchFilter instance.",
                        "schema": {
                            "$ref": "#/definitions/ChannelUserSearchFilter"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The ChannelUserModelCollection instance.",
                        "schema": {
                            "$ref": "#/definitions/ChannelUserModelCollection"
                        }
                    }
                }
            }
        },
        "/warmup": {
            "get": {
                "tags": ["Warmup"],
                "summary": "Warmup Action",
                "operationId": "Warmup_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "string",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BadRequestResult"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/ProcessingTimes": {
            "get": {
                "tags": ["ProcessingTimes"],
                "summary": "Gets FI processing time.",
                "operationId": "ProcessingTimes_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The ProcessingTimesConfigurationModel instance.",
                        "schema": {
                            "$ref": "#/definitions/ProcessingTimesConfigurationModel"
                        }
                    }
                }
            }
        },
        "/ProcessingTimes/{id}": {
            "put": {
                "tags": ["ProcessingTimes"],
                "summary": "Updates FI processing time.",
                "operationId": "ProcessingTimes_Put",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "processingTimes",
                        "in": "body",
                        "description": "The ProductFeatureProcessingTimesModel instance.",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureProcessingTimesModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The ProcessingTimesConfigurationModel instance.",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureProcessingTimesModel"
                        }
                    }
                }
            },
            "get": {
                "tags": ["ProcessingTimes"],
                "summary": "Gets processing time.",
                "operationId": "ProcessingTimes_Get2",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The ProcessingTimesConfigurationModel instance.",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureProcessingTimesModel"
                        }
                    }
                }
            }
        },
        "/processingTimes/timeZones": {
            "get": {
                "tags": ["ProcessingTimes"],
                "summary": "Gets FI time zone.",
                "operationId": "ProcessingTimes_GetTimeZones",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Time zone",
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                }
            }
        },
        "/ProcessingTimes/TimeZone": {
            "put": {
                "tags": ["ProcessingTimes"],
                "summary": "Updates FI time zone information.",
                "operationId": "ProcessingTimes_UpdateTimeZone",
                "parameters": [
                    {
                        "name": "timeZoneModel",
                        "in": "body",
                        "description": "The TimeZoneModel instance.",
                        "schema": {
                            "$ref": "#/definitions/TimeZoneModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OkResult"
                        }
                    }
                }
            }
        },
        "/Companies": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns the companies specified by the Search criteria.",
                "operationId": "Companies_Get",
                "parameters": [
                    {
                        "type": "string",
                        "name": "searchType",
                        "in": "query",
                        "required": true,
                        "description": "Type for the search criterion.",
                        "x-nullable": true
                    },
                    {
                        "type": "string",
                        "name": "searchValue",
                        "in": "query",
                        "required": true,
                        "description": "Value of the search type.",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection of CompanyModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanySearchModel"
                            }
                        }
                    }
                }
            }
        },
        "/Companies/GetNonOnboardedCompany/{companyType}": {
            "post": {
                "tags": ["Companies"],
                "summary": "Returns the company from CORE for the specified CIF Number.",
                "operationId": "Companies_GetNonOnboardedCompany",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyType",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "cifNumber",
                        "in": "body",
                        "description": "Unique Core id for an Company.",
                        "schema": {
                            "$ref": "#/definitions/LookupModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyModel"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/GetOnboardedCompany/{companyType}": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns a company that has been onboarded and added to Treasury.",
                "operationId": "Companies_GetOnboardedCompany",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "companyType",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyModel"
                        }
                    }
                }
            }
        },
        "/companies/{id}/UniqueId/{companyUniqueId}": {
            "post": {
                "tags": ["Companies"],
                "summary": "Update the Company Unique ID for the specified Company Id.",
                "operationId": "Companies_UpdateCompanyUniqueId",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "companyUniqueId",
                        "in": "path",
                        "required": true,
                        "description": "Company Unique Id",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyModel"
                        }
                    }
                }
            }
        },
        "/companies/getcompaniesbyfi": {
            "get": {
                "tags": ["Companies"],
                "summary": "Get a list of companies by FI",
                "operationId": "Companies_GetCompaniesByFi",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection CompanyModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyModel"
                            }
                        }
                    }
                }
            }
        },
        "/companies/onboard": {
            "post": {
                "tags": ["Companies"],
                "summary": "On-boards the Company for the specified Id (CIF Number) to Channel.",
                "operationId": "Companies_Onboard",
                "parameters": [
                    {
                        "name": "companyModel",
                        "in": "body",
                        "description": "A Company model with a proper Unique ID",
                        "schema": {
                            "$ref": "#/definitions/CompanyModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyModel"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/Status": {
            "put": {
                "tags": ["Companies"],
                "summary": "Updates the Status of the Company.",
                "operationId": "Companies_Status",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "companyModel",
                        "in": "body",
                        "description": "Company model to be persisted.",
                        "schema": {
                            "$ref": "#/definitions/CompanyModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyModel"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/Accounts": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns the Company accounts for the specified Company Id.",
                "operationId": "Companies_AccountsAllGET",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyAccountModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyAccountModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Companies"],
                "summary": "Add the passed Account Ids to the specified company.",
                "operationId": "Companies_AccountsAllPOST",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "activate",
                        "in": "query",
                        "required": true,
                        "description": "Activate accounts when added",
                        "x-nullable": false
                    },
                    {
                        "name": "accounts",
                        "in": "body",
                        "description": "Account Ids to be added to the Company.",
                        "schema": {
                            "$ref": "#/definitions/LookupListModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyAccountModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyAccountModel"
                            }
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            }
        },
        "/companies/{companyId}/getAccountsForAnalysisTransactionType/{analysisTransactionTypeId}": {
            "get": {
                "tags": ["Companies"],
                "summary": "Gets accounts for given analysis transaction type.",
                "operationId": "Companies_GetAccountsForAnalysisTransactionType",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "analysisTransactionTypeId",
                        "in": "path",
                        "required": true,
                        "description": "The analysisTransactionTypeId.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection of CompanyAccountModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyAccountModel"
                            }
                        }
                    }
                }
            }
        },
        "/companies/{id}/depositAccounts": {
            "get": {
                "tags": ["Companies"],
                "summary": "Gets deposit accounts.",
                "operationId": "Companies_DepositAccounts",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection of CompanyAccountModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyAccountModel"
                            }
                        }
                    }
                }
            }
        },
        "/companies/{id}/accounts/{getValidCoreAccounts}": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns the Company accounts for the specified Company Id.",
                "operationId": "Companies_AccountsAllGET2",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "getValidCoreAccounts",
                        "in": "path",
                        "required": true,
                        "description": "Get only Valid Core accounts or All",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyAccountModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyAccountModel"
                            }
                        }
                    }
                }
            }
        },
        "/Companies/{id}/Accounts/{actionId}": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns the Accounts for the specified Account Id.",
                "operationId": "Companies_AccountsGET",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "Company Account Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyAccountModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyAccountModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["Companies"],
                "summary": "Updates the Account with the passed information.",
                "operationId": "Companies_AccountsPUT",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "Company Account Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "account",
                        "in": "body",
                        "description": "Account model to be updated.",
                        "schema": {
                            "$ref": "#/definitions/CompanyAccountModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyAccountModel",
                        "schema": {
                            "$ref": "#/definitions/OkResult"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            }
        },
        "/companies/{companyId}/accountstatus/{accountId}/{status}": {
            "post": {
                "tags": ["Companies"],
                "summary": "Updates the Company Account status for the specified Id.",
                "operationId": "Companies_AccountStatus",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "description": "Company Account Id to be modified.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "description": "Modified Company Account Status.",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyAccountModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyAccountModel"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/Limits": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns the Company Limit for the specified Company Id.",
                "operationId": "Companies_LimitsGET",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyLimitModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyLimitModel"
                        }
                    }
                }
            },
            "post": {
                "tags": ["Companies"],
                "summary": "Adds the Company Limit.",
                "operationId": "Companies_LimitsPOST",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "companyLimit",
                        "in": "body",
                        "description": "Company Limit model to be updated.",
                        "schema": {
                            "$ref": "#/definitions/CompanyLimitModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyLimitModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyLimitModel"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/Limits/{actionId}": {
            "put": {
                "tags": ["Companies"],
                "summary": "Updates the Company Limit.",
                "operationId": "Companies_LimitsPUT",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "companyLimit",
                        "in": "body",
                        "description": "Company Limit model to be updated.",
                        "schema": {
                            "$ref": "#/definitions/CompanyLimitModel"
                        },
                        "x-nullable": true
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "Company Limit Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyLimitModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyLimitModel"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            }
        },
        "/companies/{id}/positivePayProduct/{productId}": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns Positive Pay product feature for the specified Company Id.\nNote : this is separate from 'generic' product feature retrieval because PosPay needs a consistent\nmodel for both 'add' and 'edit' scenarios.  Other products typically return an FI model for 'add'\nand a company product model for 'edit'.\nWhen adding product : productFeatureId will be 0\nWhen editing product: productFeatureId will be greater than 0",
                "operationId": "Companies_GetPositivePayProductFeature",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "description": "Identifies existing product feature (if greater than zero)",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ProductFeatureModel",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureModel"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/ProductFeatures": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns the Product Features for the specified Company Id.",
                "operationId": "Companies_ProductFeaturesAll",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection ProductFeatureModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductFeatureModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Companies"],
                "summary": "Adds the Product Feature to the specified Company.",
                "operationId": "Companies_ProductFeaturesPOST",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "productFeature",
                        "in": "body",
                        "description": "Product Feature model to be persisted.",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection ProductFeatureModel",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureModel"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/ProductFeatures/{actionId}": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns Product Feature for the specified Id.",
                "operationId": "Companies_ProductFeaturesGET",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "Product Feature Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection ProductFeatureModel",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["Companies"],
                "summary": "Updates the Product Feature with the passed information.",
                "operationId": "Companies_ProductFeaturesPUT",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "Product Feature Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "productFeature",
                        "in": "body",
                        "description": "Product Feature model to be persisted.",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection ProductFeatureModel",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureModel"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            }
        },
        "/companies/{id}/ssoProductFeatures": {
            "post": {
                "tags": ["Companies"],
                "summary": "Add the Sso Product Feature with the passed information.",
                "operationId": "Companies_SsoProductFeaturesPOST",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "ssoProductModel",
                        "in": "body",
                        "description": "The SsoProductModelSso Product Feature model to be added.",
                        "schema": {
                            "$ref": "#/definitions/SsoProductModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The SsoProductResponseModel instance.",
                        "schema": {
                            "$ref": "#/definitions/SsoProductResponseModel"
                        }
                    }
                }
            }
        },
        "/companies/{id}/ssoProductFeatures/{actionId}": {
            "put": {
                "tags": ["Companies"],
                "summary": "Updates the Sso Product Feature with the passed information.",
                "operationId": "Companies_SsoProductFeaturesPUT",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "Sso Product Feature Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "ssoProductModel",
                        "in": "body",
                        "description": "The SsoProductModelSso Product Feature model to be added.",
                        "schema": {
                            "$ref": "#/definitions/SsoProductModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The SsoProductResponseModel instance.",
                        "schema": {
                            "$ref": "#/definitions/SsoProductResponseModel"
                        }
                    }
                }
            },
            "get": {
                "tags": ["Companies"],
                "summary": "Returns Sso Product Feature for the specified Id.",
                "operationId": "Companies_SsoProductFeaturesGET",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "Sso Product Feature Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The SsoProductResponseModel instance.",
                        "schema": {
                            "$ref": "#/definitions/SsoProductModel"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/ProductStatus/{actionId}": {
            "post": {
                "tags": ["Companies"],
                "summary": "Updates the status for the specified Product Feature.",
                "operationId": "Companies_ProductStatus",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "Product Feature Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "status",
                        "in": "query",
                        "required": true,
                        "description": "Product Feature status to be modified.",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ProductFeatureModel",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureModel"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/AccountMapping": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns the accounts and the product association for the specified company Id.",
                "operationId": "Companies_AccountMappingGET",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "AccountProductsMappingDetailModel",
                        "schema": {
                            "$ref": "#/definitions/AccountProductsMappingDetailModel"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/AccountMapping/{actionId}": {
            "put": {
                "tags": ["Companies"],
                "summary": "Saves the relation between Accounts and Products for the specified company Id.",
                "operationId": "Companies_AccountMappingPUT",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "Account Product Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Account Product mapping to be modified.",
                        "schema": {
                            "$ref": "#/definitions/AccountProductsMappingDetailModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "AccountProductsMappingDetailModel",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/companies/{id}/{enrolledAndActive}/users": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns the Users for the specified Company Id.",
                "operationId": "Companies_UsersAll",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "enrolledAndActive",
                        "in": "path",
                        "required": true,
                        "description": "True if you only want users that are enrolled and active",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection UserSummaryModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserSummaryModel"
                            }
                        }
                    }
                }
            }
        },
        "/companies/{id}/users/{enrolledAndActive}": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns the Users for the specified Company Id.",
                "operationId": "Companies_GetUsers",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "enrolledAndActive",
                        "in": "path",
                        "required": true,
                        "description": "True if you only want users that are enrolled and active",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection UserSummaryModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserSummaryModel"
                            }
                        }
                    }
                }
            }
        },
        "/Companies/{id}/Users/{actionId}": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns the User for the specified Id.",
                "operationId": "Companies_Users",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "User Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection UserSummaryModel",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/Contacts": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns the Contact details for the specified Company Id.",
                "operationId": "Companies_ContactsAll",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection ContactInfoModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContactInfoModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Companies"],
                "summary": "Creates the Contact Information for the specified Company Id.",
                "operationId": "Companies_ContactsPOST",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "contactInfo",
                        "in": "body",
                        "description": "Contact Info model to be added.",
                        "schema": {
                            "$ref": "#/definitions/ContactInfoModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection ContactInfoModel",
                        "schema": {
                            "$ref": "#/definitions/ContactInfoModel"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/Contacts/{actionId}": {
            "put": {
                "tags": ["Companies"],
                "summary": "Updates the Contact Information for the specified Company Id.",
                "operationId": "Companies_ContactsPUT",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "Contact Info Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "contactInfo",
                        "in": "body",
                        "description": "Contact Info model to be added.",
                        "schema": {
                            "$ref": "#/definitions/ContactInfoModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection ContactInfoModel",
                        "schema": {
                            "$ref": "#/definitions/ContactInfoModel"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Companies"],
                "summary": "Deletes the passed contact for the specified Company Id.",
                "operationId": "Companies_ContactsDELETE",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "Contact Info Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection ContactInfoModel",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/UserAccounts": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns the User Company Accounts for the specified Company Id.",
                "operationId": "Companies_UserAccountsGET",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyAccountDetailModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyAccountDetailModel"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/UserAccounts/{actionId}": {
            "put": {
                "tags": ["Companies"],
                "summary": "Updates the User and associated accounts for the specified Company Id.",
                "operationId": "Companies_UserAccountsPUT",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "Company Account Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "userAccounts",
                        "in": "body",
                        "description": "User Account association to be persisted.",
                        "schema": {
                            "$ref": "#/definitions/CompanyAccountDetailModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyAccountDetailModel",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/Entitlements": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns the Product, Account, User and Permission relations for the specified Company Id.",
                "operationId": "Companies_EntitlementsAll",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ProductPermissionModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductAccountPermissionsModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Companies"],
                "summary": "Updates the entitlements i.e. relations between Product, Account, User and its Permissions.",
                "operationId": "Companies_Entitlements",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Persist Product Account Permission mapping.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductAccountPermissionsModel"
                            }
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ProductPermissionModel",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            }
        },
        "/companies/notonboardedcompanies": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns the companies specified by the Search criteria that are not onboarded.",
                "operationId": "Companies_NonOnboardedCompanies",
                "parameters": [
                    {
                        "type": "string",
                        "name": "searchType",
                        "in": "query",
                        "required": true,
                        "description": "Type for the search criterion.",
                        "x-nullable": true
                    },
                    {
                        "type": "string",
                        "name": "searchValue",
                        "in": "query",
                        "required": true,
                        "description": "Value of the search type.",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyModel"
                            }
                        }
                    }
                }
            }
        },
        "/companies/{id}/associatedCompanies": {
            "post": {
                "tags": ["Companies"],
                "summary": "Associates a CORE company with the holding company for the specified CIF Number.",
                "operationId": "Companies_AssociatedCompanies",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Company Id",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "cifNumber",
                        "in": "body",
                        "description": "CIF Number",
                        "schema": {
                            "$ref": "#/definitions/LookupModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "AssociatedCompanyModel",
                        "schema": {
                            "$ref": "#/definitions/AssociatedCompanyModel"
                        }
                    }
                }
            }
        },
        "/companies/superusers/{id}": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns super users.",
                "operationId": "Companies_SuperUsers",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Company Id",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "ICollection UserModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserModel"
                            }
                        }
                    }
                }
            }
        },
        "/companies/{id}/associatedcompanies": {
            "get": {
                "tags": ["Companies"],
                "summary": "Returns Associated Companies for the specified company id.",
                "operationId": "Companies_AssociatedCompaniesAll",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Company Id",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "AssociatedCompanyModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssociatedCompanyModel"
                            }
                        }
                    }
                }
            }
        },
        "/Companies/{id}/NewUserAccounts": {
            "post": {
                "tags": ["Companies"],
                "summary": "New User Accounts - Returns the user and account mapping that will be saved.",
                "operationId": "Companies_NewUserAccounts",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Company Id",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "Product Account Permission mapping",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductAccountPermissionsModel"
                            }
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            }
        },
        "/companies/{id}/authenticationSettings": {
            "put": {
                "tags": ["Companies"],
                "operationId": "Companies_AuthenticationSettings",
                "parameters": [
                    {
                        "name": "companyAuthenticationSettings",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CompanyAuthenticationSettingsModel"
                        },
                        "x-nullable": true
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyAuthenticationSettingsModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyAuthenticationSettingsModel"
                        }
                    }
                }
            }
        },
        "/companies/{id}/userAccountSettings": {
            "get": {
                "tags": ["Companies"],
                "operationId": "Companies_UserAccountSettingsGET",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyAccountSettingsModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyAccountSettingsModel"
                        }
                    }
                }
            },
            "put": {
                "tags": ["Companies"],
                "operationId": "Companies_UserAccountSettingsPUT",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "companyAccountSettings",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CompanyAccountSettingsModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "CompanyAccountSettingsModel",
                        "schema": {
                            "$ref": "#/definitions/CompanyAccountSettingsModel"
                        }
                    }
                }
            }
        },
        "/companies/{id}/users/{userId}/suspendAuthentication": {
            "put": {
                "tags": ["Companies"],
                "summary": "Suspends OOB for a user.",
                "operationId": "Companies_SuspendUserAuthentication",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "challengeSuspensionDuration",
                        "in": "query",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SuspendUserChallengeModel"
                        }
                    }
                }
            }
        },
        "/companies/{id}/users/{userId}/reenableUserAuthentication": {
            "put": {
                "tags": ["Companies"],
                "summary": "Reenable Challenge Authentication for a user.",
                "operationId": "Companies_ReenableUserAuthentication",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SuspendUserChallengeModel"
                        }
                    }
                }
            }
        },
        "/companies/{companyId}/getAvailableProducts": {
            "get": {
                "tags": ["Companies"],
                "summary": "Get a list of InstitutionProductTypes that have not been assigned to the given company.",
                "operationId": "Companies_GetAvailableProductsForCompany",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FiProductFeatureModel"
                            }
                        }
                    }
                }
            }
        },
        "/companies/GetAvailableRemoteDepositProductTypes": {
            "get": {
                "tags": ["Companies"],
                "summary": "Gets available remote deposits.",
                "operationId": "Companies_GetAvailableRemoteDepositProductTypes",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection of deposits.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                }
            }
        },
        "/Companies/{companyId}/AddRemoteDepositProduct": {
            "post": {
                "tags": ["Companies"],
                "summary": "Posts deposits for a given company.",
                "operationId": "Companies_AddRemoteDepositProduct",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "product",
                        "in": "body",
                        "description": "THe RemoteDepositProductModelinstance.",
                        "schema": {
                            "$ref": "#/definitions/RemoteDepositProductModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The RemoteDepositProductModel instance.",
                        "schema": {
                            "$ref": "#/definitions/RemoteDepositProductModel"
                        }
                    }
                }
            }
        },
        "/Companies/EditRemoteDepositProduct": {
            "put": {
                "tags": ["Companies"],
                "summary": "Updates remote deposits for a company.",
                "operationId": "Companies_EditRemoteDepositProduct",
                "parameters": [
                    {
                        "name": "product",
                        "in": "body",
                        "description": "The RemoteDepositProductModel instance.",
                        "schema": {
                            "$ref": "#/definitions/RemoteDepositProductModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The RemoteDepositProductModel instance.",
                        "schema": {
                            "$ref": "#/definitions/RemoteDepositProductModel"
                        }
                    }
                }
            }
        },
        "/companies/{companyId}/getIntuitOfxId": {
            "get": {
                "tags": ["Companies"],
                "summary": "Get the Intuit OFX id for a company if it exists",
                "operationId": "Companies_GetIntuitOfxID",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "HttpActionResult instance",
                        "schema": {
                            "$ref": "#/definitions/IntuitOfxModel"
                        }
                    }
                }
            }
        },
        "/companies/{companyId}/generateIntuitOfxIdForCompany": {
            "post": {
                "tags": ["Companies"],
                "summary": "Generate Intuit OFX id for a company",
                "operationId": "Companies_GenerateIntuitOfxIDForCompany",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "HttpActionResult instance",
                        "schema": {
                            "$ref": "#/definitions/IntuitOfxModel"
                        }
                    }
                }
            }
        },
        "/companies/{companyId}/getQfxEnabledFlag": {
            "get": {
                "tags": ["Companies"],
                "summary": "Get Qfx Enabled Flag for company",
                "operationId": "Companies_GetQfxEnabledFlag",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "HttpActionResult instance",
                        "schema": {
                            "$ref": "#/definitions/QfxProductModel"
                        }
                    }
                }
            }
        },
        "/companies/{companyId}/saveQfxCompanyFlag": {
            "post": {
                "tags": ["Companies"],
                "summary": "Saves Qfx Enabled Flag for company",
                "operationId": "Companies_SaveQfxCompanyFlag",
                "parameters": [
                    {
                        "type": "string",
                        "name": "newFlag",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    },
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "HttpActionResult instance",
                        "schema": {
                            "$ref": "#/definitions/OkResult"
                        }
                    }
                }
            }
        },
        "/companies/{companyId}/name": {
            "get": {
                "tags": ["Companies"],
                "summary": "Gets company name from id.",
                "operationId": "Companies_GetCompanyName",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The company name.",
                        "schema": {
                            "$ref": "#/definitions/CompanyModel"
                        }
                    }
                }
            }
        },
        "/Companies/{id}/ApprovalSettings": {
            "get": {
                "tags": ["Companies"],
                "summary": "Updates the User with the passed information.",
                "operationId": "Companies_ApprovalSettingsGET",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserApprovalSettings",
                        "schema": {
                            "$ref": "#/definitions/UserApprovalSettingsModel"
                        }
                    }
                }
            }
        },
        "/companies/{id}/approvalSettings/{approvalSettingsId}": {
            "put": {
                "tags": ["Companies"],
                "summary": "Updates company approval settings.",
                "operationId": "Companies_ApprovalSettingsPUT",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Unique Channel Company Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "approvalSettingsId",
                        "in": "path",
                        "required": true,
                        "description": "The approvalSettingsId.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "approvalSettings",
                        "in": "body",
                        "description": "The UserApprovalSettingsModel instance.",
                        "schema": {
                            "$ref": "#/definitions/UserApprovalSettingsModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserApprovalSettings",
                        "schema": {
                            "$ref": "#/definitions/UserApprovalSettingsModel"
                        }
                    }
                }
            }
        },
        "/companies/{id}/users": {
            "post": {
                "tags": ["Companies"],
                "summary": "Adds the new company user",
                "operationId": "Companies_Post",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "userModel",
                        "in": "body",
                        "description": "User to be added",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserModel",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            }
        },
        "/companies/{id}/users/{actionid}": {
            "put": {
                "tags": ["Companies"],
                "summary": "Updated the passed FI user.",
                "operationId": "Companies_Put",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "User Id",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "userModel",
                        "in": "body",
                        "description": "User model to be updated",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "UserModel",
                        "schema": {
                            "$ref": "#/definitions/UserModel"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ModelStateDictionary"
                        }
                    }
                }
            }
        },
        "/Accounts": {
            "get": {
                "tags": ["Accounts"],
                "summary": "Returns all the Accounts associated with Company from CORE.",
                "operationId": "Accounts_Get",
                "parameters": [
                    {
                        "type": "string",
                        "name": "accountType",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    },
                    {
                        "type": "string",
                        "name": "cifNumber",
                        "in": "query",
                        "required": true,
                        "description": "Unique Core id for an Company.",
                        "x-nullable": true
                    },
                    {
                        "type": "boolean",
                        "name": "includeHoldingCompanies",
                        "in": "query",
                        "required": true,
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "AccountModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountModel"
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{companyId}": {
            "get": {
                "tags": ["Accounts"],
                "summary": "Returns all the Accounts associated with Company from CORE.",
                "operationId": "Accounts_Get2",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "Unique Treasury id for an Company.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "accountType",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    },
                    {
                        "type": "boolean",
                        "name": "includeHoldingCompanies",
                        "in": "query",
                        "required": true,
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "AccountModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountModel"
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{companyId}/searchunrelatedaccounts": {
            "post": {
                "tags": ["Accounts"],
                "summary": "Returns  all unrelated accounts.",
                "operationId": "Accounts_SearchUnrelatedAccounts",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "THe UnrelatedAccountSearchModel instance",
                        "schema": {
                            "$ref": "#/definitions/UnrelatedAccountSearchModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The UnrelatedAccountSearchResultsModel instance.",
                        "schema": {
                            "$ref": "#/definitions/UnrelatedAccountSearchResultsModel"
                        }
                    }
                }
            }
        },
        "/accounts/{id}/toAccountPermissions": {
            "get": {
                "tags": ["Accounts"],
                "operationId": "Accounts_GetToAccountPermissions",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection ToAccountPermissionModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ToAccountPermissionModel"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Accounts"],
                "operationId": "Accounts_PutToAccountPermissions",
                "parameters": [
                    {
                        "name": "toAccountPermissions",
                        "in": "body",
                        "description": "To Account Permissions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ToAccountPermissionModel"
                            }
                        },
                        "x-nullable": true
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/WireCompanies/{id}/search": {
            "get": {
                "tags": ["WireCompanies"],
                "summary": "Search for Wire Companies for passed criteria.",
                "operationId": "WireCompanies_Get",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Parent Company Id",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "companyName",
                        "in": "query",
                        "required": true,
                        "description": "Contains search on Company Name",
                        "x-nullable": true
                    },
                    {
                        "type": "boolean",
                        "name": "isDli",
                        "in": "query",
                        "required": true,
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection WireCompanyModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireCompanyModel"
                            }
                        }
                    }
                }
            }
        },
        "/WireCompanies": {
            "get": {
                "tags": ["WireCompanies"],
                "summary": "Return accounts for specified wire company Id",
                "operationId": "WireCompanies_Accounts",
                "parameters": [
                    {
                        "type": "string",
                        "name": "coreCompanyId",
                        "in": "query",
                        "required": true,
                        "description": "Core Company Id",
                        "x-nullable": true
                    },
                    {
                        "type": "integer",
                        "name": "parentCompanyId",
                        "in": "query",
                        "required": true,
                        "description": "Parent CompanyId",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "isDli",
                        "in": "query",
                        "required": true,
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection WireCompanyAccountModel",
                        "schema": {
                            "$ref": "#/definitions/WireCompanyModel"
                        }
                    }
                }
            }
        },
        "/WireFileUploadReport": {
            "post": {
                "tags": ["WireFileUploadReport"],
                "summary": "Returns the wire file upload report results based on the parameters of the filter",
                "operationId": "WireFileUploadReport_WireFileUploadReport",
                "parameters": [
                    {
                        "name": "wireFileFilter",
                        "in": "body",
                        "description": "The filter values used to filter the report results\n            ",
                        "schema": {
                            "$ref": "#/definitions/WireFileFilterModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "returns a ReportModel`1. The structure contains report results\nand values used for paging.\n            ",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            },
            "put": {
                "tags": ["WireFileUploadReport"],
                "summary": "Saves the WireFileFilterModel as a custom report",
                "operationId": "WireFileUploadReport_SaveWireFileUploadReport",
                "parameters": [
                    {
                        "name": "wireFileFilter",
                        "in": "body",
                        "description": "A structure containing the name, type, id, and filters of the report to save.\n            ",
                        "schema": {
                            "$ref": "#/definitions/ReportFilterModelOfWireFileFilterModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Returns the same ReportFilterModel`1 that was passed into\nthe endpoint but with an updated ReportId\n            ",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            },
            "get": {
                "tags": ["WireFileUploadReport"],
                "summary": "Retrieves a saved WireFileFilterModel",
                "operationId": "WireFileUploadReport_GetWireFileUploadReport",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "reportId",
                        "in": "query",
                        "required": true,
                        "description": "The id of the report to retrieve\n            ",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "A ReportFilterModel`1 structure. It contains the\nname, type, id, and filters of the report you are retrieving.\n            ",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/WireFileUploadReport/Download": {
            "post": {
                "tags": ["WireFileUploadReport"],
                "summary": "Download the results of the wire file upload report in a supported format",
                "operationId": "WireFileUploadReport_DownloadWireFileUploadReport",
                "parameters": [
                    {
                        "name": "wireFileFilter",
                        "in": "body",
                        "description": "The filter values used to filter the report results\n            ",
                        "schema": {
                            "$ref": "#/definitions/WireFileFilterModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "returns a PDF or CSV file containing the report results.\n            ",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/wires/{id}/companies/{isDli}": {
            "get": {
                "tags": ["Wires"],
                "summary": "Returns the Companies for the specified wire Id.",
                "operationId": "Wires_CompaniesAll",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Wire Id",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "isDli",
                        "in": "path",
                        "required": true,
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection WireCompanyModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireCompanyModel"
                            }
                        }
                    }
                }
            }
        },
        "/wires/{id}/companieswithoutaccounts/{isDli}": {
            "get": {
                "tags": ["Wires"],
                "summary": "Returns the Companies for the specified wire Id without returning accounts.",
                "operationId": "Wires_CompaniesWithoutAccounts",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The wire id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "isDli",
                        "in": "path",
                        "required": true,
                        "description": "Is the company a Dli.",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection WireCompanyModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireCompanyModel"
                            }
                        }
                    }
                }
            }
        },
        "/wires/{id}/companies/{actionId}": {
            "put": {
                "tags": ["Wires"],
                "summary": "Updates the wire company for the specified wire Id.",
                "operationId": "Wires_CompaniesPUT",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Wire Id",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "Wire Company Id",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "companyModel",
                        "in": "body",
                        "description": "Wire Company to be updated",
                        "schema": {
                            "$ref": "#/definitions/WireCompanyModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection WireCompanyModel",
                        "schema": {
                            "$ref": "#/definitions/WireCompanyModel"
                        }
                    }
                }
            }
        },
        "/wires/{id}/companies": {
            "post": {
                "tags": ["Wires"],
                "summary": "Creates the wire company for the specified wire Id.",
                "operationId": "Wires_CompaniesPOST",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Wire Id",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "companyModel",
                        "in": "body",
                        "description": "Wire Company to be updated",
                        "schema": {
                            "$ref": "#/definitions/WireCompanyModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection WireCompanyModel",
                        "schema": {
                            "$ref": "#/definitions/WireCompanyModel"
                        }
                    }
                }
            }
        },
        "/wires/getnoncoreinternationalwirecompany": {
            "get": {
                "tags": ["Wires"],
                "summary": "Gets non-core international wire company.",
                "operationId": "Wires_GetNonCoreInternationalWireCompany",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "An instance of IHttpActionResult class.",
                        "schema": {
                            "$ref": "#/definitions/NonCoreInternationalWireCompanyModel"
                        }
                    }
                }
            }
        },
        "/wires/{id}/createnoncoreinternationalwirecompany": {
            "post": {
                "tags": ["Wires"],
                "summary": "Creates non-core international wire company.",
                "operationId": "Wires_CreateNonCoreInternationalWireCompany",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The wire product id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "companyModel",
                        "in": "body",
                        "description": "An instance of the NonCoreInternationalWireCompanyModel class.",
                        "schema": {
                            "$ref": "#/definitions/NonCoreInternationalWireCompanyModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "An instance of IHttpActionResult class.",
                        "schema": {
                            "$ref": "#/definitions/NonCoreInternationalWireCompanyModel"
                        }
                    }
                }
            }
        },
        "/wires/{id}/editnoncoreinternationalwirecompany": {
            "put": {
                "tags": ["Wires"],
                "summary": "Edits non-core international wire companies.",
                "operationId": "Wires_EditNonCoreInternationalWireCompanies",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The wire product id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "companyModel",
                        "in": "body",
                        "description": "An instance of the NonCoreInternationalWireCompanyModel class.",
                        "schema": {
                            "$ref": "#/definitions/NonCoreInternationalWireCompanyModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "An instance of IHttpActionResult class.",
                        "schema": {
                            "$ref": "#/definitions/NonCoreInternationalWireCompanyModel"
                        }
                    }
                }
            }
        },
        "/wires/updateexternallyprocessedfxwire": {
            "post": {
                "tags": ["Wires"],
                "summary": "Updates the externally processed Fx wire.",
                "operationId": "Wires_UpdateExternallyProcessedFxWire",
                "parameters": [
                    {
                        "name": "wireModel",
                        "in": "body",
                        "description": "An instance of the WireModel class.",
                        "schema": {
                            "$ref": "#/definitions/WireModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "An instance of IHttpActionResult class.",
                        "schema": {
                            "$ref": "#/definitions/WireModel"
                        }
                    }
                }
            }
        },
        "/wires/{id}/companies/{actionId}/accounts/{isDli}": {
            "get": {
                "tags": ["Wires"],
                "summary": "Get the wire company for the specified wire Id and wire company id.",
                "operationId": "Wires_Accounts",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The wire id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "The action id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "isDli",
                        "in": "path",
                        "required": true,
                        "description": "Is the company a Dli.",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "An instance of IHttpActionResult class.",
                        "schema": {
                            "$ref": "#/definitions/WireCompanyModel"
                        }
                    }
                }
            }
        },
        "/wires/getExchangeFees": {
            "get": {
                "tags": ["Wires"],
                "summary": "Gets exchange fees.",
                "operationId": "Wires_GetExchangeFees",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "An instance of IHttpActionResult class.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireExchangeFee"
                            }
                        }
                    }
                }
            }
        },
        "/wires/saveExchangeFees": {
            "post": {
                "tags": ["Wires"],
                "summary": "Saves exchange fees.",
                "operationId": "Wires_SaveExchangeFees",
                "parameters": [
                    {
                        "name": "exchangeFees",
                        "in": "body",
                        "description": "An instance of the List`1 class.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireExchangeFee"
                            }
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "An instance of IHttpActionResult class.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireExchangeFee"
                            }
                        }
                    }
                }
            }
        },
        "/wires/{id}": {
            "get": {
                "tags": ["Wires"],
                "summary": "Gets a wire.",
                "operationId": "Wires_Get",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The wire id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "An instance of IHttpActionResult class.",
                        "schema": {
                            "$ref": "#/definitions/WireModel"
                        }
                    }
                }
            }
        },
        "/wires/uploadRatesheet": {
            "post": {
                "tags": ["Wires"],
                "summary": "Uploads the rate sheet.",
                "operationId": "Wires_UploadRatesheet",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "An instance of IHttpActionResult class.",
                        "schema": {
                            "$ref": "#/definitions/ExchangeRatesheet"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BadRequestResult"
                        }
                    }
                }
            }
        },
        "/wires/getExchangeRatesMetadata": {
            "get": {
                "tags": ["Wires"],
                "summary": "Gets exchange rates metadata.",
                "operationId": "Wires_GetExchangeRatesMetadata",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "An instance of IHttpActionResult class.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExchangeRateMetadata"
                            }
                        }
                    }
                }
            }
        },
        "/wires/getExchangeRates": {
            "get": {
                "tags": ["Wires"],
                "summary": "Gets exchange rates.",
                "operationId": "Wires_GetExchangeRates",
                "parameters": [
                    {
                        "type": "string",
                        "name": "effectiveDate",
                        "in": "query",
                        "required": true,
                        "description": "An instance of the DateTime class.",
                        "format": "date-time",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "An instance of IHttpActionResult class.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExchangeRate"
                            }
                        }
                    }
                }
            }
        },
        "/StopPayment/GetEligibleStopPaymentAccounts/{companyId}": {
            "get": {
                "tags": ["StopPayment"],
                "summary": "Gets eligible stop payment accounts.",
                "operationId": "StopPayment_GetEligibleStopPaymentAccounts",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The IHttpActionResult instance.",
                        "schema": {
                            "$ref": "#/definitions/BaseResponse2"
                        }
                    }
                }
            }
        },
        "/StopPayment/GetCompanyConfiguration/{companyId}": {
            "get": {
                "tags": ["StopPayment"],
                "summary": "Gets company configurations for stop payments.",
                "operationId": "StopPayment_GetCompanyConfiguration",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The IHttpActionResult instance.",
                        "schema": {
                            "$ref": "#/definitions/BaseResponse2"
                        }
                    }
                }
            }
        },
        "/StopPayment/SaveCompanyConfiguration": {
            "post": {
                "tags": ["StopPayment"],
                "summary": "Posts stop payment configuration for a given company.",
                "operationId": "StopPayment_SaveCompanyConfiguration",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "The SaveCompanyStopPaymentRequest instance..",
                        "schema": {
                            "$ref": "#/definitions/SaveCompanyStopPaymentRequest"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The IHttpActionResult instance.",
                        "schema": {
                            "$ref": "#/definitions/BaseResponse2"
                        }
                    }
                }
            }
        },
        "/achFilterReport/companyUsers/{companyGuidUniqueId}": {
            "get": {
                "tags": ["AchFilterReport"],
                "summary": "Retrieves company users who are eligible for reporting for ACH filters",
                "operationId": "AchFilterReport_GetCompanyUsers",
                "parameters": [
                    {
                        "type": "string",
                        "name": "companyGuidUniqueId",
                        "in": "path",
                        "required": true,
                        "description": "Identifies the company",
                        "format": "guid",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Instance of AchFilterUserModelCollection containing users",
                        "schema": {
                            "$ref": "#/definitions/AchFilterUserModelCollection"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/achFilterReport/companyUsers/{companyUniqueId}/accounts": {
            "get": {
                "tags": ["AchFilterReport"],
                "summary": "Retrieves accounts entitled to be managed for ACH filters by company users",
                "description": "This action will retrieve all accounts which participate in ACH filter management, and which have\nentitled users.  Entitled users could be users which are explicitly entitled, as well as those in 'Super User'\nrole.\nThe returned collection will indicate, for each account, which users are entitled to the account.",
                "operationId": "AchFilterReport_GetAccountsForCompanyUsers",
                "parameters": [
                    {
                        "type": "string",
                        "name": "companyUniqueId",
                        "in": "path",
                        "required": true,
                        "description": "Identifies the company",
                        "format": "guid",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Instance of CompanyUserAccountModelCollection containing account-entitled user relation data",
                        "schema": {
                            "$ref": "#/definitions/CompanyUserAccountModelCollection"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/achFilterReport/auditHistory": {
            "post": {
                "tags": ["AchFilterReport"],
                "summary": "Retrieves audit history for specified ACH Filters.",
                "description": "Retrieves audit history for ACH filter ids passed in the request.  The ACH filter ids would typically be known by\nextracting from filters after running ACH Filter report.\nConsiderations:\n* It is the client's responsibility to sort audit history in the desired chronological sequence\n* Audit history is comprehensive, for all-time, and is not paged.  Performance therefore could be a consideration\nfor large sets of filters; recommend pulling audit history for individual filters as-needed.\n* While audit history would typically exist for a filter, it is not guaranteed.  In the event no history can be\nfound, the event audit collection for that filter will be empty.",
                "operationId": "AchFilterReport_GetAuditHistory",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AchFilterAuditHistoryRequestModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Instance of AchFilterAuditHistoryModelCollection containing audit history for specified filters",
                        "schema": {
                            "$ref": "#/definitions/AchFilterAuditHistoryModelCollection"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/achFilterReport/search": {
            "post": {
                "tags": ["AchFilterReport"],
                "summary": "Given filter parameters returns the ach filters matching the criteria",
                "operationId": "AchFilterReport_GetAchFilterReport",
                "parameters": [
                    {
                        "name": "reportFilter",
                        "in": "body",
                        "description": "filter criteria required to run report",
                        "schema": {
                            "$ref": "#/definitions/AchFilterReportRequestModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Instance of ReportDataModel containing list of instances of AchFilterReportModel.\n            ",
                        "schema": {
                            "$ref": "#/definitions/ReportDataModelOfListOfAchFilterReportModel"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/achFilterReport/download/csv": {
            "post": {
                "tags": ["AchFilterReport"],
                "summary": "Given filter parameters returns the csv file stream",
                "description": "Returns a csv report file.",
                "operationId": "AchFilterReport_GetAchFilterReportCsvDownload",
                "parameters": [
                    {
                        "name": "reportFilter",
                        "in": "body",
                        "description": "filter criteria required to run report",
                        "schema": {
                            "$ref": "#/definitions/AchFilterReportDownloadRequestModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/achFilterReport/download/pdf": {
            "post": {
                "tags": ["AchFilterReport"],
                "summary": "Given filter parameters returns the pdf file stream",
                "operationId": "AchFilterReport_GetAchFilterReportPdfDownload",
                "parameters": [
                    {
                        "name": "reportFilter",
                        "in": "body",
                        "description": "filter criteria required to run report",
                        "schema": {
                            "$ref": "#/definitions/AchFilterReportDownloadRequestModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/ReportFilter/ActivityTypes": {
            "get": {
                "tags": ["ReportFilter"],
                "summary": "Gets user activity types",
                "operationId": "ReportFilter_ActivityTypes",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A collection of UserActivityTypeModel instances.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserActivityTypeModel"
                            }
                        }
                    }
                }
            }
        },
        "/ReportFilter/Companies": {
            "get": {
                "tags": ["ReportFilter"],
                "summary": "Given a companyType query string returns a filtered list of companies",
                "operationId": "ReportFilter_GetCompanies",
                "parameters": [
                    {
                        "type": "string",
                        "name": "companyType",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A collection of CompanyModel instances.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyModel"
                            }
                        }
                    }
                }
            }
        },
        "/ReportFilter/Companies/CheckExceptions": {
            "get": {
                "tags": ["ReportFilter"],
                "summary": "Gets the Positive Pay companies that have the WorkCheckException product option enabled.",
                "description": "Error Codes and Responses\n| Response Code | Response Message | Remediation |\n|---|---|---|\n| 1025 | GetPositivePayCompaniesAccessFailure | Failure result returned by the GetPositivePayCompaniesAccess class.\n|",
                "operationId": "ReportFilter_GetCheckExceptionsCompanies",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A PositivePayCompanyCollection instance.",
                        "schema": {
                            "$ref": "#/definitions/PositivePayCompanyCollection"
                        }
                    }
                }
            }
        },
        "/ReportFilter/Companies/AchExceptions": {
            "get": {
                "tags": ["ReportFilter"],
                "summary": "Gets the Positive Pay companies that have the WorkAchException product option enabled.",
                "description": "Error Codes and Responses\n| Response Code | Response Message | Remediation |\n|---|---|---|\n| 1025 | GetPositivePayCompaniesAccessFailure | Failure result returned by the GetPositivePayCompaniesAccess class.\n|",
                "operationId": "ReportFilter_GetAchExceptionsCompanies",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A PositivePayCompanyCollection instance.",
                        "schema": {
                            "$ref": "#/definitions/PositivePayCompanyCollection"
                        }
                    }
                }
            }
        },
        "/ReportFilter/Companies/AchExceptionFilters": {
            "get": {
                "tags": ["ReportFilter"],
                "summary": "Gets the Positive Pay companies that have the WorkAchFilter product option enabled.",
                "description": "Error Codes and Responses\n| Response Code | Response Message | Remediation |\n|---|---|---|\n| 1025 | GetPositivePayCompaniesAccessFailure | Failure result returned by the GetPositivePayCompaniesAccess class.\n|",
                "operationId": "ReportFilter_GetAchExceptionFiltersCompanies",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A PositivePayCompanyCollection instance.",
                        "schema": {
                            "$ref": "#/definitions/PositivePayCompanyCollection"
                        }
                    }
                }
            }
        },
        "/ReportFilter/DateTypes": {
            "get": {
                "tags": ["ReportFilter"],
                "summary": "Gets date types",
                "operationId": "ReportFilter_GetDateTypes",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A collection of DateTypeModel instances.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DateTypeModel"
                            }
                        }
                    }
                }
            }
        },
        "/ReportFilter/companiesByFiId": {
            "post": {
                "tags": ["ReportFilter"],
                "summary": "Gets a list of companies for the user's institution id.",
                "operationId": "ReportFilter_GetCompaniesByFiId",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The list of companies.",
                        "schema": {
                            "$ref": "#/definitions/GetCompanyListByFiModel"
                        }
                    }
                }
            }
        },
        "/ReportFilter/achCompanyListByParentCompany": {
            "post": {
                "tags": ["ReportFilter"],
                "summary": "Gets a list of ach companies for selected parent company guid.",
                "operationId": "ReportFilter_GetAchCompaniesByParentCompany",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/GetAchCompanyListByParentCompanyRequestModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The list of companies.",
                        "schema": {
                            "$ref": "#/definitions/GetAchCompanyListByParentCompanyModel"
                        }
                    }
                }
            }
        },
        "/ReportFilter/Users/Channel": {
            "get": {
                "tags": ["ReportFilter"],
                "summary": "Gets a list of channel users.",
                "operationId": "ReportFilter_GetChannelReportUsers",
                "parameters": [
                    {
                        "type": "array",
                        "name": "companyIds",
                        "in": "query",
                        "collectionFormat": "multi",
                        "x-nullable": true,
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "type": "array",
                        "name": "companyUniqueIds",
                        "in": "query",
                        "collectionFormat": "multi",
                        "x-nullable": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "array",
                        "name": "companyGuidUniqueIds",
                        "in": "query",
                        "collectionFormat": "multi",
                        "x-nullable": true,
                        "items": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A List`1",
                        "schema": {
                            "$ref": "#/definitions/ReportUserModelCollection"
                        }
                    }
                }
            }
        },
        "/ReportFilter/Users/Channel/Companies": {
            "post": {
                "tags": ["ReportFilter"],
                "summary": "Gets a list of channel users belonging to the specified companies.",
                "operationId": "ReportFilter_GetChannelUsersForCompanies",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "A GetBoReportUserListForCompaniesRequestModel object containing the unique guid ids\nfor the companies in question.\n            ",
                        "schema": {
                            "$ref": "#/definitions/GetBoReportUserListForCompaniesRequestModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GetBoReportUserListForCompaniesResponseModel"
                        }
                    }
                }
            }
        },
        "/ReportFilter/Statuses/TransferPayment": {
            "post": {
                "tags": ["ReportFilter"],
                "summary": "Gets a list of internal transfer status types.",
                "operationId": "ReportFilter_GetInternalTransferTypes",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GetInternalTransferStatusTypesResponseModel"
                        }
                    }
                }
            }
        },
        "/ReportFilter/accounts": {
            "post": {
                "tags": ["ReportFilter"],
                "summary": "Gets a list of accounts for the authorized users' FI.",
                "operationId": "ReportFilter_GetAccounts",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/GetAccountsRequestModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The list of accounts with guidId and company name for dropdown display.",
                        "schema": {
                            "$ref": "#/definitions/FilterLookupModelCollection"
                        }
                    }
                }
            }
        },
        "/Reports": {
            "get": {
                "tags": ["Reports"],
                "summary": "Gets reports",
                "operationId": "Reports_GetReports",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The list of ReportModelBase",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportModelBase"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Reports"],
                "summary": "Posts report data.",
                "operationId": "Reports_GetReportData",
                "parameters": [
                    {
                        "name": "reportFilter",
                        "in": "body",
                        "description": "The ReportFilterBase instance.",
                        "schema": {
                            "$ref": "#/definitions/ReportFilterBase"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The IHttpActionResult",
                        "schema": {}
                    }
                }
            }
        },
        "/reports/report/{id}": {
            "get": {
                "tags": ["Reports"],
                "summary": "Gets a report by id.",
                "operationId": "Reports_GetReport",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The ReportModelBase instance.",
                        "schema": {
                            "$ref": "#/definitions/ReportModelBase"
                        }
                    }
                }
            }
        },
        "/reports/reportFilter": {
            "get": {
                "tags": ["Reports"],
                "summary": "Gets report filters.",
                "operationId": "Reports_GetReportFilter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "description": "The filter type.",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "THe ReportFilterBase Instance.",
                        "schema": {
                            "$ref": "#/definitions/ReportFilterBase"
                        }
                    }
                }
            }
        },
        "/reports/report/{id}/reportFiltersModel": {
            "get": {
                "tags": ["Reports"],
                "summary": "Gets the BO report filters model for the specified report ID.",
                "operationId": "Reports_GetReportFilterModel",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The report ID.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The result of the call.",
                        "schema": {
                            "$ref": "#/definitions/GetBoReportFilterModel"
                        }
                    }
                }
            }
        },
        "/reports/reportCustomFilter": {
            "get": {
                "tags": ["Reports"],
                "summary": "Gets custom report filters.",
                "operationId": "Reports_GetReportCustomFilter",
                "parameters": [
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "description": "The report type",
                        "x-nullable": true
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "description": "The Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The ReportFilterBase Instance.\nor\nThe ReportFilterBase Instance.",
                        "schema": {},
                        "x-expectedSchemas": [
                            {
                                "description": "The ReportFilterBase Instance.",
                                "schema": {
                                    "$ref": "#/definitions/OfxCompanyModel"
                                }
                            },
                            {
                                "description": "The ReportFilterBase Instance.",
                                "schema": {
                                    "$ref": "#/definitions/ReportFilterBase"
                                }
                            }
                        ]
                    }
                }
            },
            "post": {
                "tags": ["Reports"],
                "summary": "Updates custom report filters.",
                "operationId": "Reports_UpdateReportCustomFilter",
                "parameters": [
                    {
                        "name": "reportFilter",
                        "in": "body",
                        "description": "The ReportFilterBase instance.",
                        "schema": {
                            "$ref": "#/definitions/ReportFilterBase"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The ReportFilterBase Instance.\nor\nThe ReportFilterBase Instance.",
                        "schema": {},
                        "x-expectedSchemas": [
                            {
                                "description": "The ReportFilterBase Instance.",
                                "schema": {
                                    "$ref": "#/definitions/SaveReportCustomFilterResponse"
                                }
                            },
                            {
                                "description": "The ReportFilterBase Instance.",
                                "schema": {
                                    "$ref": "#/definitions/ReportFilterBase"
                                }
                            }
                        ]
                    }
                }
            }
        },
        "/reports/reportColumnModels": {
            "get": {
                "tags": ["Reports"],
                "summary": "Gets custom report columns.",
                "operationId": "Reports_GetReportColumnModels",
                "parameters": [
                    {
                        "type": "string",
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "description": "The type.",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection of ReportColumnModelBase",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportColumnModelBase"
                            }
                        }
                    }
                }
            }
        },
        "/reports/favorite/{id}": {
            "get": {
                "tags": ["Reports"],
                "summary": "Gets favorites.",
                "operationId": "Reports_Favorite",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "boolean",
                        "name": "value",
                        "in": "query",
                        "required": true,
                        "description": "True or False",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "THe ReportFilterBase Instance.",
                        "schema": {
                            "$ref": "#/definitions/ReportModelBase"
                        }
                    }
                }
            }
        },
        "/reports/deletecustomreport/{id}": {
            "get": {
                "tags": ["Reports"],
                "summary": "Deletes custom reports.",
                "operationId": "Reports_DeleteCustomReport",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Int32 Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "True or False.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/reports/updatesequence": {
            "post": {
                "tags": ["Reports"],
                "summary": "Updates sequences.",
                "operationId": "Reports_UpdateSequence",
                "parameters": [
                    {
                        "name": "sequences",
                        "in": "body",
                        "description": "The ICollection`1 of ReportSequence instances.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportSequence"
                            }
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "True or False.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/reports/getwirehistory/{id}": {
            "get": {
                "tags": ["Reports"],
                "summary": "Gets wire history report.",
                "operationId": "Reports_GetWireHistory",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The Id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The WireHistoryModel.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireHistoryModel"
                            }
                        }
                    }
                }
            }
        },
        "/reports/getUserActivity": {
            "post": {
                "tags": ["Reports"],
                "summary": "Gets user activity.",
                "operationId": "Reports_GetUserActivity",
                "parameters": [
                    {
                        "name": "reportFilter",
                        "in": "body",
                        "description": "THe ReportFilterBase instance.",
                        "schema": {
                            "$ref": "#/definitions/ReportFilterBase"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "List of UserActivityModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportDataModelOfListOfUserActivityModel"
                            }
                        }
                    }
                }
            }
        },
        "/reports/ChannelUserActivity": {
            "post": {
                "tags": ["Reports"],
                "summary": "Gets Channel user activities.",
                "operationId": "Reports_GetChannelUserActivity",
                "parameters": [
                    {
                        "name": "reportFilter",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ChannelUserActivityReportFilter"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "List of UserActivityModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportDataModelOfListOfUserActivityModel"
                            }
                        }
                    }
                }
            }
        },
        "/reports/GetDownloadPageByReportType": {
            "get": {
                "tags": ["Reports"],
                "summary": "Gets download page by report type.",
                "operationId": "Reports_GetDownloadPageByReportType",
                "parameters": [
                    {
                        "type": "string",
                        "name": "reportType",
                        "in": "query",
                        "required": true,
                        "description": "The report type",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The DownloadPage.",
                        "schema": {
                            "$ref": "#/definitions/DownloadPage"
                        }
                    }
                }
            }
        },
        "/ofxsettings/getOfxEnabledFlagForFI": {
            "get": {
                "tags": ["OfxSettings"],
                "summary": "Get the FI level flag that indicates whether OFX is Enabled or not",
                "operationId": "OfxSettings_GetOfxEnabledFlagForFI",
                "parameters": [
                    {
                        "type": "string",
                        "name": "fiId",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "HttpActionResult instance",
                        "schema": {
                            "$ref": "#/definitions/FiNumberModel"
                        }
                    }
                }
            }
        },
        "/ofxsettings/updateOfxEnabledFlagForFI": {
            "post": {
                "tags": ["OfxSettings"],
                "summary": "Update the FI level flag that indicates whether OFX is Enabled or not",
                "operationId": "OfxSettings_UpdateOfxEnabledFlagForFI",
                "parameters": [
                    {
                        "type": "string",
                        "name": "fiId",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    },
                    {
                        "type": "boolean",
                        "name": "isOfxEnabled",
                        "in": "query",
                        "required": true,
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "HttpActionResult instance",
                        "schema": {
                            "$ref": "#/definitions/FiNumberModel"
                        }
                    }
                }
            }
        },
        "/ofxsettings/getOfxEnabledFlagForUser": {
            "get": {
                "tags": ["OfxSettings"],
                "summary": "Get the flag that indicates whether OFX access is enabled for the user",
                "operationId": "OfxSettings_GetOfxEnabledFlagForUser",
                "parameters": [
                    {
                        "type": "string",
                        "name": "fiId",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    },
                    {
                        "type": "string",
                        "name": "userName",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "HttpActionResult instance",
                        "schema": {
                            "$ref": "#/definitions/OfxUserAccessModel"
                        }
                    }
                }
            }
        },
        "/ofxsettings/updateOfxEnabledFlagForUser": {
            "post": {
                "tags": ["OfxSettings"],
                "summary": "Update the flag that indicates whether OFX access is enabled for the user.",
                "operationId": "OfxSettings_UpdateOfxEnabledFlagForUser",
                "parameters": [
                    {
                        "type": "string",
                        "name": "fiId",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    },
                    {
                        "type": "string",
                        "name": "userName",
                        "in": "query",
                        "required": true,
                        "x-nullable": true
                    },
                    {
                        "type": "boolean",
                        "name": "ofxUserEnabled",
                        "in": "query",
                        "required": true,
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "HttpActionResult instance",
                        "schema": {
                            "$ref": "#/definitions/OfxUserAccessModel"
                        }
                    }
                }
            }
        },
        "/ofxsettings/getOfxEnabledFlagForCompany": {
            "get": {
                "tags": ["OfxSettings"],
                "summary": "Get the flag that indicates whether OFX access is enabled for the company.",
                "operationId": "OfxSettings_GetOfxEnabledFlagForCompany",
                "parameters": [
                    {
                        "type": "string",
                        "name": "fiId",
                        "in": "query",
                        "required": true,
                        "description": "The FI id.",
                        "x-nullable": true
                    },
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "query",
                        "required": true,
                        "description": "The company id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "HttpActionResult instance",
                        "schema": {
                            "$ref": "#/definitions/OfxCompanyModel"
                        }
                    }
                }
            }
        },
        "/ofxsettings/updateOfxEnabledFlagForCompany": {
            "post": {
                "tags": ["OfxSettings"],
                "summary": "Update the flag that indicates whether OFX access is enabled for the company.",
                "operationId": "OfxSettings_UpdateOfxEnabledFlagForCompany",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "The SaveOfxCompanyRequest instance.",
                        "schema": {
                            "$ref": "#/definitions/SaveOfxCompanyRequest"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "HttpActionResult instance",
                        "schema": {
                            "$ref": "#/definitions/OfxCompanyModel"
                        }
                    }
                }
            }
        },
        "/File/{id}": {
            "get": {
                "tags": ["File"],
                "summary": "Gets File in exchange for an ID.",
                "operationId": "File_GetFile",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "File Id",
                        "format": "guid",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The file requested",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/Company/GetGuidUniqueId/{companyId}": {
            "get": {
                "tags": ["Company"],
                "summary": "Gets company guid unique id in exchange for an ID.",
                "operationId": "Company_GetCompanyGuidUniqueId",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Ok(Guid) if found, NotFound() if not\n            ",
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    "404": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NotFoundResult"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/Company/Search": {
            "post": {
                "tags": ["Company"],
                "summary": "Searches for companies that meet the criteria of the request.",
                "operationId": "Company_CompanySearch",
                "parameters": [
                    {
                        "name": "companySearchModel",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CompanySearchModel2"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A collection of CompanyModels\n            ",
                        "schema": {
                            "$ref": "#/definitions/CompanyModelCollection"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/PositivePayAccount/Search": {
            "post": {
                "tags": ["PositivePayAccounts"],
                "summary": "Searches for accounts that match the criteria in the request.",
                "description": "Request body parameters:\n    \n        \n            \n                Parameter\n            \n            \n                Description\n            \n        \n        \n            \n                \n            \n            Array of company ids to retrieve accounts for\n        \n        \n            \n                \n            \n            \n                boolean to determine whether to filter to only those accounts that have the Ach Exception product\n                option\n            \n        \n        \n            \n                \n            \n            \n                boolean to determine whether to filter to only those accounts that have the Ach Filter product\n                option\n            \n        \n        \n            \n                \n            \n            \n                boolean to determine whether to filter to only those accounts that have the Check Exception product\n                option\n            \n        \n    \n    Note: HasAchException, HasAchFilter, and HasCheckException are logically AND joined.\n    \n        For example if HasAchException is true and HasAchFilter is true only accounts with both product options\n        will be returned.",
                "operationId": "PositivePayAccounts_AccountSearch",
                "parameters": [
                    {
                        "name": "accountSearchModel",
                        "in": "body",
                        "description": "An instance of the PositivePayAccountSearchModel class.\n            ",
                        "schema": {
                            "$ref": "#/definitions/PositivePayAccountSearchModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A collection of AccountModels.\n            ",
                        "schema": {
                            "$ref": "#/definitions/AccountModelCollection"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/CheckException/Search": {
            "post": {
                "tags": ["CheckException"],
                "summary": "Searches for check exceptions that meet the criteria of the request.",
                "operationId": "CheckException_SearchCheckExceptions",
                "parameters": [
                    {
                        "name": "searchCheckExceptionModel",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SearchCheckExceptionModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A SearchCheckExceptionModel instance.\n            \nor\nA SearchCheckExceptionModel instance.\n            ",
                        "schema": {
                            "$ref": "#/definitions/CheckExceptionModelDataPage"
                        },
                        "x-expectedSchemas": [
                            {
                                "description": "A SearchCheckExceptionModel instance.\n            ",
                                "schema": {
                                    "$ref": "#/definitions/CheckExceptionModelDataPage"
                                }
                            },
                            {
                                "description": "A SearchCheckExceptionModel instance.\n            ",
                                "schema": {
                                    "$ref": "#/definitions/CheckExceptionModelDataPage"
                                }
                            }
                        ]
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/CheckException/{arpExceptionDetailUniqueId}/Attachment": {
            "get": {
                "tags": ["CheckException"],
                "summary": "Retrieves an attached file for the specified check exception.",
                "operationId": "CheckException_GetAttachment",
                "parameters": [
                    {
                        "type": "string",
                        "name": "arpExceptionDetailUniqueId",
                        "in": "path",
                        "required": true,
                        "description": "The identifier for the check exception\n            ",
                        "format": "guid",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The attached file.\n            \nor\nThe attached file.\n            ",
                        "schema": {},
                        "x-expectedSchemas": [
                            {
                                "description": "The attached file.\n            ",
                                "schema": {
                                    "type": "file"
                                }
                            },
                            {
                                "description": "The attached file.\n            ",
                                "schema": {
                                    "$ref": "#/definitions/ResponseMessageResult"
                                }
                            }
                        ]
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/CheckException/Download/Pdf": {
            "post": {
                "tags": ["CheckException"],
                "summary": "Searches and downloads a PDF for check exceptions that meet the criteria of the request.",
                "operationId": "CheckException_DownloadCheckExceptionsPdf",
                "parameters": [
                    {
                        "name": "searchCheckExceptionModel",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SearchCheckExceptionModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A pdf report file.\n            \nor\nA pdf report file.\n            ",
                        "schema": {
                            "type": "file"
                        },
                        "x-expectedSchemas": [
                            {
                                "description": "A pdf report file.\n            ",
                                "schema": {
                                    "type": "file"
                                }
                            },
                            {
                                "description": "A pdf report file.\n            ",
                                "schema": {
                                    "type": "file"
                                }
                            }
                        ]
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/CheckException/Download/Csv": {
            "post": {
                "tags": ["CheckException"],
                "summary": "Searches and downloads a CSV for check exceptions that meet the criteria of the request.",
                "operationId": "CheckException_DownloadCheckExceptionsCsv",
                "parameters": [
                    {
                        "name": "searchCheckExceptionModel",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SearchCheckExceptionModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A csv report file.\n            \nor\nA csv report file.\n            ",
                        "schema": {
                            "type": "file"
                        },
                        "x-expectedSchemas": [
                            {
                                "description": "A csv report file.\n            ",
                                "schema": {
                                    "type": "file"
                                }
                            },
                            {
                                "description": "A csv report file.\n            ",
                                "schema": {
                                    "type": "file"
                                }
                            }
                        ]
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/positivePayCompanyConfiguration/{companyUniqueGuid}/allOptions": {
            "get": {
                "tags": ["PositivePayCompanyConfiguration"],
                "summary": "Retrieve all product options for a company Positive Pay product",
                "description": "Supported options:\n* PositivePay.ACHFilterManagement.AllowManageAchFilters : \"0\"/\"1\", indicates whether ACH Filters are enabled\n* PositivePay.ACHFilterManagement.ApproversRequired :0 (aka \"None\"), 1, 2, 3\n* PositivePay.AllowIssuedItemActivityReview : \"0\"/\"1\"\n* PositivePay.ShowAchExceptions : \"0\"/\"1\"\n* PositivePay.SubstituteProductConfig.UseSubstituteProduct : \"1\"/\"0\".  Controls whether to use the substitute\nproduct.  Only present if have a substitute product installed (Centrix)\n* PositivePay.WorkAchExceptions : \"1\"/\"0\".\n* PositivePay.WorkCheckExceptions : \"1\"/\"0\".\n* PositivePay.CheckException.AllowReturnReason : \"1\"/\"0\".\n* PositivePay.CheckException.AllowCorrectionRequest : \"1\"/\"0\".",
                "operationId": "PositivePayCompanyConfiguration_GetAllOptions",
                "parameters": [
                    {
                        "type": "string",
                        "name": "companyUniqueGuid",
                        "in": "path",
                        "required": true,
                        "description": "Identifies the company whose product options will be returned",
                        "format": "guid",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Instance of CompanyOptionModelCollection",
                        "schema": {
                            "$ref": "#/definitions/CompanyOptionModelCollection"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/positivePayCompanyConfiguration/{companyUniqueGuid}/productFeatureAccounts": {
            "get": {
                "tags": ["PositivePayCompanyConfiguration"],
                "summary": "Retrieve account configuration for the company Positive Pay product",
                "description": "Feature names:\n* ACHFilterManagement\n* WorkACHExceptions\n* WorkCheckExceptions",
                "operationId": "PositivePayCompanyConfiguration_GetProductFeatureAccountsGET",
                "parameters": [
                    {
                        "type": "string",
                        "name": "companyUniqueGuid",
                        "in": "path",
                        "required": true,
                        "description": "Identifies the company whose product options will be returned",
                        "format": "guid",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Instance of ProductFeatureAccountModelCollection",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureAccountModelCollection"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/positivePayCompanyConfiguration/productFeatureAccounts": {
            "post": {
                "tags": ["PositivePayCompanyConfiguration"],
                "summary": "Retrieve account configuration for the company Positive Pay product",
                "description": "Feature names:\n* ACHFilterManagement\n* WorkACHExceptions\n* WorkCheckExceptions",
                "operationId": "PositivePayCompanyConfiguration_GetProductFeatureAccountsPOST",
                "parameters": [
                    {
                        "name": "getProductFeatureAccountsRequestModel",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/GetProductFeatureAccountsRequestModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Instance of ProductFeatureAccountModelCollection",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureAccountModelCollection"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/positivePayCompanyConfiguration/{companyUniqueGuid}": {
            "post": {
                "tags": ["PositivePayCompanyConfiguration"],
                "summary": "Saves product configuration for company Positive Pay product",
                "description": "The following product options are supported for save:\n* PositivePay.ACHFilterManagement.AllowManageAchFilters : \"0\"/\"1\", indicates whether ACH Filters are enabled\n* PositivePay.ACHFilterManagement.ApproversRequired : 0 (aka \"None\"), 1, 2, 3\n* PositivePay.AllowIssuedItemActivityReview : \"0\"/\"1\".\n* PositivePay.ShowAchExceptions : \"0\"/\"1\"\n* PositivePay.SubstituteProductConfig.UseSubstituteProduct : \"1\"/\"0\".  Controls whether to use the substitute\nproduct (if setup for and allowed by FI).\n* PositivePay.WorkAchExceptions : \"1\"/\"0\".\n* PositivePay.WorkCheckExceptions : \"1\"/\"0\".\n* PositivePay.CheckException.AllowReturnReason : \"1\"/\"0\".\n* PositivePay.CheckException.AllowCorrectionRequest : \"1\"/\"0\".\nFor product account feature participations,\nthe following features (feature names) are supported :\n* ACHFilterManagement\n* WorkAchExceptions\n* WorkCheckExceptions\nFor account feature participations:\n* Participations should only be passed if company configuration allows.  Setting a company option which disallows\nparticipations will result in HTTP 400.\nExample : saving option PositivePay.ACHFilterManagement.AllowManageAchFilters = \"0\" means should not pass\nparticipations for ACHFilterManagement.\n* If no accounts are selected : should submit entry with feature name but no accounts OR having all participation\nflags set to false.\n* Only the AccountId has to be set to identify the participating account.  Setting the other account properties\nlike CifNumber is unnecessary as those will be ignored for save.\n* Not submitting an account for participation (when account is already participating) will be handled as if the\naccount were passed with participation flag off.",
                "operationId": "PositivePayCompanyConfiguration_SaveProductConfiguration",
                "parameters": [
                    {
                        "type": "string",
                        "name": "companyUniqueGuid",
                        "in": "path",
                        "required": true,
                        "description": "Identifies the company for which product configuration will be saved",
                        "format": "guid",
                        "x-nullable": false
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Instance of SavePositivePayCompanyConfigurationRequestModel containing options to\nsave\n            ",
                        "schema": {
                            "$ref": "#/definitions/SavePositivePayCompanyConfigurationRequestModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "On success, boolean true, or error content",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/positivePayCompanyConfiguration/{companyUniqueGuid}/achExceptionAccounts": {
            "get": {
                "tags": ["PositivePayCompanyConfiguration"],
                "summary": "Gets a collection of product feature accounts for ACH exception by company unique GUID.",
                "operationId": "PositivePayCompanyConfiguration_GetAchExceptionAccounts",
                "parameters": [
                    {
                        "type": "string",
                        "name": "companyUniqueGuid",
                        "in": "path",
                        "required": true,
                        "format": "guid",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A collection of Users",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureAccountParticipationsResponse"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/positivePayCompanyConfiguration/{companyUniqueGuid}/checkExceptionAccounts": {
            "get": {
                "tags": ["PositivePayCompanyConfiguration"],
                "summary": "Gets a collection of product feature accounts for check exception by company unique GUID.",
                "operationId": "PositivePayCompanyConfiguration_GetCheckExceptionAccounts",
                "parameters": [
                    {
                        "type": "string",
                        "name": "companyUniqueGuid",
                        "in": "path",
                        "required": true,
                        "format": "guid",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A collection of Users",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureAccountParticipationsResponse"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/positivePayCompanyConfiguration/{companyUniqueGuid}/achFilterManagementAccounts": {
            "get": {
                "tags": ["PositivePayCompanyConfiguration"],
                "summary": "Gets a collection of product feature accounts for ACH Filter Management by company unique ID.",
                "operationId": "PositivePayCompanyConfiguration_GetAchFilterManagementAccounts",
                "parameters": [
                    {
                        "type": "string",
                        "name": "companyUniqueGuid",
                        "in": "path",
                        "required": true,
                        "format": "guid",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Instance of ProductFeatureAccountModelCollection",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureAccountModelCollection"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/positivePayInstitutionConfiguration/allOptions": {
            "get": {
                "tags": ["PositivePayInstitutionConfiguration"],
                "summary": "Retrieve all product options at financial institution for Positive Pay",
                "description": "Supported options:\n* PositivePay.ACHFilterManagement.AllowManageAchFilters : \"0\"/\"1\", indicates whether ACH Filters are allowed to be\nmanaged.\n* PositivePay.ACHFilterManagement.ApproversRequired : 0 (aka \"None\"), 1, 2, 3.\n* PositivePay.AllowIssuedItemActivityReview : \"0\"/\"1\"\n* PositivePay.SubstituteProductConfig.AllowSubstituteProduct : \"0\"/\"1\" .  Will only be returned if substitute\nproduct is installed and active.\n* PositivePay.SubstituteProductConfig.SsoClientId : Only present if substitute product is installed and active.\n* PositivePay.SubstituteProductConfig.SsoLandingPageUrl : (readonly) Only present if substitute product\nis installed and active.\n* PositivePay.SubstituteProductConfig.SsoProductName : (readonly) Only present if substitute product\nis installed and active.\n* PositivePay.ShowAchExceptions : \"0\"/\"1\"\n* PositivePay.WorkAchExceptions : \"1\"/\"0\".\n* PositivePay.WorkCheckExceptions : \"1\"/\"0\".\n* PositivePay.CheckException.AllowReturnReason : \"1\"/\"0\".\n* PositivePay.CheckException.AllowCorrectionRequest : \"1\"/\"0\".",
                "operationId": "PositivePayInstitutionConfiguration_GetAllOptions",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Instance of InstitutionOptionModelCollection",
                        "schema": {
                            "$ref": "#/definitions/InstitutionOptionModelCollection"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/positivePayInstitutionConfiguration/options": {
            "post": {
                "tags": ["PositivePayInstitutionConfiguration"],
                "summary": "Saves product options for financial institution Positive Pay",
                "description": "Supported options for save:\n* PositivePay.ACHFilterManagement.AllowManageAchFilters : \"0\"/\"1\", indicates whether ACH Filters are allowed to be\nmanaged.\n* PositivePay.ACHFilterManagement.ApproversRequired : 0 (aka \"None\"), 1, 2, 3\n* PositivePay.AllowIssuedItemActivityReview : \"0\"/\"1\"\n* PositivePay.SubstituteProductConfig.AllowSubstituteProduct : \"0\"/\"1\".  Should only be passed if substitute\nproduct is installed and active (i.e. option returned by the 'GET').\n* PositivePay.SubstituteProductConfig.SsoClientId : Should only be passed if substitute product is installed\nand active (i.e. option returned by the 'GET').\n* PositivePay.ShowAchExceptions : \"0\"/\"1\"\n* PositivePay.WorkAchExceptions : \"1\"/\"0\".\n* PositivePay.WorkCheckExceptions : \"1\"/\"0\".\n* PositivePay.CheckException.AllowReturnReason : \"1\"/\"0\".\n* PositivePay.CheckException.AllowCorrectionRequest : \"1\"/\"0\".",
                "operationId": "PositivePayInstitutionConfiguration_SaveOptions",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Instance of InstitutionOptionModelCollection containing options to save",
                        "schema": {
                            "$ref": "#/definitions/InstitutionOptionModelCollection"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "On success, bool indicating success.  Otherwise returns error result.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/arp/getTreasuryaccounts": {
            "get": {
                "tags": ["Arp"],
                "summary": "Returns Treasury ARP Accounts",
                "operationId": "Arp_GetTreasuryAccounts",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "query",
                        "required": true,
                        "description": "Company specified by Treasury Id",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection AccountModel",
                        "schema": {
                            "$ref": "#/definitions/GetArpAccountsResponseModel"
                        }
                    }
                }
            }
        },
        "/arp/SaveCompanyArpProduct": {
            "post": {
                "tags": ["Arp"],
                "summary": "Save ARP company products.",
                "operationId": "Arp_SaveCompanyArpProduct",
                "parameters": [
                    {
                        "name": "companyArpProduct",
                        "in": "body",
                        "description": "The UpdateCompanyArpProductModel instance. ",
                        "schema": {
                            "$ref": "#/definitions/UpdateCompanyArpProductModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The ProductFeatureModel.",
                        "schema": {
                            "$ref": "#/definitions/ProductFeatureModel"
                        }
                    }
                }
            }
        },
        "/InstitutionCheckExceptionReturnReason": {
            "get": {
                "tags": ["InstitutionCheckExceptionReturnReason"],
                "summary": "Retrieve all of the Check Exception Return Reasons for the current users institution.",
                "operationId": "InstitutionCheckExceptionReturnReason_GetInstitutionCheckExceptionReturnReason",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A collection of InstitutionCheckExceptionReturnReasons\n            ",
                        "schema": {
                            "$ref": "#/definitions/InstitutionCheckExceptionReturnReasonCollection"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            },
            "post": {
                "tags": ["InstitutionCheckExceptionReturnReason"],
                "summary": "Saves the collection of Check Exception return reasons and returns an updated version of the collection.",
                "operationId": "InstitutionCheckExceptionReturnReason_SaveInstitutionCheckExceptionReturnReason",
                "parameters": [
                    {
                        "name": "returnReasons",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/InstitutionCheckExceptionReturnReasonCollection"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A collection of InstitutionCheckExceptionReturnReasons\n            ",
                        "schema": {
                            "$ref": "#/definitions/InstitutionCheckExceptionReturnReasonCollection"
                        }
                    },
                    "400": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/AccountRecon/InstitutionProductConfiguration": {
            "get": {
                "tags": ["AccountRecon"],
                "summary": "Gets the Institution Product Configuration",
                "operationId": "AccountRecon_GetInstitutionProductConfiguration",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A InstitutionProductConfigurationModel.",
                        "schema": {
                            "$ref": "#/definitions/InstitutionProductConfigurationModel"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            },
            "post": {
                "tags": ["AccountRecon"],
                "summary": "Saves the Institution Product Configuration",
                "operationId": "AccountRecon_SaveInstitutionProductConfiguration",
                "parameters": [
                    {
                        "name": "institutionProductConfigurationModel",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/InstitutionProductConfigurationModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A Boolean representing if the operation was successful.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/AccountRecon/CompanyProductConfiguration/{companyId}": {
            "get": {
                "tags": ["AccountRecon"],
                "summary": "Gets the Company Product Configuration",
                "operationId": "AccountRecon_GetCompanyProductConfiguration",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A CompanyProductConfigurationModel.",
                        "schema": {
                            "$ref": "#/definitions/CompanyProductConfigurationModel"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/AccountRecon/CompanyProductConfiguration": {
            "post": {
                "tags": ["AccountRecon"],
                "summary": "Saves the Company Product Configuration",
                "operationId": "AccountRecon_SaveCompanyProductConfiguration",
                "parameters": [
                    {
                        "name": "companyProductConfiguration",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CompanyProductConfigurationModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "A Boolean representing if the operation was successful.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/AchCompany/MatchTypeParameters/{achCompanyId}": {
            "get": {
                "tags": ["AchCompany"],
                "summary": "Retrieves ACH company match type parameters.",
                "operationId": "AchCompany_GetAchCompanyMatchTypeParameters",
                "parameters": [
                    {
                        "type": "string",
                        "name": "achCompanyId",
                        "in": "path",
                        "required": true,
                        "description": "Internal identifier of the ACH company.",
                        "format": "guid",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GetAchCompanyMatchTypeParametersResponse"
                        }
                    }
                }
            }
        },
        "/AchCompany": {
            "get": {
                "tags": ["AchCompany"],
                "summary": "Retrieves a collection of companies by their match type parameters.",
                "operationId": "AchCompany_GetAchCompanyByMatchTypeParameters",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query",
                        "x-nullable": true
                    },
                    {
                        "type": "string",
                        "name": "identifier",
                        "in": "query",
                        "x-nullable": true
                    },
                    {
                        "type": "string",
                        "name": "secCode",
                        "in": "query",
                        "x-nullable": true
                    },
                    {
                        "type": "string",
                        "name": "entryDescription",
                        "in": "query",
                        "x-nullable": true
                    },
                    {
                        "type": "string",
                        "name": "discretionaryData",
                        "in": "query",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GetAchCompanyByMatchTypeParametersResponse"
                        }
                    }
                }
            }
        },
        "/AchCompany/CopyCoreData": {
            "put": {
                "tags": ["AchCompany"],
                "summary": "Copies ACH company data from the banking core to Treasury ACH company(s).",
                "operationId": "AchCompany_CopyCoreAchCompanyData",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CopyCoreAchCompanyDataRequest"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CopyCoreAchCompanyDataResponse"
                        }
                    }
                }
            }
        },
        "/AchCompany/RefreshCoreData": {
            "put": {
                "tags": ["AchCompany"],
                "summary": "Refreshes an ACH company's data with up-to-date information from the banking core.",
                "operationId": "AchCompany_RefreshCoreAchCompanyData",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/RefreshCoreAchCompanyDataRequest"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RefreshCoreAchCompanyDataResponse"
                        }
                    }
                }
            }
        },
        "/achCompanies/search": {
            "get": {
                "tags": ["AchCompanies"],
                "summary": "Search for Ach Companies for passed criteria.",
                "operationId": "AchCompanies_Search",
                "parameters": [
                    {
                        "type": "string",
                        "name": "companyName",
                        "in": "query",
                        "required": true,
                        "description": "Contains search on Company Name",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection AchCompanyModel",
                        "schema": {
                            "$ref": "#/definitions/AchCompanyModel"
                        }
                    }
                }
            }
        },
        "/achCompanies/{companyId}/search": {
            "get": {
                "tags": ["AchCompanies"],
                "summary": "Search for Ach Companies for passed criteria.",
                "operationId": "AchCompanies_SearchAll",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "description": "The company id to search within.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "companyName",
                        "in": "query",
                        "required": true,
                        "description": "Contains search on Company Name",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection AchCompanyModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchCompanyModel"
                            }
                        }
                    }
                }
            }
        },
        "/ACH/{id}": {
            "post": {
                "tags": ["Ach"],
                "summary": "Saves the ACH Company To ACH Product Feature.",
                "operationId": "Ach_Post",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "achCompanies",
                        "in": "body",
                        "description": "Add Multiple ACH Companies",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchCompanyModel"
                            }
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection AchCompanyModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchCompanyModel"
                            }
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/ACH/{id}/Companies": {
            "post": {
                "tags": ["Ach"],
                "summary": "Saves the ACH Companies For Ach Product.",
                "operationId": "Ach_CompaniesAllPOST",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "achCompanies",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchCompanyModel"
                            }
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection AchCompanyModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchCompanyModel"
                            }
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/ACH/{id}/companies/{actionId}": {
            "delete": {
                "tags": ["Ach"],
                "operationId": "Ach_CompaniesDELETE",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection AchCompanyModel",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            },
            "put": {
                "tags": ["Ach"],
                "operationId": "Ach_CompaniesAllPUT",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "secCodes",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SecCodeModel"
                            }
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection AchCompanyModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SecCodeModel"
                            }
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/Ach/{id}": {
            "post": {
                "tags": ["Ach"],
                "operationId": "Ach_CompaniesPOST",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "query",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "status",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/LookupModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection AchCompanyModel",
                        "schema": {
                            "$ref": "#/definitions/OkResult"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/ACH/{id}/companies/{actionId}/updateStatus": {
            "put": {
                "tags": ["Ach"],
                "operationId": "Ach_updateStatus",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "achCompany",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/AchCompanyModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection SecCodeModel",
                        "schema": {
                            "$ref": "#/definitions/AchCompanyModel"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/ACH/companies/{actionId}/updatePaymentProcessingStatus": {
            "put": {
                "tags": ["Ach"],
                "summary": "Updates ACH payment processing status.",
                "operationId": "Ach_UpdatePaymentProcessingStatus",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "The action id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "achCompany",
                        "in": "body",
                        "description": "The AchCompanyModel instance.",
                        "schema": {
                            "$ref": "#/definitions/AchCompanyModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The AchCompanyModel instance.",
                        "schema": {
                            "$ref": "#/definitions/AchCompanyModel"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/ACH/{id}/secCodes": {
            "get": {
                "tags": ["Ach"],
                "summary": "get fi sec codes",
                "operationId": "Ach_SecCodes",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SecCodeModel"
                            }
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/ach/{id}/offsetaccounts/{actionId}": {
            "get": {
                "tags": ["Ach"],
                "summary": "Gets offset accounts.",
                "operationId": "Ach_OffsetAccounts",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "The action id.",
                        "format": "int32",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The IHttpActionResult.",
                        "schema": {}
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            },
            "put": {
                "tags": ["Ach"],
                "summary": "Updates given collection of off set accounts.",
                "operationId": "Ach_OffsetAccountsAll",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "type": "integer",
                        "name": "actionId",
                        "in": "path",
                        "required": true,
                        "description": "The action id.",
                        "format": "int32",
                        "x-nullable": false
                    },
                    {
                        "name": "managedAccountIds",
                        "in": "body",
                        "description": "The collection of account ids.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "The IHttpActionResult.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyAccountModel"
                            }
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/ach/domesticBanks": {
            "get": {
                "tags": ["Ach"],
                "summary": "Retrieves all domestic banks for ACH processing.",
                "description": "Returns all domestic banks.  The banks collection can include the bank for the logged in BackOffice institution;\nfor that bank, IsOnUs flag will be true.",
                "operationId": "Ach_GetDomesticBanks",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection of domestic banks\nor\nCollection of domestic banks",
                        "schema": {
                            "$ref": "#/definitions/DomesticBankModelCollection"
                        },
                        "x-expectedSchemas": [
                            {
                                "description": "Collection of domestic banks",
                                "schema": {
                                    "$ref": "#/definitions/DomesticBankModelCollection"
                                }
                            },
                            {
                                "description": "Collection of domestic banks",
                                "schema": {
                                    "$ref": "#/definitions/DomesticBankModelCollection"
                                }
                            }
                        ]
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseModel"
                        }
                    },
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/AchSecCodes": {
            "get": {
                "tags": ["AchSecCodes"],
                "summary": "Returns the available SEC Code from Core for ACH.",
                "operationId": "AchSecCodes_Get",
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "Collection SecCodeModel",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SecCodeModel"
                            }
                        }
                    }
                }
            }
        },
        "/AchNotificationOfChange/Search": {
            "post": {
                "tags": ["AchNotificationOfChange"],
                "summary": "Searches for ACH notification of change records.",
                "operationId": "AchNotificationOfChange_SearchAchNotificationOfChange",
                "parameters": [
                    {
                        "name": "notificationOfChangeFilter",
                        "in": "body",
                        "description": "The search criteria.\n            ",
                        "schema": {
                            "$ref": "#/definitions/AchNoticeOfChangeFilterModel"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/AchNotificationOfChange/Download": {
            "get": {
                "tags": ["AchNotificationOfChange"],
                "summary": "Downloads an ACH notification of change record as a NACHA file",
                "operationId": "AchNotificationOfChange_Download",
                "parameters": [
                    {
                        "type": "string",
                        "name": "AchNotificationOfChangeUniqueId",
                        "in": "query",
                        "required": true,
                        "format": "guid",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "401": {
                        "x-nullable": false,
                        "description": "Session is expired.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "409": {
                        "x-nullable": false,
                        "description": "Handled Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    },
                    "500": {
                        "x-nullable": false,
                        "description": "Other Exception - See error message for details.",
                        "schema": {
                            "$ref": "#/definitions/ErrorHttpContent"
                        }
                    }
                }
            }
        },
        "/achChildSupportPayments/{achPaymentUniqueId}": {
            "get": {
                "tags": ["AchChildSupportPayment"],
                "summary": "Returns ach child support payment information",
                "operationId": "AchChildSupportPayment_Get",
                "parameters": [
                    {
                        "type": "string",
                        "name": "achPaymentUniqueId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the AchPayment",
                        "format": "guid",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "GetChildSupportPaymentResponse\n            ",
                        "schema": {
                            "$ref": "#/definitions/GetChildSupportPaymentResponse"
                        }
                    }
                }
            }
        },
        "/achPayments/{achPaymentUniqueId}": {
            "get": {
                "tags": ["AchPayment"],
                "summary": "Returns ach payment information",
                "operationId": "AchPayment_Get",
                "parameters": [
                    {
                        "type": "string",
                        "name": "achPaymentUniqueId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the AchPayment",
                        "format": "guid",
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "GetAchPaymentResponse\n            ",
                        "schema": {
                            "$ref": "#/definitions/GetAchPaymentResponse"
                        }
                    }
                }
            }
        },
        "/achPayments/{achPaymentUniqueId}/download": {
            "get": {
                "tags": ["AchPayment"],
                "summary": "Download ach payment details.",
                "operationId": "AchPayment_DownloadAchPayment",
                "parameters": [
                    {
                        "type": "string",
                        "name": "achPaymentUniqueId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the AchPayment",
                        "format": "guid",
                        "x-nullable": false
                    },
                    {
                        "type": "string",
                        "name": "outputType",
                        "in": "query",
                        "required": true,
                        "description": "output type to download payment",
                        "x-nullable": true
                    },
                    {
                        "type": "boolean",
                        "name": "isLandscape",
                        "in": "query",
                        "description": "returns landscape pdf document when enabled",
                        "default": false,
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": false,
                        "description": "DownloadPaymentResponse\n            ",
                        "schema": {
                            "$ref": "#/definitions/DownloadPaymentResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "TermsAndConditionsModel": {
            "type": "object",
            "required": ["text", "requireUsersAcceptanceAfterEdit"],
            "properties": {
                "text": {
                    "type": "string",
                    "minLength": 1
                },
                "requireUsersAcceptanceAfterEdit": {
                    "type": "boolean"
                }
            }
        },
        "LogonResponseModel": {
            "type": "object",
            "required": ["success"],
            "properties": {
                "token": {
                    "type": "string"
                },
                "responseDetailCollection": {
                    "$ref": "#/definitions/ResponseDetailCollection"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "ResponseDetailCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ResponseDetail"
            }
        },
        "ResponseDetail": {
            "type": "object",
            "required": ["responseCode"],
            "properties": {
                "responseCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "responseMessage": {
                    "type": "string"
                }
            }
        },
        "ErrorHttpContent": {
            "type": "object",
            "description": "Contains  error HTTP content data.\n            ",
            "required": ["code"],
            "properties": {
                "message": {
                    "type": "string",
                    "description": "Gets or sets message.\n            "
                },
                "code": {
                    "type": "integer",
                    "description": "Gets or sets code.\n            ",
                    "format": "int32"
                },
                "time": {
                    "type": "string",
                    "description": "Gets or sets time.\n            "
                }
            }
        },
        "LogonInputModel": {
            "type": "object",
            "properties": {
                "client_assertion": {
                    "type": "string"
                },
                "client_assertion_type": {
                    "type": "string"
                },
                "grant_type": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "logonRequest": {
                    "$ref": "#/definitions/BaseRequest"
                }
            }
        },
        "BaseRequest": {
            "type": "object",
            "required": ["applicationNameType"],
            "properties": {
                "activityTracking": {
                    "$ref": "#/definitions/ActivityTracking"
                },
                "applicationNameType": {
                    "$ref": "#/definitions/ApplicationNameType"
                },
                "authenticationUser": {
                    "$ref": "#/definitions/AuthenticationUser"
                },
                "clientIpAddress": {
                    "type": "string"
                },
                "institutionId": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "secondaryId": {
                    "type": "string"
                },
                "endUser": {
                    "$ref": "#/definitions/EndUser"
                },
                "productInformation": {
                    "$ref": "#/definitions/ProductInformation"
                },
                "requestType": {
                    "type": "string"
                }
            }
        },
        "ActivityTracking": {
            "type": "object",
            "properties": {
                "activityId": {
                    "type": "string"
                },
                "parentActivityId": {
                    "type": "string"
                }
            }
        },
        "ApplicationNameType": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "Undefined",
                "BackOffice",
                "Banno",
                "ECS",
                "EPS",
                "Esi",
                "GoDough",
                "GoDoughClassic",
                "GoDough3_X",
                "IPay",
                "NetTeller",
                "PointMobility",
                "Treasury",
                "BSLKeys",
                "BSL",
                "ESIFIM",
                "EStatements",
                "Geezeo",
                "BannoPeople",
                "CoreDirector",
                "Newgen",
                "Corserv",
                "BOKF",
                "Autobooks",
                "MobileWeb",
                "HCL",
                "JxChangeApp",
                "TreasuryMobile",
                "TreasuryBackOffice",
                "BslSubSystem",
                "AccountRecon",
                "Ach",
                "AlertNetCore",
                "BankAccount",
                "Company",
                "Event",
                "JxChangeProxy",
                "PositivePay",
                "Sso",
                "User",
                "Wire",
                "Edpp",
                "FxGateway",
                "InstitutionNetCore",
                "AuthorizationNetCore",
                "File",
                "Configuration",
                "AchReturn",
                "ApiCatalog",
                "BslSubsystemAdmin",
                "EsiMailProcessor",
                "Nacha",
                "Pdf",
                "AchNotificationOfChange",
                "RateLimiting",
                "AchCompany",
                "TreasuryScheduler",
                "Report",
                "AccountReconIssuedItems",
                "PositivePayIssuedItems",
                "InternalTransfer",
                "CheckExceptions",
                "AlertUpdate",
                "TreasuryAccount",
                "TreasuryAuthentication",
                "TreasuryOdiEesListener",
                "TreasuryPayment",
                "TreasuryReporting",
                "TreasuryAch",
                "TreasuryWire",
                "TreasuryBackOfficeApi",
                "TreasuryChannelApi",
                "TreasuryNotification",
                "NachaIngest",
                "AchReturnProcessor",
                "AchNocProcessor",
                "NachaProcessor",
                "NachaSerialize",
                "AchPayment",
                "TextMessagingNetCore",
                "EmailNetCore",
                "LoggingNetCore",
                "MessageCenterNetCore",
                "AuthenticationRules",
                "Credentials",
                "HttpProxy",
                "DocumentNetCore",
                "AuthenticationNetCore",
                "ChallengeManagementNetCore",
                "FileWatcher",
                "FileProcessor",
                "EsiApplication",
                "AccountReports",
                "AuditNetCore",
                "TreasuryWireNetCore",
                "FraudNetCore",
                "BslAdmin",
                "JxR",
                "HealthCheck",
                "EchoQueueHandlerService",
                "BackgroundUpload",
                "JxrBannoBusiness",
                "Disclosure"
            ],
            "enum": [
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
                23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
                44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
                65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
                86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102
            ]
        },
        "AuthenticationUser": {
            "allOf": [
                {
                    "$ref": "#/definitions/EndUser"
                },
                {
                    "type": "object"
                }
            ]
        },
        "EndUser": {
            "type": "object",
            "required": ["userType"],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "companyId": {
                    "type": "string"
                },
                "externalId": {
                    "type": "string"
                },
                "externalSecondaryId": {
                    "type": "string"
                },
                "internalId": {
                    "type": "string"
                },
                "internalSecondaryId": {
                    "type": "string"
                },
                "userType": {
                    "$ref": "#/definitions/UserType"
                },
                "device": {
                    "type": "string"
                },
                "browser": {
                    "type": "string"
                }
            }
        },
        "UserType": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "Undefined",
                "Banno",
                "CashManagement",
                "Esi",
                "NetTeller",
                "Sso",
                "Treasury",
                "ESIFIM",
                "BackOffice",
                "Geezeo",
                "GeezeoMobile",
                "BannoCashManagement",
                "GeezeoCashManagement",
                "GeezeoMobileCashManagement",
                "Newgen",
                "Server",
                "Jha",
                "BannoPeople"
            ],
            "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
        },
        "ProductInformation": {
            "type": "object",
            "properties": {
                "productName": {
                    "type": "string"
                },
                "featureName": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "HealthCheckActionResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "type": "object",
                    "required": [
                        "getPackageInformationSuccessful",
                        "getRedisConnectivitySuccessful",
                        "redisMultiplexerAbleToConnect",
                        "getDatabaseConnectivitySuccessful"
                    ],
                    "properties": {
                        "getPackageInformationSuccessful": {
                            "type": "boolean"
                        },
                        "packageInformation": {
                            "$ref": "#/definitions/PackageInformation"
                        },
                        "getRedisConnectivitySuccessful": {
                            "type": "boolean"
                        },
                        "redisConnectivityStatus": {
                            "$ref": "#/definitions/RedisConnectivityStatusCollection"
                        },
                        "redisMultiplexerAbleToConnect": {
                            "type": "boolean"
                        },
                        "getDatabaseConnectivitySuccessful": {
                            "type": "boolean"
                        },
                        "databaseConnectivityStatus": {
                            "$ref": "#/definitions/DatabaseConnectivityStatusCollection"
                        }
                    }
                }
            ]
        },
        "PackageInformation": {
            "type": "object",
            "required": ["createdDateTime"],
            "properties": {
                "buildInformation": {
                    "$ref": "#/definitions/BuildInformation"
                },
                "releaseInformation": {
                    "$ref": "#/definitions/ReleaseInformation"
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "machineName": {
                    "type": "string"
                }
            }
        },
        "BuildInformation": {
            "type": "object",
            "properties": {
                "commitId": {
                    "type": "string"
                },
                "repository": {
                    "type": "string"
                },
                "azdoProject": {
                    "type": "string"
                },
                "packageVersion": {
                    "type": "string"
                },
                "buildUrl": {
                    "type": "string"
                }
            }
        },
        "ReleaseInformation": {
            "type": "object",
            "required": ["deploymentDateUtc"],
            "properties": {
                "deploymentDateUtc": {
                    "type": "string",
                    "format": "date-time"
                },
                "releaseVersion": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "packageName": {
                    "type": "string"
                },
                "packageVersion": {
                    "type": "string"
                }
            }
        },
        "RedisConnectivityStatusCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/RedisConnectivityStatus"
            }
        },
        "RedisConnectivityStatus": {
            "type": "object",
            "required": ["ableToConnect"],
            "properties": {
                "redisClusterName": {
                    "type": "string"
                },
                "ableToConnect": {
                    "type": "boolean"
                },
                "ipAddress": {
                    "type": "string"
                },
                "additionalInformation": {
                    "type": "string"
                }
            }
        },
        "DatabaseConnectivityStatusCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/DatabaseConnectivityStatus"
            }
        },
        "DatabaseConnectivityStatus": {
            "type": "object",
            "required": ["ableToConnect"],
            "properties": {
                "connectionStringName": {
                    "type": "string"
                },
                "ableToConnect": {
                    "type": "boolean"
                },
                "additionalInformation": {
                    "type": "string"
                }
            }
        },
        "BaseResponse": {
            "type": "object",
            "required": ["success"],
            "properties": {
                "baseRequest": {
                    "$ref": "#/definitions/BaseRequest"
                },
                "responseDetailCollection": {
                    "$ref": "#/definitions/ResponseDetailCollection"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "InitialLoginCredentialModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["numberOfSecurityQuestions"],
                    "properties": {
                        "biometricsInfo": {
                            "$ref": "#/definitions/UserDeviceResponseModel"
                        },
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SecurityQuestionModel"
                            }
                        },
                        "message": {
                            "type": "string"
                        },
                        "numberOfSecurityQuestions": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "riskReceiptId": {
                            "type": "string"
                        },
                        "rsaStatus": {
                            "type": "string"
                        },
                        "secureTokenStatus": {
                            "type": "string"
                        },
                        "userCredentialStatus": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "UserDeviceResponseModel": {
            "type": "object",
            "properties": {
                "authenticationId": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "SecurityQuestionModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "answer": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "text": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "ModelBase": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "UserModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": [
                        "userId",
                        "userUniqueId",
                        "userName",
                        "email",
                        "isActiveUser",
                        "isSuperUser",
                        "isUserAdmin",
                        "isReportsAdmin",
                        "isAccountAdmin",
                        "isLocked",
                        "isMfaBlocked",
                        "isEnrolled",
                        "enrollUser",
                        "useClientBiometricsAuthentication",
                        "backOfficeSsoEnabled",
                        "hasLoggedIn",
                        "isTokenMfaLocked"
                    ],
                    "properties": {
                        "userId": {
                            "type": "string",
                            "minLength": 1
                        },
                        "userUniqueId": {
                            "type": "string",
                            "format": "guid"
                        },
                        "userName": {
                            "type": "string",
                            "minLength": 1
                        },
                        "department": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string",
                            "minLength": 1
                        },
                        "phoneNumber": {
                            "type": "string"
                        },
                        "fax": {
                            "type": "string"
                        },
                        "isActiveUser": {
                            "type": "boolean"
                        },
                        "isSuperUser": {
                            "type": "boolean"
                        },
                        "isUserAdmin": {
                            "type": "boolean"
                        },
                        "isReportsAdmin": {
                            "type": "boolean"
                        },
                        "isAccountAdmin": {
                            "type": "boolean"
                        },
                        "status": {
                            "type": "string"
                        },
                        "isLocked": {
                            "type": "boolean"
                        },
                        "isMfaBlocked": {
                            "type": "boolean"
                        },
                        "isEnrolled": {
                            "type": "boolean"
                        },
                        "phoneExtension": {
                            "type": "string"
                        },
                        "comments": {
                            "type": "string"
                        },
                        "enrollUser": {
                            "type": "boolean"
                        },
                        "company": {
                            "$ref": "#/definitions/CompanyModel"
                        },
                        "fiID": {
                            "type": "string"
                        },
                        "loginID": {
                            "type": "string"
                        },
                        "code": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "useClientBiometricsAuthentication": {
                            "type": "boolean"
                        },
                        "biometricsInfo": {
                            "$ref": "#/definitions/UserDeviceRequestModel"
                        },
                        "backOfficeSsoEnabled": {
                            "type": "boolean"
                        },
                        "permissions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductAccountPermissionsModel"
                            }
                        },
                        "productLimits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserProductFeatureLimitModel"
                            }
                        },
                        "roles": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RoleModel"
                            }
                        },
                        "companyAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LookupModel"
                            }
                        },
                        "ipRestriction": {
                            "$ref": "#/definitions/IpRestrictionModel"
                        },
                        "userTimeAccess": {
                            "$ref": "#/definitions/UserTimeAccess"
                        },
                        "mfaId": {
                            "type": "string"
                        },
                        "hasLoggedIn": {
                            "type": "boolean"
                        },
                        "isTokenMfaLocked": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "CompanyModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": [
                        "cifNumber",
                        "taxNumber",
                        "status",
                        "name",
                        "customerSince",
                        "addedOn"
                    ],
                    "properties": {
                        "cifNumber": {
                            "type": "string",
                            "minLength": 1
                        },
                        "taxNumber": {
                            "type": "string",
                            "minLength": 1
                        },
                        "companyId": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string",
                            "minLength": 1
                        },
                        "name": {
                            "type": "string",
                            "minLength": 1
                        },
                        "customerSince": {
                            "type": "string",
                            "format": "date-time",
                            "minLength": 1
                        },
                        "addedOn": {
                            "type": "string",
                            "format": "date-time",
                            "minLength": 1
                        },
                        "comments": {
                            "type": "string"
                        },
                        "address": {
                            "$ref": "#/definitions/AddressModel"
                        },
                        "companyAuthenticationSettings": {
                            "$ref": "#/definitions/CompanyAuthenticationSettingsModel"
                        }
                    }
                }
            ]
        },
        "AddressModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "line1": {
                            "type": "string"
                        },
                        "line2": {
                            "type": "string"
                        },
                        "line3": {
                            "type": "string"
                        },
                        "city": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "zipCode": {
                            "type": "string"
                        },
                        "country": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "CompanyAuthenticationSettingsModel": {
            "type": "object",
            "required": ["isActive", "challengeMethodType", "isSecureTokensEnabled"],
            "properties": {
                "isActive": {
                    "type": "boolean"
                },
                "challengeGroup": {
                    "$ref": "#/definitions/ChallengeGroupModel"
                },
                "challengeMethodType": {
                    "type": "integer",
                    "format": "int32"
                },
                "isSecureTokensEnabled": {
                    "type": "boolean"
                }
            }
        },
        "ChallengeGroupModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["name", "isDefault"],
                    "properties": {
                        "name": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": {
                            "type": "string"
                        },
                        "isDefault": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "UserDeviceRequestModel": {
            "type": "object",
            "properties": {
                "authenticationId": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                }
            }
        },
        "ProductAccountPermissionsModel": {
            "type": "object",
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductPermissionModel"
                    }
                },
                "accountUserPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountUserPermissionModel"
                    }
                },
                "productId": {
                    "type": "integer",
                    "format": "int32"
                },
                "productName": {
                    "type": "string"
                }
            }
        },
        "ProductPermissionModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["permission"],
                    "properties": {
                        "permission": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                }
            ]
        },
        "AccountUserPermissionModel": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountName": {
                    "type": "string"
                },
                "userPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserPermissionModel"
                    }
                }
            }
        },
        "UserPermissionModel": {
            "type": "object",
            "properties": {
                "permissionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserSummaryModel"
                    }
                },
                "permissionName": {
                    "type": "string"
                }
            }
        },
        "UserSummaryModel": {
            "type": "object",
            "required": [
                "isLocked",
                "isAdmin",
                "isSuperUser",
                "isActive",
                "isEditor",
                "isMfaLocked",
                "authenticationMethodId"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "userId": {
                    "type": "string"
                },
                "digitalId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "isLocked": {
                    "type": "boolean"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isSuperUser": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "publishState": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isEditor": {
                    "type": "boolean"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "isAuthenticationLocked": {
                    "type": "boolean"
                },
                "isAuthenticationSuspended": {
                    "type": "string",
                    "format": "date-time"
                },
                "utcSuspendEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "isMfaLocked": {
                    "type": "boolean"
                },
                "authenticationMethodId": {
                    "type": "integer",
                    "format": "int32"
                },
                "securityAndPasswordSettingsLink": {
                    "type": "string"
                }
            }
        },
        "UserProductFeatureLimitModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "initiationLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "approvalLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "productFeature": {
                            "$ref": "#/definitions/ProductFeatureModel"
                        }
                    }
                }
            ]
        },
        "ProductFeatureModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["id", "type", "isConfigurable"],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "type": {
                            "type": "string",
                            "minLength": 1
                        },
                        "status": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "permissions": {
                            "$ref": "#/definitions/ProductAccountPermissionsModel"
                        },
                        "accountIds": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        "isConfigurable": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "RoleModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["name"],
                    "properties": {
                        "name": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": {
                            "type": "string"
                        },
                        "users": {
                            "type": "string"
                        },
                        "permissions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FiPermissionModel"
                            }
                        }
                    }
                }
            ]
        },
        "FiPermissionModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["isDeleted"],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "isDeleted": {
                            "type": "boolean"
                        },
                        "claimPrequisite": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "LookupModel": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "IpRestrictionModel": {
            "type": "object",
            "required": ["userId", "restricted", "restrictedPending"],
            "properties": {
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IpRestrictionAddressModel"
                    }
                },
                "ipRestrictionsPending": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IpRestrictionAddressModel"
                    }
                },
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "restricted": {
                    "type": "boolean"
                },
                "restrictedPending": {
                    "type": "boolean"
                }
            }
        },
        "IpRestrictionAddressModel": {
            "type": "object",
            "required": ["id", "octet1", "octet2"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "octet1": {
                    "type": "integer",
                    "format": "byte"
                },
                "octet2": {
                    "type": "integer",
                    "format": "byte"
                },
                "octet3": {
                    "type": "integer",
                    "format": "byte"
                },
                "octet4": {
                    "type": "integer",
                    "format": "byte"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "UserTimeAccess": {
            "allOf": [
                {
                    "$ref": "#/definitions/RequestResponse"
                },
                {
                    "type": "object",
                    "required": ["timeRestricted", "userId"],
                    "properties": {
                        "timeRestricted": {
                            "type": "boolean"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "userTimeAccessDays": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserTimeAccessDay"
                            }
                        }
                    }
                }
            ]
        },
        "UserTimeAccessDay": {
            "type": "object",
            "required": ["timeAccessType", "dayOfWeek"],
            "properties": {
                "timeAccessType": {
                    "$ref": "#/definitions/TimeAccessType"
                },
                "dayOfWeek": {
                    "$ref": "#/definitions/DayOfWeek"
                },
                "beginTime": {
                    "type": "string",
                    "format": "duration"
                },
                "endTime": {
                    "type": "string",
                    "format": "duration"
                }
            }
        },
        "TimeAccessType": {
            "type": "integer",
            "description": "",
            "x-enumNames": ["Undefined", "AllowAllDay", "RestrictAllDay", "TimeRange"],
            "enum": [0, 1, 2, 3]
        },
        "DayOfWeek": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
            ],
            "enum": [0, 1, 2, 3, 4, 5, 6]
        },
        "RequestResponse": {
            "type": "object",
            "x-abstract": true,
            "required": ["success"],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                }
            }
        },
        "SecureTokenMfaLoginResponseModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "SecureTokenMfaLoginRequestModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "oneTimePasswordAndPin": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "RegisterSecureTokenMfaResponseModel": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "RegisterSecureTokenMfaRequestModel": {
            "type": "object",
            "properties": {
                "credentialId": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                }
            }
        },
        "SecureTokenMfaCredentialsResponseModel": {
            "type": "object",
            "required": ["shouldCancelCollection"],
            "properties": {
                "credentialId": {
                    "type": "string"
                },
                "shouldCancelCollection": {
                    "type": "boolean"
                }
            }
        },
        "OkResult": {
            "type": "object",
            "description": "Represents an action result that returns an empty HttpStatusCode.OK response.",
            "properties": {
                "request": {
                    "description": "Gets a HTTP request message for the results.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HttpRequestMessage"
                        }
                    ]
                }
            }
        },
        "HttpRequestMessage": {
            "type": "object",
            "properties": {
                "version": {
                    "$ref": "#/definitions/Version"
                },
                "content": {
                    "$ref": "#/definitions/HttpContent"
                },
                "method": {
                    "$ref": "#/definitions/HttpMethod"
                },
                "requestUri": {
                    "type": "string",
                    "format": "uri"
                },
                "headers": {
                    "$ref": "#/definitions/HttpRequestHeaders"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "Version": {
            "type": "object",
            "required": ["major", "minor", "build", "revision", "majorRevision", "minorRevision"],
            "properties": {
                "major": {
                    "type": "integer",
                    "format": "int32"
                },
                "minor": {
                    "type": "integer",
                    "format": "int32"
                },
                "build": {
                    "type": "integer",
                    "format": "int32"
                },
                "revision": {
                    "type": "integer",
                    "format": "int32"
                },
                "majorRevision": {
                    "type": "integer"
                },
                "minorRevision": {
                    "type": "integer"
                }
            }
        },
        "HttpContent": {
            "type": "object",
            "x-abstract": true,
            "properties": {
                "headers": {
                    "$ref": "#/definitions/HttpContentHeaders"
                }
            }
        },
        "HttpContentHeaders": {
            "allOf": [
                {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyValuePairOfStringAndIEnumerableOfString"
                    }
                },
                {
                    "type": "object",
                    "properties": {
                        "Allow": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "ContentDisposition": {
                            "$ref": "#/definitions/ContentDispositionHeaderValue"
                        },
                        "ContentEncoding": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "ContentLanguage": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "ContentLength": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "ContentLocation": {
                            "type": "string",
                            "format": "uri"
                        },
                        "ContentMD5": {
                            "type": "string",
                            "format": "byte"
                        },
                        "ContentRange": {
                            "$ref": "#/definitions/ContentRangeHeaderValue"
                        },
                        "ContentType": {
                            "$ref": "#/definitions/MediaTypeHeaderValue"
                        },
                        "Expires": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "LastModified": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "ContentDispositionHeaderValue": {
            "type": "object",
            "properties": {
                "dispositionType": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameValueHeaderValue"
                    }
                },
                "name": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "fileNameStar": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modificationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "readDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "NameValueHeaderValue": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ContentRangeHeaderValue": {
            "type": "object",
            "required": ["hasLength", "hasRange"],
            "properties": {
                "unit": {
                    "type": "string"
                },
                "from": {
                    "type": "integer",
                    "format": "int64"
                },
                "to": {
                    "type": "integer",
                    "format": "int64"
                },
                "length": {
                    "type": "integer",
                    "format": "int64"
                },
                "hasLength": {
                    "type": "boolean"
                },
                "hasRange": {
                    "type": "boolean"
                }
            }
        },
        "MediaTypeHeaderValue": {
            "type": "object",
            "properties": {
                "charSet": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameValueHeaderValue"
                    }
                },
                "mediaType": {
                    "type": "string"
                }
            }
        },
        "KeyValuePairOfStringAndIEnumerableOfString": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "HttpMethod": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string"
                }
            }
        },
        "HttpRequestHeaders": {
            "allOf": [
                {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyValuePairOfStringAndIEnumerableOfString"
                    }
                },
                {
                    "type": "object",
                    "properties": {
                        "Accept": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MediaTypeWithQualityHeaderValue"
                            }
                        },
                        "AcceptCharset": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StringWithQualityHeaderValue"
                            }
                        },
                        "AcceptEncoding": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StringWithQualityHeaderValue"
                            }
                        },
                        "AcceptLanguage": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StringWithQualityHeaderValue"
                            }
                        },
                        "Authorization": {
                            "$ref": "#/definitions/AuthenticationHeaderValue"
                        },
                        "Expect": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NameValueWithParametersHeaderValue"
                            }
                        },
                        "ExpectContinue": {
                            "type": "boolean"
                        },
                        "From": {
                            "type": "string"
                        },
                        "Host": {
                            "type": "string"
                        },
                        "IfMatch": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EntityTagHeaderValue"
                            }
                        },
                        "IfModifiedSince": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "IfNoneMatch": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EntityTagHeaderValue"
                            }
                        },
                        "IfRange": {
                            "$ref": "#/definitions/RangeConditionHeaderValue"
                        },
                        "IfUnmodifiedSince": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "MaxForwards": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "ProxyAuthorization": {
                            "$ref": "#/definitions/AuthenticationHeaderValue"
                        },
                        "Range": {
                            "$ref": "#/definitions/RangeHeaderValue"
                        },
                        "Referrer": {
                            "type": "string",
                            "format": "uri"
                        },
                        "TE": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransferCodingWithQualityHeaderValue"
                            }
                        },
                        "UserAgent": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductInfoHeaderValue"
                            }
                        },
                        "CacheControl": {
                            "$ref": "#/definitions/CacheControlHeaderValue"
                        },
                        "Connection": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "ConnectionClose": {
                            "type": "boolean"
                        },
                        "Date": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "Pragma": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NameValueHeaderValue"
                            }
                        },
                        "Trailer": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "TransferEncoding": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransferCodingHeaderValue"
                            }
                        },
                        "TransferEncodingChunked": {
                            "type": "boolean"
                        },
                        "Upgrade": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductHeaderValue"
                            }
                        },
                        "Via": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ViaHeaderValue"
                            }
                        },
                        "Warning": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WarningHeaderValue"
                            }
                        }
                    }
                }
            ]
        },
        "MediaTypeWithQualityHeaderValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/MediaTypeHeaderValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "quality": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                }
            ]
        },
        "StringWithQualityHeaderValue": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "quality": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "AuthenticationHeaderValue": {
            "type": "object",
            "properties": {
                "scheme": {
                    "type": "string"
                },
                "parameter": {
                    "type": "string"
                }
            }
        },
        "NameValueWithParametersHeaderValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/NameValueHeaderValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "parameters": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NameValueHeaderValue"
                            }
                        }
                    }
                }
            ]
        },
        "EntityTagHeaderValue": {
            "type": "object",
            "required": ["isWeak"],
            "properties": {
                "tag": {
                    "type": "string"
                },
                "isWeak": {
                    "type": "boolean"
                }
            }
        },
        "RangeConditionHeaderValue": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "entityTag": {
                    "$ref": "#/definitions/EntityTagHeaderValue"
                }
            }
        },
        "RangeHeaderValue": {
            "type": "object",
            "properties": {
                "unit": {
                    "type": "string"
                },
                "ranges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RangeItemHeaderValue"
                    }
                }
            }
        },
        "RangeItemHeaderValue": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "integer",
                    "format": "int64"
                },
                "to": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "TransferCodingWithQualityHeaderValue": {
            "allOf": [
                {
                    "$ref": "#/definitions/TransferCodingHeaderValue"
                },
                {
                    "type": "object",
                    "properties": {
                        "quality": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                }
            ]
        },
        "TransferCodingHeaderValue": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameValueHeaderValue"
                    }
                }
            }
        },
        "ProductInfoHeaderValue": {
            "type": "object",
            "properties": {
                "product": {
                    "$ref": "#/definitions/ProductHeaderValue"
                },
                "comment": {
                    "type": "string"
                }
            }
        },
        "ProductHeaderValue": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "CacheControlHeaderValue": {
            "type": "object",
            "required": [
                "noCache",
                "noStore",
                "maxStale",
                "noTransform",
                "onlyIfCached",
                "public",
                "private",
                "mustRevalidate",
                "proxyRevalidate"
            ],
            "properties": {
                "noCache": {
                    "type": "boolean"
                },
                "noCacheHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "noStore": {
                    "type": "boolean"
                },
                "maxAge": {
                    "type": "string",
                    "format": "duration"
                },
                "sharedMaxAge": {
                    "type": "string",
                    "format": "duration"
                },
                "maxStale": {
                    "type": "boolean"
                },
                "maxStaleLimit": {
                    "type": "string",
                    "format": "duration"
                },
                "minFresh": {
                    "type": "string",
                    "format": "duration"
                },
                "noTransform": {
                    "type": "boolean"
                },
                "onlyIfCached": {
                    "type": "boolean"
                },
                "public": {
                    "type": "boolean"
                },
                "private": {
                    "type": "boolean"
                },
                "privateHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mustRevalidate": {
                    "type": "boolean"
                },
                "proxyRevalidate": {
                    "type": "boolean"
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NameValueHeaderValue"
                    }
                }
            }
        },
        "ViaHeaderValue": {
            "type": "object",
            "properties": {
                "protocolName": {
                    "type": "string"
                },
                "protocolVersion": {
                    "type": "string"
                },
                "receivedBy": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                }
            }
        },
        "WarningHeaderValue": {
            "type": "object",
            "required": ["code"],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "agent": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Credential": {
            "type": "object",
            "required": ["numberOfSecurityQuestions"],
            "properties": {
                "statusCode": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SecurityQuestion"
                    }
                },
                "numberOfSecurityQuestions": {
                    "type": "integer",
                    "format": "int32"
                },
                "riskReceiptId": {
                    "type": "string"
                }
            }
        },
        "SecurityQuestion": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "RecordedSecurityQuestion": {
            "allOf": [
                {
                    "$ref": "#/definitions/SecurityQuestion"
                },
                {
                    "type": "object",
                    "properties": {
                        "answerOnFile": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "ChangePasswordViewModel": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string"
                },
                "message": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "UserSettingsModel": {
            "type": "object",
            "required": ["unreadMessageCount"],
            "properties": {
                "idleTimeoutDuration": {
                    "type": "integer",
                    "format": "int32"
                },
                "unreadMessageCount": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "RecentLoginsModel": {
            "type": "object",
            "properties": {
                "userName": {
                    "type": "string"
                },
                "standardLoginInfo": {
                    "$ref": "#/definitions/UserLoginInfoModel"
                },
                "tokenMfaLoginInfo": {
                    "$ref": "#/definitions/UserLoginInfoModel"
                }
            }
        },
        "UserLoginInfoModel": {
            "type": "object",
            "properties": {
                "lastSuccessfulLogin": {
                    "type": "string"
                },
                "lastSuccessfulLoginIPAddress": {
                    "type": "string"
                },
                "lastFailedLogin": {
                    "type": "string"
                },
                "lastFailedLoginIPAddress": {
                    "type": "string"
                }
            }
        },
        "InstitutionCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Institution"
            }
        },
        "Institution": {
            "type": "object",
            "properties": {
                "recordId": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string"
                },
                "routingNumber": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "treasury": {
                    "$ref": "#/definitions/TreasuryInstitution"
                }
            }
        },
        "TreasuryInstitution": {
            "type": "object",
            "required": [
                "institutionId",
                "rowStatusId",
                "updatedDate",
                "createdDate",
                "timeZoneId"
            ],
            "properties": {
                "institutionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "financialInstitutionId": {
                    "type": "string"
                },
                "rowStatusId": {
                    "type": "integer"
                },
                "logOffAddress": {
                    "type": "string"
                },
                "fileArchiveId": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "notificationEnabled": {
                    "type": "boolean"
                },
                "timeZoneId": {
                    "type": "integer",
                    "format": "int32"
                },
                "paymentProcessTime": {
                    "type": "string"
                },
                "achExceptionReturnCode": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "jxEnvironment": {
                    "type": "string"
                },
                "rsaInstId": {
                    "type": "string"
                },
                "ipRestricted": {
                    "type": "boolean"
                },
                "notificationEmail": {
                    "type": "string"
                },
                "showCutoffTimeZone": {
                    "type": "boolean"
                },
                "brandName": {
                    "type": "string"
                },
                "supportEmail": {
                    "type": "string"
                },
                "supportPhone": {
                    "type": "string"
                },
                "welcomeEmailText": {
                    "type": "string"
                },
                "supportDepartmentName": {
                    "type": "string"
                },
                "productName": {
                    "type": "string"
                },
                "parentInstitutionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "coreReleaseVersion": {
                    "type": "string"
                }
            }
        },
        "GetAllInstitutionsRequest": {
            "type": "object",
            "required": ["includeInactive", "disableCache"],
            "properties": {
                "includeInactive": {
                    "type": "boolean"
                },
                "disableCache": {
                    "type": "boolean"
                }
            }
        },
        "FeatureFlagDataPage": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataPageOfFeatureFlag"
                },
                {
                    "type": "object"
                }
            ]
        },
        "DataPageOfFeatureFlag": {
            "type": "object",
            "required": [
                "pageSize",
                "maxPageSize",
                "pageNumber",
                "totalCount",
                "recordCountInCurrentPage"
            ],
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxPageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "recordCountInCurrentPage": {
                    "type": "integer",
                    "format": "int32"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FeatureFlag"
                    }
                }
            }
        },
        "FeatureFlag": {
            "allOf": [
                {
                    "$ref": "#/definitions/FeatureFlagKey"
                },
                {
                    "type": "object",
                    "required": ["enabled"],
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "value": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "FeatureFlagKey": {
            "type": "object",
            "required": ["featureFlagKeyUniqueId", "updatedDate"],
            "properties": {
                "featureFlagKeyUniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "applicationNameTypes": {
                    "$ref": "#/definitions/ApplicationNameTypeCollection"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "updatedByUserId": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ApplicationNameTypeCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ApplicationNameType"
            }
        },
        "GetAllFeatureFlagsRequest": {
            "type": "object",
            "required": ["disableCache"],
            "properties": {
                "disableCache": {
                    "type": "boolean"
                },
                "institutionRecordId": {
                    "type": "string"
                },
                "dataApplicationNameTypes": {
                    "$ref": "#/definitions/ApplicationNameTypeCollection"
                },
                "pagingParameters": {
                    "$ref": "#/definitions/PagingParameters"
                }
            }
        },
        "PagingParameters": {
            "type": "object",
            "required": ["pageSize", "pageNumber"],
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "orderBys": {
                    "$ref": "#/definitions/OrderByCollection"
                },
                "searchBys": {
                    "$ref": "#/definitions/SearchByCollection"
                }
            }
        },
        "OrderByCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/OrderBy"
            }
        },
        "OrderBy": {
            "type": "object",
            "required": ["descending"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "descending": {
                    "type": "boolean"
                }
            }
        },
        "SearchByCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/SearchBy"
            }
        },
        "SearchBy": {
            "type": "object",
            "required": ["searchType"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "secondValue": {
                    "type": "string"
                },
                "searchType": {
                    "$ref": "#/definitions/SearchType"
                },
                "values": {
                    "$ref": "#/definitions/TextKeyCollection"
                }
            }
        },
        "SearchType": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "None",
                "Contains",
                "StartsWith",
                "EndsWidth",
                "Equals",
                "NotEquals",
                "GreaterThan",
                "GreaterThanOrEqual",
                "LessThan",
                "LessThanOrEqual",
                "Between"
            ],
            "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        },
        "TextKeyCollection": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "SaveFeatureFlagsRequest": {
            "type": "object",
            "required": ["applyToAllInstitutions", "institutionIdType", "disableCache"],
            "properties": {
                "applyToAllInstitutions": {
                    "type": "boolean"
                },
                "featureFlags": {
                    "$ref": "#/definitions/FeatureFlagCollection"
                },
                "institutionIdType": {
                    "$ref": "#/definitions/InstitutionIdType"
                },
                "institutionIds": {
                    "$ref": "#/definitions/TextKeyCollection"
                },
                "disableCache": {
                    "type": "boolean"
                }
            }
        },
        "FeatureFlagCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/FeatureFlag"
            }
        },
        "InstitutionIdType": {
            "type": "integer",
            "description": "",
            "x-enumNames": ["None", "RecordId", "UniqueId"],
            "enum": [0, 1, 2]
        },
        "BaiConfigurationModel": {
            "type": "object",
            "properties": {
                "baiCodeTitles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BaiCodeTitleModel"
                    }
                },
                "baiCodeTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BaiCodeTypeModel"
                    }
                },
                "selectedTransactionCodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TransactionCodeModel"
                    }
                },
                "transactionCodeList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TransactionCodeModel"
                    }
                }
            }
        },
        "BaiCodeTitleModel": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "BaiCodeTypeModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["baiCode", "baiCodeTitleId", "isSelected"],
                    "properties": {
                        "baiCode": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "transactionType": {
                            "type": "string"
                        },
                        "level": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "baiCodeTitleId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isSelected": {
                            "type": "boolean"
                        },
                        "selectedTransactionCodes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransactionCodeModel"
                            }
                        }
                    }
                }
            ]
        },
        "TransactionCodeModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": [
                        "code",
                        "description",
                        "institutionId",
                        "type",
                        "isExcluded",
                        "isDeleted",
                        "isDescriptionChanged",
                        "isTypeChanged",
                        "isChecked"
                    ],
                    "properties": {
                        "code": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": {
                            "type": "string",
                            "minLength": 1
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "type": {
                            "type": "string",
                            "minLength": 1
                        },
                        "isExcluded": {
                            "type": "boolean"
                        },
                        "isDeleted": {
                            "type": "boolean"
                        },
                        "isDescriptionChanged": {
                            "type": "boolean"
                        },
                        "isTypeChanged": {
                            "type": "boolean"
                        },
                        "ofxTransactionTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "ofxTransactionTypeName": {
                            "type": "string"
                        },
                        "baiCode": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "changeStatus": {
                            "type": "string"
                        },
                        "groups": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransactionCodeGroupModel"
                            }
                        },
                        "isChecked": {
                            "type": "boolean"
                        },
                        "label": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "TransactionCodeGroupModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["name", "isReadOnly"],
                    "properties": {
                        "name": {
                            "type": "string",
                            "minLength": 1
                        },
                        "isReadOnly": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "CheckImageModel": {
            "type": "object",
            "properties": {
                "checkId": {
                    "type": "string"
                },
                "frontImage": {
                    "type": "string",
                    "format": "byte"
                },
                "backImage": {
                    "type": "string",
                    "format": "byte"
                }
            }
        },
        "UserApprovalSettingsModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": [
                        "channelApproveChannel",
                        "channelApproveBackOffice",
                        "backOfficeApproveBackOffice"
                    ],
                    "properties": {
                        "channelApproveChannel": {
                            "type": "boolean"
                        },
                        "channelApproveBackOffice": {
                            "type": "boolean"
                        },
                        "backOfficeApproveBackOffice": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "CompanyUserAccountSettingsModel": {
            "type": "object",
            "required": [
                "useAccountNicknames",
                "accountMaskTypeId",
                "allowUserToOverrideAccountMasking",
                "timeZoneId",
                "showCutOffTimeZone"
            ],
            "properties": {
                "useAccountNicknames": {
                    "type": "boolean"
                },
                "accountMaskTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "allowUserToOverrideAccountMasking": {
                    "type": "boolean"
                },
                "timeZoneId": {
                    "type": "integer",
                    "format": "int32"
                },
                "showCutOffTimeZone": {
                    "type": "boolean"
                }
            }
        },
        "SearchCompanyUserModel": {
            "type": "object",
            "required": ["activeUsersOnly", "enrolledUsersOnly", "includeRoles", "companyId"],
            "properties": {
                "activeUsersOnly": {
                    "type": "boolean"
                },
                "enrolledUsersOnly": {
                    "type": "boolean"
                },
                "includeRoles": {
                    "type": "boolean"
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UserStateModel": {
            "type": "object",
            "required": [
                "userId",
                "isActive",
                "isLocked",
                "approvalRequired",
                "hasPendingChanges",
                "isEnrolled",
                "isEditor",
                "hasMinimumRequirements",
                "isSuperUser"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/CompanyModel"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isLocked": {
                    "type": "boolean"
                },
                "approvalRequired": {
                    "type": "boolean"
                },
                "pendingState": {
                    "type": "string"
                },
                "editedByUser": {
                    "$ref": "#/definitions/UserModel"
                },
                "editedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "hasPendingChanges": {
                    "type": "boolean"
                },
                "isEnrolled": {
                    "type": "boolean"
                },
                "isEditor": {
                    "type": "boolean"
                },
                "hasMinimumRequirements": {
                    "type": "boolean"
                },
                "isSuperUser": {
                    "type": "boolean"
                },
                "alias": {
                    "type": "string"
                }
            }
        },
        "UserProductFeatureSummaryModel": {
            "type": "object",
            "required": [
                "userId",
                "changedUserInformation",
                "changedAccountAccess",
                "hasAch",
                "changedAchEntitlements",
                "changedAchUserLimits",
                "hasStandardPosPay",
                "hasSsoPosPay",
                "changedStandardPosPayEntitlements",
                "changedSsoPosPayUserSettings",
                "hasInformationReporting",
                "changedInformationReportingEntitlements",
                "hasInternalTransfers",
                "changedInternalTransfersEntitlements",
                "changedInternalTransfersUserLimits",
                "hasWireTransfers",
                "hasWireTransfersDomestic",
                "hasWireTransfersInternational",
                "changedWireTransfersEntitlements",
                "changedWireTransfersUserLimits",
                "hasWireTransfersDli",
                "changedWireTransfersDliEntitlements",
                "changedWireTransfersDliUserLimits",
                "hasStopPayment",
                "changedStopPaymentEntitlements",
                "changedTimeAccess",
                "changedIpRestrictions",
                "hasIntegratedServices",
                "changedIntegratedServices",
                "hasReceivables",
                "changedReceivables",
                "hasAccountReconciliationReporting",
                "changedAccountReconciliationReporting"
            ],
            "properties": {
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "changedUserInformation": {
                    "type": "boolean"
                },
                "changedAccountAccess": {
                    "type": "boolean"
                },
                "hasAch": {
                    "type": "boolean"
                },
                "changedAchEntitlements": {
                    "type": "boolean"
                },
                "changedAchUserLimits": {
                    "type": "boolean"
                },
                "hasStandardPosPay": {
                    "type": "boolean"
                },
                "hasSsoPosPay": {
                    "type": "boolean"
                },
                "changedStandardPosPayEntitlements": {
                    "type": "boolean"
                },
                "changedSsoPosPayUserSettings": {
                    "type": "boolean"
                },
                "hasInformationReporting": {
                    "type": "boolean"
                },
                "changedInformationReportingEntitlements": {
                    "type": "boolean"
                },
                "hasInternalTransfers": {
                    "type": "boolean"
                },
                "changedInternalTransfersEntitlements": {
                    "type": "boolean"
                },
                "changedInternalTransfersUserLimits": {
                    "type": "boolean"
                },
                "hasWireTransfers": {
                    "type": "boolean"
                },
                "hasWireTransfersDomestic": {
                    "type": "boolean"
                },
                "hasWireTransfersInternational": {
                    "type": "boolean"
                },
                "changedWireTransfersEntitlements": {
                    "type": "boolean"
                },
                "changedWireTransfersUserLimits": {
                    "type": "boolean"
                },
                "hasWireTransfersDli": {
                    "type": "boolean"
                },
                "changedWireTransfersDliEntitlements": {
                    "type": "boolean"
                },
                "changedWireTransfersDliUserLimits": {
                    "type": "boolean"
                },
                "hasStopPayment": {
                    "type": "boolean"
                },
                "changedStopPaymentEntitlements": {
                    "type": "boolean"
                },
                "changedTimeAccess": {
                    "type": "boolean"
                },
                "changedIpRestrictions": {
                    "type": "boolean"
                },
                "hasIntegratedServices": {
                    "type": "boolean"
                },
                "changedIntegratedServices": {
                    "type": "boolean"
                },
                "hasReceivables": {
                    "type": "boolean"
                },
                "changedReceivables": {
                    "type": "boolean"
                },
                "hasAccountReconciliationReporting": {
                    "type": "boolean"
                },
                "changedAccountReconciliationReporting": {
                    "type": "boolean"
                }
            }
        },
        "UserInformationModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/RequestResponse"
                },
                {
                    "type": "object",
                    "required": [
                        "userId",
                        "name",
                        "loginId",
                        "department",
                        "email",
                        "phone",
                        "extension",
                        "fax",
                        "isMfaBlocked",
                        "isSuperUser",
                        "isAccountMaskingConfigurable",
                        "isMethodOfVerificationConfigurable",
                        "isAdmin",
                        "copyUserId",
                        "isEnrolled",
                        "isActive",
                        "hasLoggedIn"
                    ],
                    "properties": {
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string",
                            "minLength": 1
                        },
                        "loginId": {
                            "type": "string",
                            "minLength": 1
                        },
                        "department": {
                            "type": "string",
                            "minLength": 1
                        },
                        "email": {
                            "type": "string",
                            "minLength": 1
                        },
                        "phone": {
                            "type": "string",
                            "minLength": 1
                        },
                        "extension": {
                            "type": "string",
                            "minLength": 1
                        },
                        "mobile": {
                            "type": "string"
                        },
                        "mobileExtension": {
                            "type": "string"
                        },
                        "fax": {
                            "type": "string",
                            "minLength": 1
                        },
                        "accountNicknames": {
                            "type": "boolean"
                        },
                        "accountMasking": {
                            "type": "boolean"
                        },
                        "verificationMethod": {
                            "type": "string"
                        },
                        "isMfaBlocked": {
                            "type": "boolean"
                        },
                        "isSuperUser": {
                            "type": "boolean"
                        },
                        "isAccountMaskingConfigurable": {
                            "type": "boolean"
                        },
                        "isMethodOfVerificationConfigurable": {
                            "type": "boolean"
                        },
                        "isAdmin": {
                            "type": "boolean"
                        },
                        "copyUserId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isEnrolled": {
                            "type": "boolean"
                        },
                        "isActive": {
                            "type": "boolean"
                        },
                        "mfaId": {
                            "type": "string"
                        },
                        "hasLoggedIn": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "UserInformationResponseModel": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/UserInformationModel"
                },
                "pendingUser": {
                    "$ref": "#/definitions/UserInformationModel"
                }
            }
        },
        "ChallengeSettingsModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": [
                        "authenticationMethodId",
                        "userStatusId",
                        "tokenCredentialState",
                        "userId",
                        "symantecUserExists"
                    ],
                    "properties": {
                        "authenticationMethodId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "userStatus": {
                            "type": "string"
                        },
                        "userStatusId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "oobVerificationMethodType": {
                            "type": "string"
                        },
                        "isOobPinCollected": {
                            "type": "boolean"
                        },
                        "oobMessagePhoneNumber": {
                            "type": "string"
                        },
                        "oobCallPhoneNumber": {
                            "type": "string"
                        },
                        "tokenCredentialState": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "tokenUserId": {
                            "type": "string"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "utcSuspendEndTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "localSuspendEndTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "symantecUserExists": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "GetUserAccountAccessModel": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountAccessModel"
                    }
                }
            }
        },
        "AccountAccessModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["hasUserAccess", "hasPendingUserAccess"],
                    "properties": {
                        "companyAccount": {
                            "$ref": "#/definitions/CompanyAccountModel"
                        },
                        "hasUserAccess": {
                            "type": "boolean"
                        },
                        "hasPendingUserAccess": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "CompanyAccountModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["name", "number", "status"],
                    "properties": {
                        "name": {
                            "type": "string",
                            "minLength": 1
                        },
                        "number": {
                            "type": "string",
                            "minLength": 1
                        },
                        "cifNumber": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string",
                            "minLength": 1
                        },
                        "type": {
                            "type": "string"
                        },
                        "account": {
                            "$ref": "#/definitions/AccountModel"
                        },
                        "productPermissions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductAccountPermissionsModel"
                            }
                        },
                        "users": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LookupModel"
                            }
                        },
                        "perTransactionLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "dailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        }
                    }
                }
            ]
        },
        "AccountModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["isCompanyAccount"],
                    "properties": {
                        "companyName": {
                            "type": "string"
                        },
                        "number": {
                            "type": "string"
                        },
                        "cifNumber": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "coreStatus": {
                            "type": "string"
                        },
                        "isCompanyAccount": {
                            "type": "boolean"
                        },
                        "linkedTMCompanies": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "SaveUserAccountAccessModel": {
            "type": "object",
            "properties": {
                "addedAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountAccessModel"
                    }
                },
                "removedAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountAccessModel"
                    }
                }
            }
        },
        "GetUserProductEntitlementsModel": {
            "type": "object",
            "properties": {
                "productType": {
                    "type": "string"
                },
                "userProductClaims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserClaimModel"
                    }
                },
                "accountProductClaims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClaimModel"
                    }
                },
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductAccount"
                    }
                }
            }
        },
        "UserClaimModel": {
            "type": "object",
            "required": ["claimId"],
            "properties": {
                "claimId": {
                    "type": "integer",
                    "format": "int32"
                },
                "claimName": {
                    "type": "string"
                },
                "hasUserClaim": {
                    "type": "boolean"
                },
                "hasPendingUserClaim": {
                    "type": "boolean"
                },
                "claimDescription": {
                    "type": "string"
                }
            }
        },
        "ClaimModel": {
            "type": "object",
            "required": ["claimId"],
            "properties": {
                "claimId": {
                    "type": "integer",
                    "format": "int32"
                },
                "claimName": {
                    "type": "string"
                },
                "claimDescription": {
                    "type": "string"
                }
            }
        },
        "ProductAccount": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "userAccountClaims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserClaimModel"
                    }
                }
            }
        },
        "GetUserAchEntitlementsModel": {
            "type": "object",
            "properties": {
                "achCompanies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AchCompanyModel"
                    }
                },
                "userAchCompanies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AchCompanyModel"
                    }
                },
                "userProductClaims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserClaimModel"
                    }
                }
            }
        },
        "AchCompanyModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": [
                        "companyName",
                        "companyId",
                        "totalDailyLimit",
                        "notOnUsTransactionTypes",
                        "batchBalanceRequirements",
                        "onUsTransactionsRequired",
                        "onUsAmountRequiredPerBatch",
                        "isActive",
                        "isPaymentProcessingCompany",
                        "allowAchPaymentProcessingCompany",
                        "allowUnbalancedPayments",
                        "uniqueIdentifier",
                        "allowSameDayAch"
                    ],
                    "properties": {
                        "companyName": {
                            "type": "string",
                            "minLength": 1
                        },
                        "companyId": {
                            "type": "string",
                            "minLength": 1
                        },
                        "secCodes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SecCodeModel"
                            }
                        },
                        "entryDescription": {
                            "type": "string"
                        },
                        "discretionaryData": {
                            "type": "string"
                        },
                        "settlementAccount": {
                            "type": "string"
                        },
                        "settlementAccountType": {
                            "type": "string"
                        },
                        "balanceValidationType": {
                            "type": "string"
                        },
                        "availableBalanceTable": {
                            "type": "string"
                        },
                        "totalDailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "notOnUsTransactionTypes": {
                            "type": "string",
                            "minLength": 1
                        },
                        "batchBalanceRequirements": {
                            "type": "string",
                            "minLength": 1
                        },
                        "onUsTransactionsRequired": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "onUsAmountRequiredPerBatch": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "isActive": {
                            "type": "boolean"
                        },
                        "isPaymentProcessingCompany": {
                            "type": "boolean"
                        },
                        "allowAchPaymentProcessingCompany": {
                            "type": "boolean"
                        },
                        "allowUnbalancedPayments": {
                            "type": "boolean"
                        },
                        "prefundingDays": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "offsetAccountNumber": {
                            "type": "string"
                        },
                        "uniqueIdentifier": {
                            "type": "string",
                            "format": "guid"
                        },
                        "allowSameDayAch": {
                            "type": "boolean"
                        },
                        "coreSecCode": {
                            "type": "string"
                        },
                        "companyStatus": {
                            "$ref": "#/definitions/EntityStatusTypeModel"
                        },
                        "transactionType": {
                            "$ref": "#/definitions/TransactionTypeModel"
                        },
                        "paymentBalanceType": {
                            "$ref": "#/definitions/PaymentBalanceTypeModel"
                        },
                        "configurationErrors": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConfigurationErrorModel"
                            }
                        }
                    }
                }
            ]
        },
        "SecCodeModel": {
            "type": "object",
            "required": ["code", "description", "id"],
            "properties": {
                "code": {
                    "type": "string",
                    "minLength": 1
                },
                "description": {
                    "type": "string",
                    "minLength": 1
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "coreCode": {
                    "type": "string"
                }
            }
        },
        "EntityStatusTypeModel": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "TransactionTypeModel": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "coreCode": {
                    "type": "string"
                }
            }
        },
        "PaymentBalanceTypeModel": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "coreCode": {
                    "type": "string"
                }
            }
        },
        "ConfigurationErrorModel": {
            "type": "object",
            "required": ["id", "failure"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "failure": {
                    "type": "boolean"
                }
            }
        },
        "GetUserProductLimitsResponseModel": {
            "type": "object",
            "required": ["productDailyLimit"],
            "properties": {
                "productType": {
                    "type": "string"
                },
                "userProductLimit": {
                    "$ref": "#/definitions/UserProductLimitsModel"
                },
                "pendingUserProductLimit": {
                    "$ref": "#/definitions/UserProductLimitsModel"
                },
                "userAccountLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountUserLimitModel"
                    }
                },
                "productDailyLimit": {
                    "type": "number",
                    "format": "decimal"
                }
            }
        },
        "UserProductLimitsModel": {
            "type": "object",
            "required": ["initiationLimit", "approvalLimit"],
            "properties": {
                "initiationLimit": {
                    "type": "number",
                    "format": "decimal"
                },
                "approvalLimit": {
                    "type": "number",
                    "format": "decimal"
                }
            }
        },
        "AccountUserLimitModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "userAccount": {
                            "$ref": "#/definitions/UserAccountModel"
                        },
                        "userAccountLimit": {
                            "$ref": "#/definitions/UserAccountLimitModel"
                        },
                        "pendingUserAccountLimit": {
                            "$ref": "#/definitions/UserAccountLimitModel"
                        }
                    }
                }
            ]
        },
        "UserAccountModel": {
            "type": "object",
            "required": ["id", "userId"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "account": {
                    "$ref": "#/definitions/CompanyAccountModel"
                }
            }
        },
        "UserAccountLimitModel": {
            "type": "object",
            "required": ["perTransactionLimit", "dailyLimit"],
            "properties": {
                "perTransactionLimit": {
                    "type": "number",
                    "format": "decimal"
                },
                "dailyLimit": {
                    "type": "number",
                    "format": "decimal"
                }
            }
        },
        "GetUserAchLimitsModel": {
            "type": "object",
            "required": ["productDailyLimit"],
            "properties": {
                "userProductLimit": {
                    "$ref": "#/definitions/UserProductLimitsModel"
                },
                "pendingUserProductLimit": {
                    "$ref": "#/definitions/UserProductLimitsModel"
                },
                "userAchCompanies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserAchCompanyLimitModel"
                    }
                },
                "productDailyLimit": {
                    "type": "number",
                    "format": "decimal"
                }
            }
        },
        "UserAchCompanyLimitModel": {
            "type": "object",
            "properties": {
                "achCompany": {
                    "$ref": "#/definitions/AchCompanyModel"
                },
                "userAchCompanyLimit": {
                    "$ref": "#/definitions/AchCompanyLimitModel"
                },
                "pendingUserAchCompanyLimit": {
                    "$ref": "#/definitions/AchCompanyLimitModel"
                }
            }
        },
        "AchCompanyLimitModel": {
            "type": "object",
            "required": ["perTransactionLimit", "dailyLimit"],
            "properties": {
                "perTransactionLimit": {
                    "type": "number",
                    "format": "decimal"
                },
                "dailyLimit": {
                    "type": "number",
                    "format": "decimal"
                }
            }
        },
        "SaveUserProductEntitlementsModel": {
            "type": "object",
            "properties": {
                "addedUserClaims": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "addedUserClaimAccounts": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                },
                "removedUserClaims": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "removedUserClaimAccounts": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            }
        },
        "SaveUserAchProductEntitlementsModel": {
            "type": "object",
            "properties": {
                "addedEntitlements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserProductEntitlement"
                    }
                },
                "removedEntitlements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserProductEntitlement"
                    }
                },
                "achCompanies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AchCompanyModel"
                    }
                }
            }
        },
        "UserProductEntitlement": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/ProductAccount"
                },
                "claim": {
                    "$ref": "#/definitions/ClaimModel"
                }
            }
        },
        "CompanyUserTimeAccess": {
            "allOf": [
                {
                    "$ref": "#/definitions/RequestResponse"
                },
                {
                    "type": "object",
                    "required": ["timeRestricted", "timeRestrictedPending", "userId"],
                    "properties": {
                        "timeRestricted": {
                            "type": "boolean"
                        },
                        "timeRestrictedPending": {
                            "type": "boolean"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "userTimeAccessDays": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserTimeAccessDay"
                            }
                        },
                        "userTimeAccessDaysPending": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserTimeAccessDay"
                            }
                        }
                    }
                }
            ]
        },
        "SsoPosPayUserSettingsModel": {
            "type": "object",
            "properties": {
                "pendingSsoLoginId": {
                    "type": "string"
                },
                "ssoLoginId": {
                    "type": "string"
                },
                "userProductClaims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserClaimModel"
                    }
                }
            }
        },
        "ReceivablesUserSettingsModel": {
            "type": "object",
            "required": ["remoteDepositProductTypeId"],
            "properties": {
                "pendingSsoAccessKey": {
                    "type": "string"
                },
                "ssoAccessKey": {
                    "type": "string"
                },
                "pendingSsoLoginId": {
                    "type": "string"
                },
                "ssoLoginId": {
                    "type": "string"
                },
                "userProductClaims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserClaimModel"
                    }
                },
                "remoteDepositProductTypeId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CompanyUserChallengeSettingsModel": {
            "type": "object",
            "required": [
                "isOobAuthenticationPinRequired",
                "numberOfOobAttemptsAllowed",
                "isTokenEnabledForChallenges",
                "numberOfTokenChallengePointAttemptsAllowed",
                "hasSecureTokenAccountId",
                "isChannelLoginTwoFactorAuthenticationEnabled"
            ],
            "properties": {
                "isOobAuthenticationPinRequired": {
                    "type": "boolean"
                },
                "numberOfOobAttemptsAllowed": {
                    "type": "integer",
                    "format": "int32"
                },
                "isTokenEnabledForChallenges": {
                    "type": "boolean"
                },
                "numberOfTokenChallengePointAttemptsAllowed": {
                    "type": "integer",
                    "format": "int32"
                },
                "hasSecureTokenAccountId": {
                    "type": "boolean"
                },
                "isChannelLoginTwoFactorAuthenticationEnabled": {
                    "type": "boolean"
                }
            }
        },
        "CutoffConfigurationModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["transferTime"],
                    "properties": {
                        "transferTime": {
                            "type": "string",
                            "format": "date-time",
                            "minLength": 1
                        }
                    }
                }
            ]
        },
        "DownloadRequest": {
            "type": "object",
            "required": ["downloadType"],
            "properties": {
                "downloadType": {
                    "$ref": "#/definitions/DownloadType"
                },
                "filter": {
                    "$ref": "#/definitions/DownloadFilter"
                }
            }
        },
        "DownloadType": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "Unknown",
                "WireTransferPaymentReportCsv",
                "WireTransferPaymentReportPdf",
                "FxWireTransferPaymentReportCsv",
                "FxWireTransferPaymentReportPdf",
                "AchPaymentReportCsv",
                "AchPaymentReportPdf",
                "PositivePayIssuedItemsReportCsv",
                "PositivePayIssuedItemsReportPdf",
                "CompanyUserActivityReportCsv",
                "CompanyUserActivityReportPdf",
                "InstitutionUserActivityReportCsv",
                "InstitutionUserActivityReportPdf",
                "WireDetailsCsv",
                "WireDetailsPdf",
                "InternalTransferPaymentReportCsv",
                "InternalTransferPaymentReportPdf",
                "LoanPaymentReportCsv",
                "LoanPaymentReportPdf",
                "WireTransferPaymentReportDetailsCsv",
                "WireTransferPaymentReportDetailsPdf",
                "FxWireTransferPaymentReportDetailsCsv",
                "FxWireTransferPaymentReportDetailsPdf",
                "BoFiUserActivityCsv",
                "BoFiUserActivityPdf",
                "BoCheckExceptionCsv",
                "BoCheckExceptionPdf",
                "ChannelUserActivityCsv",
                "ChannelUserActivityPdf",
                "BoAchExceptionCsv",
                "BoAchExceptionPdf",
                "AchFilterExceptionsPdf",
                "AchFilterExceptionsCsv",
                "GetAchNocPdf",
                "GetAchNocCsv",
                "AchNocDownloadSummaryPdf",
                "AchNocDownloadSummaryCsv",
                "AchNocDownloadDetailPdf",
                "AchNocDownloadDetailCsv",
                "AchReturnSummaryPdf",
                "AchReturnDetailsPdf",
                "AchReturnSummaryCsv",
                "AchReturnDetailsCsv",
                "GetAchReturnPdf",
                "GetAchReturnCsv"
            ],
            "enum": [
                0, 1, 2, 11, 12, 21, 22, 31, 32, 41, 42, 51, 52, 61, 62, 71, 72, 73, 74, 81, 82, 91,
                92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
                110, 111, 112, 113, 114
            ]
        },
        "DownloadFilter": {
            "type": "object",
            "required": ["outPutType"],
            "properties": {
                "downloadType": {
                    "type": "string"
                },
                "informationType": {
                    "type": "string"
                },
                "outPutType": {
                    "$ref": "#/definitions/OutputType"
                },
                "downloadDefinitionName": {
                    "type": "string"
                }
            }
        },
        "OutputType": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "Unknown",
                "Pdf",
                "Csv",
                "Tiff",
                "Bai",
                "Quicken",
                "QuickBook",
                "Nacha",
                "PdfInDetail",
                "CsvInDetail",
                "Ofx"
            ],
            "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        },
        "ReportDownloadFilter": {
            "allOf": [
                {
                    "$ref": "#/definitions/DownloadFilter"
                },
                {
                    "type": "object",
                    "properties": {
                        "reportFilter": {
                            "$ref": "#/definitions/ReportFilterBase"
                        }
                    }
                }
            ]
        },
        "ReportFilterBase": {
            "type": "object",
            "required": [
                "reportId",
                "pageNumber",
                "pageSize",
                "runDefaultSearch",
                "setDefaultSearchToSelectAll",
                "checkNumberMaxLength"
            ],
            "properties": {
                "reportType": {
                    "type": "string"
                },
                "reportId": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "runDefaultSearch": {
                    "type": "boolean"
                },
                "orderBys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderByModel"
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportFilter"
                    }
                },
                "downloadType": {
                    "type": "string"
                },
                "setDefaultSearchToSelectAll": {
                    "type": "boolean"
                },
                "checkNumberMaxLength": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "OrderByModel": {
            "type": "object",
            "required": ["descending"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "descending": {
                    "type": "boolean"
                }
            }
        },
        "ReportFilter": {
            "type": "object",
            "required": ["required", "order", "triggerCascadeFilter", "applyCascadeFilter"],
            "properties": {
                "type": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "filterData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FilterLookupModel"
                    }
                },
                "required": {
                    "type": "boolean"
                },
                "order": {
                    "type": "integer",
                    "format": "int32"
                },
                "triggerCascadeFilter": {
                    "type": "boolean"
                },
                "applyCascadeFilter": {
                    "type": "boolean"
                }
            }
        },
        "FilterLookupModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "cascadeFilterIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "order": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "IdDownloadFilter": {
            "allOf": [
                {
                    "$ref": "#/definitions/DownloadFilter"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "GuidDownloadFilter": {
            "allOf": [
                {
                    "$ref": "#/definitions/DownloadFilter"
                },
                {
                    "type": "object",
                    "required": ["guid"],
                    "properties": {
                        "guid": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                }
            ]
        },
        "DownloadOption": {
            "type": "object",
            "required": ["downloadType"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "downloadType": {
                    "$ref": "#/definitions/DownloadType"
                }
            }
        },
        "DownloadPage": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "None",
                "WireTransferPaymentReport",
                "FxWireTransferPaymentReport",
                "AchPaymentReport",
                "PositivePayIssuedItemsReport",
                "CompanyUserActivityReport",
                "InstitutionUserActivityReport",
                "WireTransferPaymentDetails",
                "FxWireTransferPaymentDetails",
                "InternalTransferPaymentReport",
                "LoanPaymentReport",
                "BoFiUserActivity",
                "BoCheckException",
                "ChannelUserActivity",
                "BoAchException",
                "AchFilterExceptions",
                "GetAchNoc",
                "AchNoc",
                "AchReturn",
                "GetAchReturn"
            ],
            "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
        },
        "EntitlementGroupModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["sequence"],
                    "properties": {
                        "category": {
                            "type": "string"
                        },
                        "sequence": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "entitlements": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EntitlementModel"
                            }
                        }
                    }
                }
            ]
        },
        "EntitlementModel": {
            "type": "object",
            "required": ["claimId", "sequence"],
            "properties": {
                "claimId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sequence": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "prerequisiteClaims": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            }
        },
        "HolidayCalendarModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["name", "date", "isPastDue"],
                    "properties": {
                        "name": {
                            "type": "string",
                            "minLength": 1
                        },
                        "date": {
                            "type": "string",
                            "format": "date-time",
                            "minLength": 1
                        },
                        "isPastDue": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "InformationCenterConfigurationModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["startDate", "endDate", "title", "type", "status", "sequence"],
                    "properties": {
                        "startDate": {
                            "type": "string",
                            "format": "date-time",
                            "minLength": 1
                        },
                        "endDate": {
                            "type": "string",
                            "format": "date-time",
                            "minLength": 1
                        },
                        "title": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "minLength": 1
                        },
                        "status": {
                            "type": "string",
                            "minLength": 1
                        },
                        "sequence": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "InstitutionModel": {
            "type": "object",
            "required": ["institutionId"],
            "properties": {
                "institutionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "fiId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "treasuryProductName": {
                    "type": "string"
                },
                "supportDepartmentName": {
                    "type": "string"
                },
                "supportEmail": {
                    "type": "string"
                },
                "supportPhone": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "logoutURL": {
                    "type": "string"
                }
            }
        },
        "QboSettingsModel": {
            "type": "object",
            "properties": {
                "intuitBankId": {
                    "type": "string"
                }
            }
        },
        "LoginIdPasswordParametersModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": [
                        "loginIdMinLength",
                        "loginIdMaxLength",
                        "allowAlphabetsInLoginId",
                        "allowNumbersInLoginId",
                        "allowSpecialCharactersInLoginId",
                        "alphabetsInLoginIdAreRequired",
                        "numbersInLoginIdAreRequired",
                        "specialCharactersInLoginIdAreRequired",
                        "passwordMinLength",
                        "passwordMaxLength",
                        "allowAlphabetsInPassword",
                        "allowNumbersInPassword",
                        "allowSpecialCharactersInPassword",
                        "alphabetsInPasswordAreRequired",
                        "numbersInPasswordAreRequired",
                        "specialCharactersInPasswordAreRequired",
                        "willPasswordExpire",
                        "warnPasswordExpireInDays",
                        "invalidLoginIdPasswordMessage",
                        "allowLockedOutMessage",
                        "lockedOutMessage",
                        "sendLockedEmail",
                        "lockedEmailMessage",
                        "sessionTimeoutMinutes",
                        "isCompanyParameter",
                        "isDefault"
                    ],
                    "properties": {
                        "loginIdMinLength": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "loginIdMaxLength": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "allowAlphabetsInLoginId": {
                            "type": "boolean"
                        },
                        "allowNumbersInLoginId": {
                            "type": "boolean"
                        },
                        "allowSpecialCharactersInLoginId": {
                            "type": "boolean"
                        },
                        "alphabetsInLoginIdAreRequired": {
                            "type": "boolean"
                        },
                        "numbersInLoginIdAreRequired": {
                            "type": "boolean"
                        },
                        "specialCharactersInLoginIdAreRequired": {
                            "type": "boolean"
                        },
                        "numberOfUppercaseRequiredInLoginId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "numberOfLowercaseRequiredInLoginId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "redirectUrl": {
                            "type": "string"
                        },
                        "passwordMinLength": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "passwordMaxLength": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "allowAlphabetsInPassword": {
                            "type": "boolean"
                        },
                        "allowNumbersInPassword": {
                            "type": "boolean"
                        },
                        "allowSpecialCharactersInPassword": {
                            "type": "boolean"
                        },
                        "alphabetsInPasswordAreRequired": {
                            "type": "boolean"
                        },
                        "numbersInPasswordAreRequired": {
                            "type": "boolean"
                        },
                        "specialCharactersInPasswordAreRequired": {
                            "type": "boolean"
                        },
                        "numberOfUppercaseRequiredInPassword": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "numberOfLowercaseRequiredInPassword": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "willPasswordExpire": {
                            "type": "boolean"
                        },
                        "passwordExpireInDays": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "warnPasswordExpireInDays": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "numberOfPrevUsedPasswords": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "numberOfAllowedAttemptsBeforeLock": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "invalidLoginIdPasswordMessage": {
                            "type": "string",
                            "minLength": 1
                        },
                        "allowLockedOutMessage": {
                            "type": "boolean"
                        },
                        "lockedOutMessage": {
                            "type": "string",
                            "minLength": 1
                        },
                        "sendLockedEmail": {
                            "type": "boolean"
                        },
                        "lockedEmailMessage": {
                            "type": "string",
                            "minLength": 1
                        },
                        "sessionTimeoutMinutes": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isCompanyParameter": {
                            "type": "boolean"
                        },
                        "isDefault": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "NavigationMenuModel": {
            "type": "object",
            "properties": {
                "navigationMenus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NavigationModel"
                    }
                },
                "ssoInstitutions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SsoInstitutionModel"
                    }
                },
                "currentFiId": {
                    "type": "string"
                }
            }
        },
        "NavigationModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["key", "name"],
                    "properties": {
                        "key": {
                            "type": "string",
                            "minLength": 1
                        },
                        "name": {
                            "type": "string",
                            "minLength": 1
                        },
                        "path": {
                            "type": "string"
                        },
                        "subMenus": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NavigationModel"
                            }
                        }
                    }
                }
            ]
        },
        "SsoInstitutionModel": {
            "type": "object",
            "required": ["institutionId"],
            "properties": {
                "fiId": {
                    "type": "string"
                },
                "institutionName": {
                    "type": "string"
                },
                "institutionId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UpdateSsoUserInstitutionModel": {
            "type": "object",
            "properties": {
                "fiId": {
                    "type": "string"
                }
            }
        },
        "NotificationConfigurationModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["isActive"],
                    "properties": {
                        "isActive": {
                            "type": "boolean"
                        },
                        "groups": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NotificationConfigurationGroupModel"
                            }
                        }
                    }
                }
            ]
        },
        "NotificationConfigurationGroupModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["name"],
                    "properties": {
                        "name": {
                            "type": "string",
                            "minLength": 1
                        },
                        "features": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NotificationConfigurationFeatureModel"
                            }
                        }
                    }
                }
            ]
        },
        "NotificationConfigurationFeatureModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": [
                        "name",
                        "isRequired",
                        "isActive",
                        "isChanged",
                        "isEmailAllowed",
                        "isTextMessageAllowed",
                        "isDesktopAllowed",
                        "notificationTypeId",
                        "sortOrder",
                        "isActiveByDefault"
                    ],
                    "properties": {
                        "name": {
                            "type": "string",
                            "minLength": 1
                        },
                        "isRequired": {
                            "type": "boolean"
                        },
                        "isActive": {
                            "type": "boolean"
                        },
                        "isChanged": {
                            "type": "boolean"
                        },
                        "isEmailAllowed": {
                            "type": "boolean"
                        },
                        "isTextMessageAllowed": {
                            "type": "boolean"
                        },
                        "isDesktopAllowed": {
                            "type": "boolean"
                        },
                        "notificationTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "sortOrder": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isActiveByDefault": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "ChallengeGroupDetailModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ChallengeGroupModel"
                },
                {
                    "type": "object",
                    "properties": {
                        "actionGroup": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChallengeActionGroupModel"
                            }
                        }
                    }
                }
            ]
        },
        "ChallengeActionGroupModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["name", "description"],
                    "properties": {
                        "name": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": {
                            "type": "string",
                            "minLength": 1
                        },
                        "actions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChallengeActionsModel"
                            }
                        }
                    }
                }
            ]
        },
        "ChallengeActionsModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": [
                        "challengeUser",
                        "isThresholdPresent",
                        "thresholdType",
                        "thresholdAmount",
                        "name",
                        "description"
                    ],
                    "properties": {
                        "challengeUser": {
                            "type": "boolean"
                        },
                        "isThresholdPresent": {
                            "type": "boolean"
                        },
                        "thresholdType": {
                            "type": "string",
                            "minLength": 1
                        },
                        "thresholdAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "name": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": {
                            "type": "string",
                            "minLength": 1
                        },
                        "hoverText": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "ChallengeGroupCompanyModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ChallengeGroupModel"
                },
                {
                    "type": "object",
                    "required": ["companyName", "cifNumber", "status"],
                    "properties": {
                        "companyName": {
                            "type": "string",
                            "minLength": 1
                        },
                        "cifNumber": {
                            "type": "string",
                            "minLength": 1
                        },
                        "status": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                }
            ]
        },
        "FiProductFeatureModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["isCompanyProductConfigurable", "name", "status", "type"],
                    "properties": {
                        "isCompanyProductConfigurable": {
                            "type": "boolean"
                        },
                        "name": {
                            "type": "string",
                            "minLength": 1
                        },
                        "status": {
                            "type": "string",
                            "minLength": 1
                        },
                        "type": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                }
            ]
        },
        "BadRequestResult": {
            "type": "object",
            "description": "Represents an action result that returns an empty BadRequest response.",
            "properties": {
                "request": {
                    "description": "Gets the request message which led to this result.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HttpRequestMessage"
                        }
                    ]
                }
            }
        },
        "FiArpProductFeatureModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/FiProductFeatureModel"
                },
                {
                    "type": "object",
                    "required": [
                        "allowArpExceptions",
                        "showAchExceptions",
                        "manageAchExceptions",
                        "workCheckException",
                        "workAchException",
                        "canAllowSubstituteProduct",
                        "allowSubstituteProduct",
                        "allowIssuedItemActivityReview"
                    ],
                    "properties": {
                        "allowArpExceptions": {
                            "type": "boolean"
                        },
                        "showAchExceptions": {
                            "type": "boolean"
                        },
                        "manageAchExceptions": {
                            "type": "boolean"
                        },
                        "workCheckException": {
                            "type": "boolean"
                        },
                        "workAchException": {
                            "type": "boolean"
                        },
                        "canAllowSubstituteProduct": {
                            "type": "boolean"
                        },
                        "allowSubstituteProduct": {
                            "type": "boolean"
                        },
                        "allowIssuedItemActivityReview": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "UpdateRemoteDepositProductModel": {
            "type": "object",
            "properties": {
                "remoteDepositCaptureSsoConfigurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UpdateRemoteDepositCaptureSsoModel"
                    }
                }
            }
        },
        "UpdateRemoteDepositCaptureSsoModel": {
            "type": "object",
            "required": ["institutionSsoProductId", "isActive"],
            "properties": {
                "institutionSsoProductId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isActive": {
                    "type": "boolean"
                }
            }
        },
        "UploadStateTaxCodeFileResponseModel": {
            "type": "object",
            "required": ["success"],
            "properties": {
                "fileErrors": {
                    "$ref": "#/definitions/ErrorSummaryModel"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "ErrorSummaryModel": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "summaryMessage": {
                    "type": "string"
                }
            }
        },
        "StateTaxCodeFileMetadataModel": {
            "type": "object",
            "properties": {
                "stateTaxCodesFileName": {
                    "type": "string"
                }
            }
        },
        "FiCorpayProductModel": {
            "type": "object",
            "required": ["sharedSecretKey"],
            "properties": {
                "sharedSecretKey": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "FiCorpayProductResponseModel": {
            "type": "object",
            "required": ["success"],
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "FiAgileticsSsoProductModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/FiProductFeatureModel"
                },
                {
                    "type": "object",
                    "required": ["institutionSsoProductOptionUniqueId", "productDisplayName"],
                    "properties": {
                        "institutionSsoProductOptionUniqueId": {
                            "type": "string",
                            "format": "guid",
                            "minLength": 1
                        },
                        "productDisplayName": {
                            "type": "string",
                            "minLength": 1
                        }
                    }
                }
            ]
        },
        "FiAgileticsSsoProductResponseModel": {
            "type": "object",
            "required": ["success"],
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "FiQfxProductModel": {
            "type": "object",
            "properties": {
                "fiId": {
                    "type": "string"
                },
                "enabledFlag": {
                    "type": "string"
                }
            }
        },
        "ResourceConfigurationModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["title", "link", "status", "displayExternalWarning", "sequence"],
                    "properties": {
                        "title": {
                            "type": "string",
                            "minLength": 1
                        },
                        "link": {
                            "type": "string",
                            "minLength": 1
                        },
                        "tooltip": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string",
                            "minLength": 1
                        },
                        "displayExternalWarning": {
                            "type": "boolean"
                        },
                        "externalWarningMessage": {
                            "type": "string"
                        },
                        "logo": {
                            "type": "string"
                        },
                        "sequence": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "InstitutionMessagingCenterModel": {
            "type": "object",
            "required": ["useSharedEmail", "archive"],
            "properties": {
                "useSharedEmail": {
                    "type": "boolean"
                },
                "sharedEmail": {
                    "type": "string"
                },
                "disclaimer": {
                    "type": "string"
                },
                "archive": {
                    "$ref": "#/definitions/ArchiveSetting"
                }
            }
        },
        "ArchiveSetting": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "Undefined",
                "DoNotArchive",
                "ThreeMonths",
                "SixMonths",
                "NineMonths",
                "TwelveMonths"
            ],
            "enum": [0, 1, 2, 3, 4, 5]
        },
        "MessageCategoryModel": {
            "type": "object",
            "required": ["fiMessageCategoryId"],
            "properties": {
                "fiMessageCategoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "messageCategory": {
                    "type": "string"
                },
                "categoryDescription": {
                    "type": "string"
                }
            }
        },
        "MessageModel": {
            "type": "object",
            "required": [
                "id",
                "categoryId",
                "sentDateTime",
                "sentMessage",
                "hasAttachment",
                "isArchived",
                "isReply",
                "isSent"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "messageId": {
                    "type": "string"
                },
                "companyName": {
                    "type": "string"
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "fromUserName": {
                    "type": "string"
                },
                "toUserName": {
                    "type": "string"
                },
                "fromUserId": {
                    "type": "integer",
                    "format": "int32"
                },
                "toUserId": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "subject": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "assignedTo": {
                    "type": "string"
                },
                "sentDate": {
                    "type": "string"
                },
                "sentTime": {
                    "type": "string"
                },
                "sentDateTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "sentMessage": {
                    "type": "boolean"
                },
                "hasAttachment": {
                    "type": "boolean"
                },
                "attachmentNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MessageAttachmentModel"
                    }
                },
                "parentMessage": {
                    "$ref": "#/definitions/MessageModel"
                },
                "isArchived": {
                    "type": "boolean"
                },
                "parentMessageId": {
                    "type": "integer",
                    "format": "int32"
                },
                "assignedToUserId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isReply": {
                    "type": "boolean"
                },
                "isSent": {
                    "type": "boolean"
                },
                "messageIdSortValue": {
                    "type": "string"
                }
            }
        },
        "MessageAttachmentModel": {
            "type": "object",
            "required": ["id", "typeId"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "data": {
                    "type": "string",
                    "format": "byte"
                },
                "fileIdentifier": {
                    "type": "string",
                    "format": "guid"
                },
                "typeId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "MessageCenterSearchTerms": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "fromUserId": {
                    "type": "integer",
                    "format": "int32"
                },
                "assignedToUserId": {
                    "type": "integer",
                    "format": "int32"
                },
                "messageId": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string"
                },
                "dateTo": {
                    "type": "string"
                },
                "messageTypeId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UpdateMessageModel": {
            "type": "object",
            "required": [
                "messageId",
                "actionTypeId",
                "statusTypeId",
                "assignedUserId",
                "updateConversation"
            ],
            "properties": {
                "messageId": {
                    "type": "integer",
                    "format": "int32"
                },
                "actionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "statusTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "assignedUserId": {
                    "type": "integer",
                    "format": "int32"
                },
                "updateConversation": {
                    "type": "boolean"
                }
            }
        },
        "ModelStateDictionary": {
            "type": "object",
            "description": "Represents the state of an attempt to bind a posted form to an action method, which includes validation information.",
            "required": ["Count", "IsReadOnly", "IsValid"],
            "properties": {
                "Count": {
                    "type": "integer",
                    "description": "Gets the number of key/value pairs in the collection.",
                    "format": "int32"
                },
                "IsReadOnly": {
                    "type": "boolean",
                    "description": "Gets a value that indicates whether the collection is read-only."
                },
                "IsValid": {
                    "type": "boolean",
                    "description": "Gets a value that indicates whether this instance of the model-state dictionary is valid."
                },
                "Keys": {
                    "type": "array",
                    "description": "Gets a collection that contains the keys in the dictionary.",
                    "items": {
                        "type": "string"
                    }
                },
                "Values": {
                    "type": "array",
                    "description": "Gets a collection that contains the values in the dictionary.",
                    "items": {
                        "$ref": "#/definitions/ModelState"
                    }
                },
                "Item": {
                    "$ref": "#/definitions/ModelState"
                }
            }
        },
        "ModelState": {
            "type": "object",
            "description": "Encapsulates the state of model binding to a property of an action-method argument, or to the argument itself.",
            "properties": {
                "value": {
                    "description": "Gets a ValueProviderResult object that encapsulates the value that was being bound during model binding.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ValueProviderResult"
                        }
                    ]
                },
                "errors": {
                    "description": "Gets a ModelErrorCollection object that contains any errors that occurred during model binding.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ModelErrorCollection"
                        }
                    ]
                }
            }
        },
        "ValueProviderResult": {
            "type": "object",
            "description": "Represents the result of binding a value (such as from a form post or query string) to an action-method argument property, or to the argument itself.",
            "properties": {
                "attemptedValue": {
                    "type": "string",
                    "description": "Gets or sets the raw value that is converted to a string for display."
                },
                "culture": {
                    "type": "string",
                    "description": "Gets or sets the culture."
                },
                "rawValue": {
                    "description": "Gets or set the raw value that is supplied by the value provider."
                }
            }
        },
        "ModelErrorCollection": {
            "type": "array",
            "description": "Represents a collection of ModelError instances.",
            "items": {
                "$ref": "#/definitions/ModelError"
            }
        },
        "ModelError": {
            "type": "object",
            "description": "Represents an error that occurs during model binding.",
            "properties": {
                "exception": {
                    "description": "Gets or sets the exception object.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Exception"
                        }
                    ]
                },
                "errorMessage": {
                    "type": "string",
                    "description": "Gets or sets the error message."
                }
            }
        },
        "Exception": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string"
                },
                "InnerException": {
                    "$ref": "#/definitions/Exception"
                },
                "StackTrace": {
                    "type": "string"
                },
                "Source": {
                    "type": "string"
                }
            }
        },
        "AnalysisTransactionCode": {
            "type": "object",
            "required": [
                "analysisTransactionCodeId",
                "institutionId",
                "analysisTransactionTypeId",
                "active"
            ],
            "properties": {
                "analysisTransactionCodeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "institutionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "analysisTransactionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "transactionCode": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                }
            }
        },
        "AnalysisTransactionType": {
            "type": "object",
            "required": ["analysisTransactionTypeId", "sortOrder"],
            "properties": {
                "analysisTransactionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "transactionName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "sortOrder": {
                    "type": "integer",
                    "format": "int32"
                },
                "analysisTransactionTypeCategory": {
                    "$ref": "#/definitions/AnalysisTransactionTypeCategory"
                }
            }
        },
        "AnalysisTransactionTypeCategory": {
            "type": "object",
            "required": ["analysisTransactionTypeCategoryId", "sortOrder"],
            "properties": {
                "analysisTransactionTypeCategoryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "categoryName": {
                    "type": "string"
                },
                "sortOrder": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CustomTransactionCode": {
            "type": "object",
            "required": [
                "id",
                "analysisTransactionTypeId",
                "active",
                "analysisTransactionTypeCategoryId"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "transactionCode": {
                    "type": "string"
                },
                "analysisTransactionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "active": {
                    "type": "boolean"
                },
                "accountCustomTransactionCodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountCustomTransactionCode"
                    }
                },
                "analysisTransactionTypeCategoryId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AccountCustomTransactionCode": {
            "type": "object",
            "required": ["id", "accountId", "customTransactionCodeId", "active"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "customTransactionCodeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "active": {
                    "type": "boolean"
                },
                "accountNumber": {
                    "type": "string"
                }
            }
        },
        "OfxTransactionTypeModel": {
            "type": "object",
            "required": ["ofxTransactionTypeId"],
            "properties": {
                "ofxTransactionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "SamlLoginResponse": {
            "type": "object",
            "required": ["success"],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "fiId": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "responseDetails": {
                    "$ref": "#/definitions/ResponseDetailModelCollection"
                }
            }
        },
        "ResponseDetailModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ResponseDetailModel"
            }
        },
        "ResponseDetailModel": {
            "type": "object",
            "required": ["responseCode"],
            "properties": {
                "responseCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "responseMessage": {
                    "type": "string"
                }
            }
        },
        "SamlLoginRequest": {
            "type": "object",
            "properties": {
                "samlToken": {
                    "type": "string"
                }
            }
        },
        "GetUsersModel": {
            "type": "object",
            "required": ["isTokenMfaEnabled", "backOfficeSsoEnabled"],
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BackOfficeUserListModel"
                    }
                },
                "isTokenMfaEnabled": {
                    "type": "boolean"
                },
                "backOfficeSsoEnabled": {
                    "type": "boolean"
                }
            }
        },
        "BackOfficeUserListModel": {
            "type": "object",
            "required": [
                "isActiveUser",
                "isUserAdmin",
                "isSuperUser",
                "isAccountAdmin",
                "isReportsAdmin",
                "isLocked",
                "isMfaBlocked",
                "isTokenMfaLocked",
                "isEnrolled",
                "id",
                "backOfficeSsoEnabled"
            ],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "fax": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "isActiveUser": {
                    "type": "boolean"
                },
                "isUserAdmin": {
                    "type": "boolean"
                },
                "isSuperUser": {
                    "type": "boolean"
                },
                "isAccountAdmin": {
                    "type": "boolean"
                },
                "isReportsAdmin": {
                    "type": "boolean"
                },
                "isLocked": {
                    "type": "boolean"
                },
                "isMfaBlocked": {
                    "type": "boolean"
                },
                "isTokenMfaLocked": {
                    "type": "boolean"
                },
                "isEnrolled": {
                    "type": "boolean"
                },
                "phoneExtension": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RoleModel"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "backOfficeSsoEnabled": {
                    "type": "boolean"
                }
            }
        },
        "UserLoginTokenDetailModel": {
            "type": "object",
            "required": ["userLoginTokenStatus", "credentialStatus"],
            "properties": {
                "userLoginTokenStatus": {
                    "type": "integer",
                    "format": "int32"
                },
                "credentialStatus": {
                    "type": "integer",
                    "format": "int32"
                },
                "tokenVendorUserId": {
                    "type": "string"
                }
            }
        },
        "SearchChannelUsersModel": {
            "type": "object",
            "properties": {
                "companyUniqueIds": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "guid"
                    }
                }
            }
        },
        "SearchUsersDataPage": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataPageOfSearchUser"
                },
                {
                    "type": "object",
                    "required": ["fiUserCount"],
                    "properties": {
                        "fiUserCount": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "DataPageOfSearchUser": {
            "type": "object",
            "required": [
                "pageSize",
                "maxPageSize",
                "pageNumber",
                "totalCount",
                "recordCountInCurrentPage"
            ],
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxPageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "recordCountInCurrentPage": {
                    "type": "integer",
                    "format": "int32"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SearchUser"
                    }
                }
            }
        },
        "SearchUser": {
            "type": "object",
            "required": ["userUniqueId", "tmUserId", "status", "companyName", "name"],
            "properties": {
                "userUniqueId": {
                    "type": "string",
                    "format": "guid",
                    "minLength": 1
                },
                "tmUserId": {
                    "type": "string",
                    "minLength": 1
                },
                "status": {
                    "type": "string",
                    "minLength": 1
                },
                "companyName": {
                    "type": "string",
                    "minLength": 1
                },
                "name": {
                    "type": "string",
                    "minLength": 1
                },
                "lastSuccessfulLogin": {
                    "type": "string",
                    "format": "date-time"
                },
                "digitalId": {
                    "type": "string"
                }
            }
        },
        "SearchUsersFilter": {
            "type": "object",
            "properties": {
                "searchText": {
                    "type": "string"
                },
                "pagingParameters": {
                    "$ref": "#/definitions/PagingModel"
                }
            }
        },
        "PagingModel": {
            "type": "object",
            "required": ["pageSize", "pageNumber"],
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "orderBys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderByModel"
                    }
                }
            }
        },
        "CurrentUserTimeAccess": {
            "type": "object",
            "required": ["timeRestricted"],
            "properties": {
                "timeRestricted": {
                    "type": "boolean"
                },
                "userTimeAccessDays": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserTimeAccess2"
                    }
                }
            }
        },
        "UserTimeAccess2": {
            "type": "object",
            "required": ["userId", "userTimeAccessTypeId", "dayOfWeekId", "startTime", "endTime"],
            "properties": {
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "userTimeAccessTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "dayOfWeekId": {
                    "type": "integer",
                    "format": "int32"
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "endTime": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "SaveUserActivityRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest"
                },
                {
                    "type": "object",
                    "required": ["activityDate", "userActivityType"],
                    "properties": {
                        "activityDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "activityMessage": {
                            "type": "string"
                        },
                        "relatedId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "userActivityType": {
                            "$ref": "#/definitions/UserActivityType"
                        }
                    }
                }
            ]
        },
        "UserActivityType": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "Account",
                "Ach",
                "Admin",
                "Dashboard",
                "Login",
                "MessageCenter",
                "Navigating",
                "PositivePay",
                "ProfileAndNotification",
                "Reporting",
                "StopPayment",
                "Transaction",
                "Transfer",
                "Wire",
                "AccountReconciliationReporting",
                "Authentication"
            ],
            "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
        },
        "ChannelUserModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ChannelUserModel"
            }
        },
        "ChannelUserModel": {
            "type": "object",
            "required": ["userId", "companyId", "userUniqueId"],
            "properties": {
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "userUniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "userName": {
                    "type": "string"
                },
                "userAlias": {
                    "type": "string"
                },
                "digitalId": {
                    "type": "string"
                },
                "companyName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "ChannelUserSearchFilter": {
            "type": "object",
            "properties": {
                "searchText": {
                    "type": "string"
                },
                "searchType": {
                    "type": "string"
                }
            }
        },
        "ProcessingTimesConfigurationModel": {
            "type": "object",
            "properties": {
                "productFeatureProcessingTimes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductFeatureProcessingTimesModel"
                    }
                },
                "timeZone": {
                    "$ref": "#/definitions/TimeZoneModel"
                }
            }
        },
        "ProductFeatureProcessingTimesModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": [
                        "name",
                        "nextBusinessDay",
                        "showNextBusinessDay",
                        "startTimeNotApplicable",
                        "showInChannel"
                    ],
                    "properties": {
                        "name": {
                            "type": "string",
                            "minLength": 1
                        },
                        "startTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "cutOffTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "nextBusinessDay": {
                            "type": "boolean"
                        },
                        "showNextBusinessDay": {
                            "type": "boolean"
                        },
                        "startTimeNotApplicable": {
                            "type": "boolean"
                        },
                        "showInChannel": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "TimeZoneModel": {
            "type": "object",
            "required": ["timeZoneId", "showCutOffTimeZone"],
            "properties": {
                "timeZoneId": {
                    "type": "integer",
                    "format": "int32"
                },
                "showCutOffTimeZone": {
                    "type": "boolean"
                }
            }
        },
        "CompanySearchModel": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "cifNumber": {
                    "type": "string"
                },
                "taxNumber": {
                    "type": "string"
                },
                "companyId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "LookupListModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "lookups": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LookupModel"
                            }
                        }
                    }
                }
            ]
        },
        "CompanyLimitModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "monthlyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "dailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        }
                    }
                }
            ]
        },
        "SsoProductResponseModel": {
            "type": "object",
            "required": ["success"],
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "SsoProductModel": {
            "type": "object",
            "required": ["ssoProductOptionUniqueId"],
            "properties": {
                "ssoProductOptionUniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "optionName": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "AccountProductsMappingDetailModel": {
            "type": "object",
            "properties": {
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductFeatureModel"
                    }
                },
                "accountProducts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountProductsMappingModel"
                    }
                }
            }
        },
        "AccountProductsMappingModel": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/CompanyAccountModel"
                },
                "productFeatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountProductMappingModel"
                    }
                }
            }
        },
        "AccountProductMappingModel": {
            "type": "object",
            "properties": {
                "isSelected": {
                    "type": "boolean"
                },
                "productFeature": {
                    "$ref": "#/definitions/ProductFeatureModel"
                }
            }
        },
        "ContactInfoModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["comments"],
                    "properties": {
                        "comments": {
                            "type": "string",
                            "minLength": 1
                        },
                        "user": {
                            "$ref": "#/definitions/UserModel"
                        }
                    }
                }
            ]
        },
        "CompanyAccountDetailModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "companyAccountsUsers": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyAccountsModel"
                            }
                        }
                    }
                }
            ]
        },
        "CompanyAccountsModel": {
            "type": "object",
            "properties": {
                "companyAccountUserId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountName": {
                    "type": "string"
                },
                "cifNumber": {
                    "type": "string"
                },
                "accountType": {
                    "type": "string"
                },
                "accountNumber": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserSummaryModel"
                    }
                }
            }
        },
        "AssociatedCompanyModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["holdingCompanyId"],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "taxNumber": {
                            "type": "string"
                        },
                        "cifNumber": {
                            "type": "string"
                        },
                        "address": {
                            "type": "string"
                        },
                        "holdingCompanyId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "CompanyAccountSettingsModel": {
            "type": "object",
            "required": [
                "useAccountNicknames",
                "accountMaskTypeId",
                "allowUserToOverrideAccountMasking"
            ],
            "properties": {
                "useAccountNicknames": {
                    "type": "boolean"
                },
                "accountMaskTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "allowUserToOverrideAccountMasking": {
                    "type": "boolean"
                }
            }
        },
        "SuspendUserChallengeModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "properties": {
                        "utcSuspendEndTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "localSuspendEndTime": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "RemoteDepositProductModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProductFeatureModel"
                },
                {
                    "type": "object",
                    "required": ["remoteDepositProductTypeId"],
                    "properties": {
                        "remoteDepositProductTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "ssoCustomerId": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "IntuitOfxModel": {
            "type": "object",
            "properties": {
                "intuitOfxId": {
                    "type": "string"
                }
            }
        },
        "QfxProductModel": {
            "type": "object",
            "required": ["enabledFlag"],
            "properties": {
                "enabledFlag": {
                    "type": "boolean"
                }
            }
        },
        "UnrelatedAccountSearchResultsModel": {
            "type": "object",
            "required": ["isCifAlreadyAssociated"],
            "properties": {
                "isCifAlreadyAssociated": {
                    "type": "boolean"
                },
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountModel"
                    }
                }
            }
        },
        "UnrelatedAccountSearchModel": {
            "type": "object",
            "properties": {
                "cif": {
                    "type": "string"
                },
                "accountType": {
                    "type": "string"
                },
                "accountNumber": {
                    "type": "string"
                }
            }
        },
        "ToAccountPermissionModel": {
            "type": "object",
            "required": ["toAccount", "isAllowed"],
            "properties": {
                "toAccount": {
                    "$ref": "#/definitions/CompanyAccountModel"
                },
                "isAllowed": {
                    "type": "boolean"
                }
            }
        },
        "WireCompanyModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": [
                        "id",
                        "perTransactionLimit",
                        "dailyLimit",
                        "isInternationalDisabled",
                        "canSelect",
                        "isDli"
                    ],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "cifNumber": {
                            "type": "string"
                        },
                        "perTransactionLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "dailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "isInternationalDisabled": {
                            "type": "boolean"
                        },
                        "canSelect": {
                            "type": "boolean"
                        },
                        "isDli": {
                            "type": "boolean"
                        },
                        "accounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireCompanyAccountModel"
                            }
                        }
                    }
                }
            ]
        },
        "WireCompanyAccountModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["id", "cifNumber", "number", "isAccountActive"],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "cifNumber": {
                            "type": "string",
                            "minLength": 1
                        },
                        "number": {
                            "type": "string",
                            "minLength": 1
                        },
                        "name": {
                            "type": "string"
                        },
                        "isSelected": {
                            "type": "boolean"
                        },
                        "isCompanyAccount": {
                            "type": "boolean"
                        },
                        "isDeleted": {
                            "type": "boolean"
                        },
                        "transactionLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "dailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "type": {
                            "type": "string"
                        },
                        "isAccountActive": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "WireFileFilterModel": {
            "type": "object",
            "properties": {
                "companyIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "uploadedByIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "uploadDateType": {
                    "type": "string"
                },
                "uploadDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "uploadDateStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "uploadDateEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "fileName": {
                    "type": "string"
                },
                "wireAmountType": {
                    "type": "string"
                },
                "wireAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "wireAmountMin": {
                    "type": "number",
                    "format": "decimal"
                },
                "wireAmountMax": {
                    "type": "number",
                    "format": "decimal"
                },
                "paging": {
                    "$ref": "#/definitions/PagingModel"
                }
            }
        },
        "ReportFilterModelOfWireFileFilterModel": {
            "type": "object",
            "required": ["reportId"],
            "properties": {
                "reportId": {
                    "type": "integer",
                    "format": "int32"
                },
                "reportType": {
                    "type": "string"
                },
                "reportName": {
                    "type": "string"
                },
                "reportFilter": {
                    "$ref": "#/definitions/WireFileFilterModel"
                }
            }
        },
        "NonCoreInternationalWireCompanyModel": {
            "type": "object",
            "required": ["id", "dailyLimit", "perTransactionLimit"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "dailyLimit": {
                    "type": "number",
                    "format": "decimal"
                },
                "perTransactionLimit": {
                    "type": "number",
                    "format": "decimal"
                },
                "availableBalanceValidationCoreTable": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountBalanceValidationType": {
                    "type": "integer",
                    "format": "int32"
                },
                "nonCoreAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NonCoreInternationalWireCompanyAccountModel"
                    }
                },
                "eligibleAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompanyAccountModel"
                    }
                }
            }
        },
        "NonCoreInternationalWireCompanyAccountModel": {
            "type": "object",
            "required": [
                "nonCoreAccountId",
                "accountId",
                "perTransactionLimit",
                "dailyLimit",
                "active"
            ],
            "properties": {
                "nonCoreAccountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "perTransactionLimit": {
                    "type": "number",
                    "format": "decimal"
                },
                "dailyLimit": {
                    "type": "number",
                    "format": "decimal"
                },
                "active": {
                    "type": "boolean"
                }
            }
        },
        "WireModel": {
            "type": "object",
            "required": [
                "amount",
                "createdDate",
                "id",
                "isDli",
                "isEdited",
                "isInternational",
                "isUserApprovalLimitLess",
                "numberOfApprovalsNeeded",
                "statusId",
                "externallyProcessed"
            ],
            "properties": {
                "additionalInformation": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "amount": {
                    "type": "number",
                    "format": "decimal"
                },
                "audit": {
                    "type": "string"
                },
                "availableApprovers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "beneficiary": {
                    "$ref": "#/definitions/BeneficiaryModel"
                },
                "completedApprovalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "confirmationNumber": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "debitAccount": {
                    "type": "string"
                },
                "destinationCurrency": {
                    "type": "string"
                },
                "errorSummary": {
                    "$ref": "#/definitions/ErrorSummaryModel"
                },
                "frequency": {
                    "$ref": "#/definitions/FrequencyModel"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "isDli": {
                    "type": "boolean"
                },
                "isEdited": {
                    "type": "boolean"
                },
                "isInternational": {
                    "type": "boolean"
                },
                "isUserApprovalLimitLess": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "messageType": {
                    "type": "string"
                },
                "numberOfApprovalsNeeded": {
                    "type": "integer",
                    "format": "int32"
                },
                "parentFrequency": {
                    "$ref": "#/definitions/FrequencyModel"
                },
                "purpose": {
                    "type": "string"
                },
                "rateQuote": {
                    "$ref": "#/definitions/RateQuoteModel"
                },
                "referenceBeneficiary": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "successMessage": {
                    "type": "string"
                },
                "transactionId": {
                    "type": "string"
                },
                "wireCompany": {
                    "$ref": "#/definitions/WireCompanyModel"
                },
                "externallyProcessed": {
                    "type": "boolean"
                }
            }
        },
        "BeneficiaryModel": {
            "type": "object",
            "required": [
                "id",
                "isFreeForm",
                "isInternational",
                "isTemplateBeneficiary",
                "numberOfApprovalsNeeded",
                "updatedDate"
            ],
            "properties": {
                "accountNumber": {
                    "type": "string"
                },
                "addressLine1": {
                    "type": "string"
                },
                "addressLine2": {
                    "type": "string"
                },
                "addressLine3": {
                    "type": "string"
                },
                "bank": {
                    "$ref": "#/definitions/BankModel"
                },
                "city": {
                    "type": "string"
                },
                "completedApprovalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "country": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "currencyType": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "intermediaryBanks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IntermediaryBankModel"
                    }
                },
                "isEdited": {
                    "type": "boolean"
                },
                "isForeignCurrency": {
                    "type": "boolean"
                },
                "isFreeForm": {
                    "type": "boolean"
                },
                "isInternational": {
                    "type": "boolean"
                },
                "isTemplateBeneficiary": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "numberOfApprovalsNeeded": {
                    "type": "integer",
                    "format": "int32"
                },
                "postalCode": {
                    "type": "string"
                },
                "postalCodeExtension": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "BankModel": {
            "type": "object",
            "required": ["addressId", "isInternational", "onUs", "updatedDate"],
            "properties": {
                "addressId": {
                    "type": "integer",
                    "format": "int32"
                },
                "addressLine1": {
                    "type": "string"
                },
                "addressLine2": {
                    "type": "string"
                },
                "addressLine3": {
                    "type": "string"
                },
                "bankId": {
                    "type": "string"
                },
                "bankIdType": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "isInternational": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "onUs": {
                    "type": "boolean"
                },
                "postalCode": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "IntermediaryBankModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/BankModel"
                },
                {
                    "type": "object",
                    "properties": {
                        "accountNumber": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "FrequencyModel": {
            "type": "object",
            "properties": {
                "endOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "noEndDate": {
                    "type": "boolean"
                },
                "repeatOn": {
                    "type": "string"
                },
                "repeatOnDay1": {
                    "type": "integer",
                    "format": "int32"
                },
                "repeatOnDay2": {
                    "type": "integer",
                    "format": "int32"
                },
                "repeatOnLastBusinessDay": {
                    "type": "boolean"
                },
                "startOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "type": {
                    "type": "string"
                },
                "valueDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "RateQuoteModel": {
            "type": "object",
            "required": [
                "conversionRate",
                "destinationAmount",
                "exchangeFee",
                "expirationTime",
                "id",
                "originAmount",
                "totalCost",
                "wireFee"
            ],
            "properties": {
                "amexContractNumber": {
                    "type": "string"
                },
                "amexQuoteId": {
                    "type": "integer",
                    "format": "int32"
                },
                "conversionRate": {
                    "type": "number",
                    "format": "decimal"
                },
                "destinationAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "destinationCurrencyCode": {
                    "type": "string"
                },
                "exchangeFee": {
                    "type": "number",
                    "format": "decimal"
                },
                "expirationTime": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "originAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "totalCost": {
                    "type": "number",
                    "format": "decimal"
                },
                "valueDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "wireFee": {
                    "type": "number",
                    "format": "decimal"
                },
                "rateId": {
                    "type": "string"
                }
            }
        },
        "WireExchangeFee": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["amount", "percent"],
                    "properties": {
                        "amount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "percent": {
                            "type": "number",
                            "format": "double"
                        }
                    }
                }
            ]
        },
        "ExchangeRatesheet": {
            "type": "object",
            "required": ["id", "effectiveDate"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "effectiveDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "exchangeRates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExchangeRate"
                    }
                }
            }
        },
        "ExchangeRate": {
            "type": "object",
            "required": ["rate"],
            "properties": {
                "countryName": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "exchangeCurrency": {
                    "type": "string"
                },
                "rate": {
                    "type": "number",
                    "format": "decimal"
                },
                "baseCurrency": {
                    "type": "string"
                }
            }
        },
        "ExchangeRateMetadata": {
            "type": "object",
            "required": ["businessDaysFromNow", "effectiveDate"],
            "properties": {
                "businessDaysFromNow": {
                    "type": "integer",
                    "format": "int32"
                },
                "effectiveDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "exchangeRateSheetMetadata": {
                    "$ref": "#/definitions/ExchangeRateSheetMetadata"
                }
            }
        },
        "ExchangeRateSheetMetadata": {
            "type": "object",
            "required": ["uploadDate"],
            "properties": {
                "fileName": {
                    "type": "string"
                },
                "uploadDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "uploadedBy": {
                    "type": "string"
                }
            }
        },
        "BaseResponse2": {
            "type": "object",
            "required": ["success"],
            "properties": {
                "baseRequest": {
                    "$ref": "#/definitions/BaseRequest2"
                },
                "responseDetailCollection": {
                    "$ref": "#/definitions/ResponseDetailCollection2"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "BaseRequest2": {
            "type": "object",
            "required": ["applicationNameType"],
            "properties": {
                "activityTracking": {
                    "$ref": "#/definitions/ActivityTracking2"
                },
                "alias": {
                    "type": "string"
                },
                "applicationNameType": {
                    "$ref": "#/definitions/ApplicationNameType2"
                },
                "authenticationUser": {
                    "$ref": "#/definitions/AuthenticationUser2"
                },
                "clientIpAddress": {
                    "type": "string"
                },
                "endUser": {
                    "$ref": "#/definitions/EndUser2"
                },
                "institutionId": {
                    "type": "string"
                },
                "productInformation": {
                    "$ref": "#/definitions/ProductInformation2"
                },
                "requestType": {
                    "type": "string"
                },
                "secondaryId": {
                    "type": "string"
                }
            }
        },
        "ActivityTracking2": {
            "type": "object",
            "properties": {
                "activityId": {
                    "type": "string"
                },
                "parentActivityId": {
                    "type": "string"
                }
            }
        },
        "ApplicationNameType2": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "Undefined",
                "BackOffice",
                "Banno",
                "ECS",
                "EPS",
                "Esi",
                "GoDough",
                "GoDoughClassic",
                "GoDough3_X",
                "IPay",
                "NetTeller",
                "PointMobility",
                "Treasury",
                "BSLKeys",
                "BSL",
                "ESIFIM",
                "EStatements",
                "Geezeo",
                "BannoPeople",
                "CoreDirector",
                "Newgen"
            ],
            "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
        },
        "AuthenticationUser2": {
            "allOf": [
                {
                    "$ref": "#/definitions/EndUser2"
                },
                {
                    "type": "object"
                }
            ]
        },
        "EndUser2": {
            "type": "object",
            "required": ["userType"],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "externalId": {
                    "type": "string"
                },
                "externalSecondaryId": {
                    "type": "string"
                },
                "internalId": {
                    "type": "string"
                },
                "internalSecondaryId": {
                    "type": "string"
                },
                "userType": {
                    "$ref": "#/definitions/UserType2"
                }
            }
        },
        "UserType2": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "Undefined",
                "Banno",
                "CashManagement",
                "Esi",
                "NetTeller",
                "Sso",
                "Treasury",
                "ESIFIM",
                "BackOffice",
                "Geezeo",
                "GeezeoMobile",
                "BannoCashManagement",
                "GeezeoCashManagement",
                "GeezeoMobileCashManagement",
                "Newgen"
            ],
            "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
        },
        "ProductInformation2": {
            "type": "object",
            "properties": {
                "featureName": {
                    "type": "string"
                },
                "productName": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "ApproveTransferTemplateRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "required": ["transferTemplateId"],
                    "properties": {
                        "transferTemplateId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "CreateTransferTemplateRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "required": ["validateTemplate"],
                    "properties": {
                        "internalTransferTemplate": {
                            "$ref": "#/definitions/InternalTransferTemplate"
                        },
                        "validateTemplate": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "InternalTransferTemplate": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "approvalCount",
                        "companyId",
                        "completedApprovals",
                        "createdBy",
                        "createdDate",
                        "id",
                        "internalTransferTemplateStatusTypeId",
                        "internalTransferTypeId",
                        "totalAmount",
                        "updatedBy",
                        "updatedDate"
                    ],
                    "properties": {
                        "approvalCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "company": {
                            "$ref": "#/definitions/Company"
                        },
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "completedApprovals": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdByUser": {
                            "$ref": "#/definitions/User"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "eligibleApprovers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "fromAccountNumber": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "internalTransferTemplateAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTemplateAudit"
                            }
                        },
                        "internalTransferTemplateDetails": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTemplateDetail"
                            }
                        },
                        "internalTransferTemplateStatusType": {
                            "$ref": "#/definitions/InternalTransferTemplateStatusType"
                        },
                        "internalTransferTemplateStatusTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "internalTransferType": {
                            "$ref": "#/definitions/InternalTransferType"
                        },
                        "internalTransferTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "oneToOneMemo": {
                            "type": "string"
                        },
                        "templateAccountDetails": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        },
                        "templateName": {
                            "type": "string"
                        },
                        "toAccountNumber": {
                            "type": "string"
                        },
                        "totalAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedByUser": {
                            "$ref": "#/definitions/User"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userPermissions": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "Company": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "canSelect",
                        "companyTypeId",
                        "createdDate",
                        "id",
                        "institutionId",
                        "rowStatusId",
                        "updatedDate"
                    ],
                    "properties": {
                        "accounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        },
                        "achCompany": {
                            "$ref": "#/definitions/AchCompany"
                        },
                        "address": {
                            "$ref": "#/definitions/Address"
                        },
                        "beneficiaries": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Beneficiary"
                            }
                        },
                        "canSelect": {
                            "type": "boolean"
                        },
                        "childCompanies": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Company"
                            }
                        },
                        "cifNumber": {
                            "type": "string"
                        },
                        "comments": {
                            "type": "string"
                        },
                        "companyAccountDisplaySetting": {
                            "$ref": "#/definitions/CompanyAccountDisplaySetting"
                        },
                        "companyChallengeGroup": {
                            "$ref": "#/definitions/CompanyChallengeGroup"
                        },
                        "companyLimits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyLimit"
                            }
                        },
                        "companyType": {
                            "$ref": "#/definitions/CompanyType"
                        },
                        "companyTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "companyUniqueId": {
                            "type": "string"
                        },
                        "companyUserApprovalSetting": {
                            "$ref": "#/definitions/CompanyUserApprovalSetting"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "customerSince": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "fileImportLayouts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FileImportLayout"
                            }
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "internalTransferTransactions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTransaction"
                            }
                        },
                        "name": {
                            "type": "string"
                        },
                        "ofxAuthenticationCode": {
                            "type": "string"
                        },
                        "parentCompany": {
                            "$ref": "#/definitions/Company"
                        },
                        "parentCompanyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "products": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "taxNumber": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserAccount"
                            }
                        },
                        "users": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        },
                        "wires": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Wire"
                            }
                        }
                    }
                }
            ]
        },
        "Account": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "allowLoanPaymentPastDue",
                        "companyId",
                        "dailyLimit",
                        "dailyUsedValue",
                        "id",
                        "isAccountLinked",
                        "isCompanyAccount",
                        "isSelected",
                        "perTransactionLimit",
                        "rowStatusId",
                        "showAccountNickName",
                        "templateTransferAmount",
                        "updatedDate"
                    ],
                    "properties": {
                        "accountNumberTypeFormat": {
                            "type": "string"
                        },
                        "accountProducts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountProduct"
                            }
                        },
                        "achOffsetAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchOffsetAccount"
                            }
                        },
                        "allowLoanPaymentPastDue": {
                            "type": "boolean"
                        },
                        "analysisTransactionCounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AnalysisTransactionCount"
                            }
                        },
                        "arpExceptionCorrections": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ArpExceptionCorrection"
                            }
                        },
                        "arpExceptions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ArpException"
                            }
                        },
                        "arpReportFiles": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ArpReportFile"
                            }
                        },
                        "associatedClaims": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssociatedClaim"
                            }
                        },
                        "balance": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "cifNumber": {
                            "type": "string"
                        },
                        "collectedBalance": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "company": {
                            "$ref": "#/definitions/Company"
                        },
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "coreAccount": {
                            "$ref": "#/definitions/CoreAccount"
                        },
                        "coreStatus": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "currentBalance": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "dailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "dailyUsedValue": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "internalTransferTransactions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTransaction"
                            }
                        },
                        "internalTransferTransactions1": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTransaction"
                            }
                        },
                        "isAccountLinked": {
                            "type": "boolean"
                        },
                        "isCompanyAccount": {
                            "type": "boolean"
                        },
                        "isSelected": {
                            "type": "boolean"
                        },
                        "linkedTMCompanies": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "loanPaymentAmountDue": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "loanPaymentDueDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "name": {
                            "type": "string"
                        },
                        "nonCoreWireCompanyInternationalAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NonCoreWireCompanyInternationalAccount"
                            }
                        },
                        "number": {
                            "type": "string"
                        },
                        "perTransactionLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "reportingFilterAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportingFilterAccount"
                            }
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "showAccountNickName": {
                            "type": "boolean"
                        },
                        "stopPayments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StopPayment"
                            }
                        },
                        "templateTransferAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "templateTransferMemo": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userAccountGroupAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserAccountGroupAccount"
                            }
                        },
                        "userAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserAccount"
                            }
                        },
                        "users": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        },
                        "wires": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Wire"
                            }
                        }
                    }
                }
            ]
        },
        "AccountProduct": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["accountId", "createdDate", "id", "productId"],
                    "properties": {
                        "account": {
                            "$ref": "#/definitions/Account"
                        },
                        "accountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "accountProductArp": {
                            "$ref": "#/definitions/AccountProductArp"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "product": {
                            "$ref": "#/definitions/Product"
                        },
                        "productAccountPermission": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductAccountPermission"
                            }
                        },
                        "productId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "AccountProductArp": {
            "type": "object",
            "required": ["hasAchException", "hasCheckException", "id", "updatedBy", "updatedDate"],
            "properties": {
                "accountProduct": {
                    "$ref": "#/definitions/AccountProduct"
                },
                "hasAchException": {
                    "type": "boolean"
                },
                "hasCheckException": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Product": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdDate",
                        "id",
                        "isConfigurable",
                        "productTypeId",
                        "rowStatusId",
                        "updatedDate"
                    ],
                    "properties": {
                        "accountProducts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountProduct"
                            }
                        },
                        "achProduct": {
                            "$ref": "#/definitions/AchProduct"
                        },
                        "arpProduct": {
                            "$ref": "#/definitions/ArpProduct"
                        },
                        "billPayProduct": {
                            "$ref": "#/definitions/BillPayProduct"
                        },
                        "company": {
                            "$ref": "#/definitions/Company"
                        },
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "electronicDocumentsProduct": {
                            "$ref": "#/definitions/ElectronicDocumentsProduct"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "internalTransferProduct": {
                            "$ref": "#/definitions/InternalTransferProduct"
                        },
                        "isConfigurable": {
                            "type": "boolean"
                        },
                        "productPermissions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductPermission"
                            }
                        },
                        "productType": {
                            "$ref": "#/definitions/ProductType"
                        },
                        "productTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "remoteDepositProduct": {
                            "$ref": "#/definitions/RemoteDepositProduct"
                        },
                        "reportingConfigurations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportingConfiguration"
                            }
                        },
                        "reportingProduct": {
                            "$ref": "#/definitions/ReportingProduct"
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "stopPaymentProduct": {
                            "$ref": "#/definitions/StopPaymentProduct"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userProductLimits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserProductLimit"
                            }
                        },
                        "wireInternationalProduct": {
                            "$ref": "#/definitions/WireInternationalProduct"
                        },
                        "wireProduct": {
                            "$ref": "#/definitions/WireProduct"
                        }
                    }
                }
            ]
        },
        "AchProduct": {
            "type": "object",
            "required": [
                "accountBalanceValidationConfiguredInCore",
                "achCompanyMatchTypeId",
                "allowFederalTaxPayments",
                "allowSameDayAch",
                "allowStateTaxPayments",
                "allowTaxPayments",
                "batchApprovalCount",
                "batchAuthenticationTypeId",
                "dailyLimit",
                "disableSameDay",
                "id",
                "paymentApprovalCount",
                "paymentAuthenticationTypeId",
                "recipientApprovalCount",
                "updatedDate",
                "validateAccountBalance"
            ],
            "properties": {
                "accountBalanceValidationConfiguredInCore": {
                    "type": "boolean"
                },
                "achCompanyMatchTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "allowFederalTaxPayments": {
                    "type": "boolean"
                },
                "allowSameDayAch": {
                    "type": "boolean"
                },
                "allowStateTaxPayments": {
                    "type": "boolean"
                },
                "allowTaxPayments": {
                    "type": "boolean"
                },
                "batchApprovalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "batchAuthenticationType": {
                    "$ref": "#/definitions/AuthenticationType"
                },
                "batchAuthenticationTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "dailyLimit": {
                    "type": "number",
                    "format": "decimal"
                },
                "disableSameDay": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "paymentApprovalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "paymentAuthenticationType": {
                    "$ref": "#/definitions/AuthenticationType"
                },
                "paymentAuthenticationTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "recipientApprovalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "validateAccountBalance": {
                    "type": "boolean"
                }
            }
        },
        "AuthenticationType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "BaseEntity": {
            "type": "object",
            "required": ["objectState"],
            "properties": {
                "objectState": {
                    "$ref": "#/definitions/ObjectState"
                }
            }
        },
        "ObjectState": {
            "type": "integer",
            "description": "",
            "x-enumNames": ["Unchanged", "Added", "Modified", "Deleted"],
            "enum": [0, 1, 2, 3]
        },
        "InternalTransferProductLinkAccount": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdDate",
                        "fromAccountTypeId",
                        "id",
                        "productId",
                        "toAccountTypeId"
                    ],
                    "properties": {
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "fromAccountType": {
                            "$ref": "#/definitions/AccountType"
                        },
                        "fromAccountTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "internalTransferProduct": {
                            "$ref": "#/definitions/InternalTransferProduct"
                        },
                        "productId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "toAccountType": {
                            "$ref": "#/definitions/AccountType"
                        },
                        "toAccountTypeId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "AccountType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "achBatchRecipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AchBatchRecipient"
                    }
                },
                "achPaymentRecipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AchPaymentRecipient"
                    }
                },
                "achTransactionCodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AchTransactionCode"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "reportingType": {
                    "type": "string"
                }
            }
        },
        "AchBatchRecipient": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "accountTypeId",
                        "achBatchId",
                        "amount",
                        "createdDate",
                        "hold",
                        "id",
                        "preNote",
                        "transactionTypeId",
                        "updatedDate"
                    ],
                    "properties": {
                        "accountNumber": {
                            "type": "string"
                        },
                        "accountType": {
                            "$ref": "#/definitions/AccountType"
                        },
                        "accountTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achBatch": {
                            "$ref": "#/definitions/AchBatch"
                        },
                        "achBatchId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achBatchRecipientAddendas": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchBatchRecipientAddenda"
                            }
                        },
                        "addenda": {
                            "type": "string"
                        },
                        "amount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "hold": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "preNote": {
                            "type": "boolean"
                        },
                        "recipientIdNumber": {
                            "type": "string"
                        },
                        "recipientName": {
                            "type": "string"
                        },
                        "routingNumber": {
                            "type": "string"
                        },
                        "rowNum": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "transactionType": {
                            "$ref": "#/definitions/TransactionType"
                        },
                        "transactionTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "AchBatch": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "achCompanyId",
                        "achCompanyMatchType",
                        "achSecCodeId",
                        "approvalsRequired",
                        "batchStatusTypeId",
                        "batchUniqueId",
                        "completedApprovals",
                        "createdDate",
                        "creditAmount",
                        "debitAmount",
                        "id",
                        "isEdited",
                        "numberOfRecipients",
                        "restricted",
                        "updatedDate"
                    ],
                    "properties": {
                        "achBatchAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchBatchAudit"
                            }
                        },
                        "achBatchRecipients": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchBatchRecipient"
                            }
                        },
                        "achCompany": {
                            "$ref": "#/definitions/AchCompany"
                        },
                        "achCompanyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achCompanyMatchType": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achCompanyName": {
                            "type": "string"
                        },
                        "achPayments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchPayment"
                            }
                        },
                        "achSecCode": {
                            "$ref": "#/definitions/AchSecCode"
                        },
                        "achSecCodeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "approvalsRequired": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "approvedBy": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TupleOfStringAndDateTime"
                            }
                        },
                        "batchName": {
                            "type": "string"
                        },
                        "batchStatusType": {
                            "$ref": "#/definitions/BatchStatusType"
                        },
                        "batchStatusTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "batchUniqueId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "companyIdentity": {
                            "type": "string"
                        },
                        "completedApprovals": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "credit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "creditAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "debit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "debitAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "descretionaryData": {
                            "type": "string"
                        },
                        "eligibleApprovers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "entryDescription": {
                            "type": "string"
                        },
                        "errorMessage": {
                            "type": "string"
                        },
                        "fileArchive": {
                            "$ref": "#/definitions/FileArchive"
                        },
                        "fileArchiveId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isEdited": {
                            "type": "boolean"
                        },
                        "numberOfRecipients": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "restricted": {
                            "type": "boolean"
                        },
                        "secCode": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string"
                        },
                        "successMessage": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userPermissions": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "AchBatchAudit": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["achBatchId", "actionTypeId", "createdDate", "id"],
                    "properties": {
                        "achActionType": {
                            "$ref": "#/definitions/AchActionType"
                        },
                        "achBatch": {
                            "$ref": "#/definitions/AchBatch"
                        },
                        "achBatchId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "actionTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "comments": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "userName": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "AchActionType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "achBatchAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchBatchAudit"
                            }
                        },
                        "achPaymentAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchPaymentAudit"
                            }
                        },
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "AchPaymentAudit": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["achActionTypeId", "achPaymentId", "createdDate", "id"],
                    "properties": {
                        "achActionType": {
                            "$ref": "#/definitions/AchActionType"
                        },
                        "achActionTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achPayment": {
                            "$ref": "#/definitions/AchPayment"
                        },
                        "achPaymentId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "comments": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "userName": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "AchPayment": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "achCompanyId",
                        "achPaymentDraftId",
                        "achPaymentRecipientsCount",
                        "achPaymentTypeId",
                        "approvalsRequired",
                        "balanceValidationNotRequired",
                        "batchUniqueId",
                        "completedApprovals",
                        "createdDate",
                        "effectiveDate",
                        "hasAccess",
                        "id",
                        "onUsCount",
                        "paymentFrequencyTypeId",
                        "restricted",
                        "statusTypeId",
                        "updatedDate",
                        "canReverseFull",
                        "canReverseTransactions"
                    ],
                    "properties": {
                        "account": {
                            "$ref": "#/definitions/Account"
                        },
                        "achBatch": {
                            "$ref": "#/definitions/AchBatch"
                        },
                        "achBatchId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achCompany": {
                            "$ref": "#/definitions/AchCompany"
                        },
                        "achCompanyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achCompanyName": {
                            "type": "string"
                        },
                        "achFederalTaxPayment": {
                            "$ref": "#/definitions/AchFederalTaxPayment"
                        },
                        "achNachaFileCopyAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchNachaFileCopyAudit"
                            }
                        },
                        "achPaymentAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchPaymentAudit"
                            }
                        },
                        "achPaymentDraftId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achPaymentRecipients": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchPaymentRecipient"
                            }
                        },
                        "achPaymentRecipientsCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achPaymentType": {
                            "$ref": "#/definitions/AchPaymentType"
                        },
                        "achPaymentTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achStateTaxPayment": {
                            "$ref": "#/definitions/AchStateTaxPayment"
                        },
                        "achStatusType": {
                            "$ref": "#/definitions/AchStatusType"
                        },
                        "achTransactionId": {
                            "type": "string"
                        },
                        "approvalsRequired": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "approvedBy": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TupleOfStringAndDateTime"
                            }
                        },
                        "balanceValidationNotRequired": {
                            "type": "boolean"
                        },
                        "batchName": {
                            "type": "string"
                        },
                        "batchUniqueId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "chilAchPayments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchPayment"
                            }
                        },
                        "comment": {
                            "type": "string"
                        },
                        "companyIdentity": {
                            "type": "string"
                        },
                        "completedApprovals": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "copiedFromTransactionId": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdByUser": {
                            "$ref": "#/definitions/User"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "credit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "debit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "descretionaryData": {
                            "type": "string"
                        },
                        "effectiveDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "eligibleApprovers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "endDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "entryDescription": {
                            "type": "string"
                        },
                        "errorSummary": {
                            "$ref": "#/definitions/ErrorSummary"
                        },
                        "failureReason": {
                            "type": "string"
                        },
                        "fileArchive": {
                            "$ref": "#/definitions/FileArchive"
                        },
                        "fileArchiveId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "fileName": {
                            "type": "string"
                        },
                        "hasAccess": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "initiatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "offsetAccountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "onUsAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "onUsCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "parentAchPayment": {
                            "$ref": "#/definitions/AchPayment"
                        },
                        "parentAchPaymentId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "paymentFrequencyType": {
                            "$ref": "#/definitions/PaymentFrequencyType"
                        },
                        "paymentFrequencyTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "paymentOnLastBusinessDay": {
                            "type": "boolean"
                        },
                        "paymentProcessingBasedOn1Record": {
                            "type": "boolean"
                        },
                        "recipientIdsforReversal": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        "referenceNumber": {
                            "type": "string"
                        },
                        "repeatOnDayOne": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "repeatOnDayTwo": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "restricted": {
                            "type": "boolean"
                        },
                        "reversalAchPaymentId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "secCode": {
                            "type": "string"
                        },
                        "sentFileArchive": {
                            "$ref": "#/definitions/FileArchive"
                        },
                        "sentFileArchiveId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "startDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "statusTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "successMessage": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedByUser": {
                            "$ref": "#/definitions/User"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userPermissions": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "canReverseFull": {
                            "type": "boolean"
                        },
                        "canReverseTransactions": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "AchCompany": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "achBatchBalanceTypeId",
                        "allowedNotOnUsTransactionTypeId",
                        "dailyLimit",
                        "id",
                        "isPaymentProcessingCompany",
                        "paymentProcessingCompanyAllowed",
                        "requiredOnUsAmountPerBatch",
                        "requiredOnUsTransactionCount",
                        "sameDayAchAllowed"
                    ],
                    "properties": {
                        "achBatchBalanceTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achBatches": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchBatch"
                            }
                        },
                        "achCompanyId": {
                            "type": "string"
                        },
                        "achCompanySecCodes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchCompanySecCode"
                            }
                        },
                        "achOffsetAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchOffsetAccount"
                            }
                        },
                        "achPayments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchPayment"
                            }
                        },
                        "allowedNotOnUsTransactionTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "availableBalanceTable": {
                            "type": "string"
                        },
                        "balanceValidationType": {
                            "type": "string"
                        },
                        "batchBalanceType": {
                            "$ref": "#/definitions/BatchBalanceType"
                        },
                        "company": {
                            "$ref": "#/definitions/Company"
                        },
                        "coreSecCode": {
                            "type": "string"
                        },
                        "dailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "discretionaryData": {
                            "type": "string"
                        },
                        "entryDescription": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isPaymentProcessingCompany": {
                            "type": "boolean"
                        },
                        "paymentProcessingCompanyAllowed": {
                            "type": "boolean"
                        },
                        "requiredOnUsAmountPerBatch": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "requiredOnUsTransactionCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "sameDayAchAllowed": {
                            "type": "boolean"
                        },
                        "settlementAccount": {
                            "type": "string"
                        },
                        "settlementAccountType": {
                            "type": "string"
                        },
                        "transactionType": {
                            "$ref": "#/definitions/TransactionType"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userAchCompanies": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserAchCompany"
                            }
                        }
                    }
                }
            ]
        },
        "AchCompanySecCode": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["achSecCodeId", "companyId", "createdDate", "id"],
                    "properties": {
                        "achCompany": {
                            "$ref": "#/definitions/AchCompany"
                        },
                        "achSecCode": {
                            "$ref": "#/definitions/AchSecCode"
                        },
                        "achSecCodeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "AchSecCode": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "secCode": {
                    "type": "string"
                }
            }
        },
        "AchOffsetAccount": {
            "type": "object",
            "required": ["accountId", "achCompanyId", "id", "isActive", "updatedBy", "updatedDate"],
            "properties": {
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "achCompany": {
                    "$ref": "#/definitions/AchCompany"
                },
                "achCompanyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "isActive": {
                    "type": "boolean"
                },
                "updatedBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "User": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "backOfficeSsoEnabled",
                        "createdDate",
                        "enrolled",
                        "hasLoggedIn",
                        "id",
                        "institutionId",
                        "isAdmin",
                        "isEditor",
                        "isSuperUser",
                        "locked",
                        "loginFailureCount",
                        "mfaLocked",
                        "passwordDate",
                        "rowStatusId",
                        "updatedDate",
                        "userTypeId"
                    ],
                    "properties": {
                        "accountLookups": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Lookup"
                            }
                        },
                        "accountProducts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountProduct"
                            }
                        },
                        "achOffsetAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchOffsetAccount"
                            }
                        },
                        "alias": {
                            "type": "string"
                        },
                        "associatedClaims": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssociatedClaim"
                            }
                        },
                        "backOfficeSsoEnabled": {
                            "type": "boolean"
                        },
                        "beneficiaryAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BeneficiaryAudit"
                            }
                        },
                        "boReports": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BoReport"
                            }
                        },
                        "company": {
                            "$ref": "#/definitions/Company"
                        },
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "contactInfo": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "department": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        },
                        "enrolled": {
                            "type": "boolean"
                        },
                        "favoriteReports": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FavoriteReport"
                            }
                        },
                        "fax": {
                            "type": "string"
                        },
                        "hasLoggedIn": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "importBatchId": {
                            "type": "string"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isAdmin": {
                            "type": "boolean"
                        },
                        "isEditor": {
                            "type": "boolean"
                        },
                        "isSuperUser": {
                            "type": "boolean"
                        },
                        "locked": {
                            "type": "boolean"
                        },
                        "loginFailureCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "mfaLocked": {
                            "type": "boolean"
                        },
                        "name": {
                            "type": "string"
                        },
                        "notificationEmail": {
                            "type": "string"
                        },
                        "notificationPhoneCarrier": {
                            "$ref": "#/definitions/TextMessagingCarrier"
                        },
                        "notificationPhoneCarrierId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "notificationPhoneNumber": {
                            "type": "string"
                        },
                        "notificationRecipientId": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        },
                        "passwordDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "pendingState": {
                            "$ref": "#/definitions/PendingEditStatus"
                        },
                        "phoneExtension": {
                            "type": "string"
                        },
                        "phoneNumber": {
                            "type": "string"
                        },
                        "publishState": {
                            "type": "string"
                        },
                        "reportingFilterSorts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportingFilterSort"
                            }
                        },
                        "reportingFilters": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportingFilter"
                            }
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "sessions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Session"
                            }
                        },
                        "showAccountNickName": {
                            "type": "boolean"
                        },
                        "showMaskedAccount": {
                            "type": "boolean"
                        },
                        "tempPasswordToken": {
                            "type": "string"
                        },
                        "tempPasswordTokenExpirationDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "termsAcceptedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userAccountGroups": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserAccountGroup"
                            }
                        },
                        "userAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserAccount"
                            }
                        },
                        "userAchCompanies": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserAchCompany"
                            }
                        },
                        "userAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserAudit"
                            }
                        },
                        "userDevices": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserDevice"
                            }
                        },
                        "userIpAccessSetting": {
                            "$ref": "#/definitions/UserIpAccessSetting"
                        },
                        "userIpAccesses": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserIpAccess"
                            }
                        },
                        "userNotificationTypes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserNotificationType"
                            }
                        },
                        "userNotifications": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserNotification"
                            }
                        },
                        "userOobDetail": {
                            "$ref": "#/definitions/UserOobDetail"
                        },
                        "userPasswordHistories": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserPasswordHistory"
                            }
                        },
                        "userProductLimits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserProductLimit"
                            }
                        },
                        "userRoles": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserRole"
                            }
                        },
                        "userSecureTokenSecurity": {
                            "$ref": "#/definitions/UserSecureTokenSecurity"
                        },
                        "userSsoLogins": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserSsoLogin"
                            }
                        },
                        "userTimeAccessSetting": {
                            "$ref": "#/definitions/UserTimeAccessSetting"
                        },
                        "userTimeAccesses": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserTimeAccess3"
                            }
                        },
                        "userType": {
                            "$ref": "#/definitions/UserType1"
                        },
                        "userTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "userWidgets": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserWidget"
                            }
                        },
                        "wireAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireAudit"
                            }
                        }
                    }
                }
            ]
        },
        "Lookup": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "AssociatedClaim": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["claimId", "createdDate", "id", "startDate", "updatedDate"],
                    "properties": {
                        "account": {
                            "$ref": "#/definitions/Account"
                        },
                        "accountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "claim": {
                            "$ref": "#/definitions/Claim"
                        },
                        "claimId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "endDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "role": {
                            "$ref": "#/definitions/Role"
                        },
                        "roleId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "startDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "Claim": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["active", "id", "updatedDate", "userTypeId"],
                    "properties": {
                        "active": {
                            "type": "boolean"
                        },
                        "associatedClaims": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssociatedClaim"
                            }
                        },
                        "claimNavigations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ClaimNavigation"
                            }
                        },
                        "claimType": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "productClaims": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductClaim"
                            }
                        },
                        "uiPermission": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userType": {
                            "$ref": "#/definitions/UserType1"
                        },
                        "userTypeId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "ClaimNavigation": {
            "type": "object",
            "required": [
                "<ClaimId>k__BackingField",
                "<ClaimNavigationId>k__BackingField",
                "<Claim>k__BackingField",
                "<NavigationId>k__BackingField",
                "<Navigation>k__BackingField"
            ],
            "properties": {
                "<ClaimId>k__BackingField": {
                    "type": "integer",
                    "format": "int32"
                },
                "<ClaimNavigationId>k__BackingField": {
                    "type": "integer",
                    "format": "int32"
                },
                "<Claim>k__BackingField": {
                    "$ref": "#/definitions/Claim"
                },
                "<NavigationId>k__BackingField": {
                    "type": "integer",
                    "format": "int32"
                },
                "<Navigation>k__BackingField": {
                    "$ref": "#/definitions/Navigation"
                }
            }
        },
        "Navigation": {
            "type": "object",
            "required": ["navigationId", "updatedDate"],
            "properties": {
                "applicationType": {
                    "$ref": "#/definitions/ApplicationType"
                },
                "applicationTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "childNavigations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Navigation"
                    }
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "navigationId": {
                    "type": "integer",
                    "format": "int32"
                },
                "path": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ApplicationType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "navigations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Navigation"
                            }
                        }
                    }
                }
            ]
        },
        "ProductClaim": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["claimId", "id", "productTypeId"],
                    "properties": {
                        "claim": {
                            "$ref": "#/definitions/Claim"
                        },
                        "claimId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "productType": {
                            "$ref": "#/definitions/ProductType"
                        },
                        "productTypeId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "ProductType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionProductTypes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionProductType"
                            }
                        },
                        "name": {
                            "type": "string"
                        },
                        "productClaims": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductClaim"
                            }
                        },
                        "products": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    }
                }
            ]
        },
        "InstitutionProductType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "id",
                        "institutionId",
                        "internationalUsdReadOnly",
                        "isCompanyProductConfigurable",
                        "productTypeId",
                        "rowStatusId",
                        "updatedDate"
                    ],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "institutionAchProduct": {
                            "$ref": "#/definitions/InstitutionAchProduct"
                        },
                        "institutionArpProduct": {
                            "$ref": "#/definitions/InstitutionArpProduct"
                        },
                        "institutionBillPayProduct": {
                            "$ref": "#/definitions/InstitutionBillPayProduct"
                        },
                        "institutionElectronicDocuments": {
                            "$ref": "#/definitions/InstitutionElectronicDocuments"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionInternalTransferProduct": {
                            "$ref": "#/definitions/InstitutionInternalTransferProduct"
                        },
                        "institutionProductCutoffTimes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionProductCutoffTime"
                            }
                        },
                        "institutionReportingConfigurations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionReportingConfiguration"
                            }
                        },
                        "institutionReportingProduct": {
                            "$ref": "#/definitions/InstitutionReportingProduct"
                        },
                        "institutionSsoProducts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionSsoProduct"
                            }
                        },
                        "institutionStopPayment": {
                            "$ref": "#/definitions/InstitutionStopPayment"
                        },
                        "institutionWireInternationalProduct": {
                            "$ref": "#/definitions/InstitutionWireInternationalProduct"
                        },
                        "institutionWireProduct": {
                            "$ref": "#/definitions/InstitutionWireProduct"
                        },
                        "internationalUsdReadOnly": {
                            "type": "boolean"
                        },
                        "isCompanyProductConfigurable": {
                            "type": "boolean"
                        },
                        "productType": {
                            "$ref": "#/definitions/ProductType"
                        },
                        "productTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "Institution2": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdDate",
                        "id",
                        "paymentProcessTime",
                        "rowStatusId",
                        "timeZoneId",
                        "updatedDate"
                    ],
                    "properties": {
                        "achExceptionReturnCode": {
                            "type": "string"
                        },
                        "analysisTransactionCodes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AnalysisTransactionCode2"
                            }
                        },
                        "boReports": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BoReport"
                            }
                        },
                        "brandName": {
                            "type": "string"
                        },
                        "challengeGroups": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChallengeGroup"
                            }
                        },
                        "companies": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Company"
                            }
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "fiId": {
                            "type": "string"
                        },
                        "fileArchive": {
                            "$ref": "#/definitions/FileArchive"
                        },
                        "fileArchiveId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "informationCenterConfigurations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InformationCenterConfiguration"
                            }
                        },
                        "institutionAccountDisplaySetting": {
                            "$ref": "#/definitions/InstitutionAccountDisplaySetting"
                        },
                        "institutionAffiliations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionAffiliation"
                            }
                        },
                        "institutionMessageCenter": {
                            "$ref": "#/definitions/InstitutionMessageCenter"
                        },
                        "institutionNachaFileRecord": {
                            "$ref": "#/definitions/InstitutionNachaFileRecord"
                        },
                        "institutionName": {
                            "type": "string"
                        },
                        "institutionNotificationTypes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionNotificationType"
                            }
                        },
                        "institutionOobConfiguration": {
                            "$ref": "#/definitions/InstitutionOobConfiguration"
                        },
                        "institutionProductTypes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionProductType"
                            }
                        },
                        "institutionTerm": {
                            "$ref": "#/definitions/InstitutionTerm"
                        },
                        "institutionUserApprovalSetting": {
                            "$ref": "#/definitions/InstitutionUserApprovalSetting"
                        },
                        "institutionWireInternationalWorkflowOverrides": {
                            "$ref": "#/definitions/InstitutionWireInternationalWorkflowOverrides"
                        },
                        "jxEnvironment": {
                            "type": "string"
                        },
                        "jxRoutingNumber": {
                            "type": "string"
                        },
                        "lastEodDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "loginConfigurations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LoginConfiguration"
                            }
                        },
                        "logo": {
                            "type": "string"
                        },
                        "logoutURL": {
                            "type": "string"
                        },
                        "notificationEmail": {
                            "type": "string"
                        },
                        "notificationEnabled": {
                            "type": "boolean"
                        },
                        "paymentProcessTime": {
                            "type": "string",
                            "format": "duration"
                        },
                        "resourceConfigurations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResourceConfiguration"
                            }
                        },
                        "roles": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Role"
                            }
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "rsaInstId": {
                            "type": "string"
                        },
                        "showCutOffTimeZone": {
                            "type": "boolean"
                        },
                        "supportDepartmentName": {
                            "type": "string"
                        },
                        "supportEmail": {
                            "type": "string"
                        },
                        "supportPhone": {
                            "type": "string"
                        },
                        "timeZoneId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "transactionCodeGroups": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransactionCodeGroup"
                            }
                        },
                        "transactionCodes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransactionCode"
                            }
                        },
                        "treasuryProductName": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "users": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        },
                        "welcomeEmailText": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "AnalysisTransactionCode2": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "active",
                        "analysisTransactionCodeId",
                        "analysisTransactionTypeId",
                        "institutionId"
                    ],
                    "properties": {
                        "active": {
                            "type": "boolean"
                        },
                        "analysisTransactionCodeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "analysisTransactionType": {
                            "$ref": "#/definitions/AnalysisTransactionType2"
                        },
                        "analysisTransactionTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "transactionCode": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "AnalysisTransactionType2": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "analysisTransactionTypeCategoryId",
                        "analysisTransactionTypeId",
                        "sortOrder"
                    ],
                    "properties": {
                        "analysisTransactionCodes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AnalysisTransactionCode2"
                            }
                        },
                        "analysisTransactionCounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AnalysisTransactionCount"
                            }
                        },
                        "analysisTransactionTypeCategory": {
                            "$ref": "#/definitions/AnalysisTransactionTypeCategory2"
                        },
                        "analysisTransactionTypeCategoryId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "analysisTransactionTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "description": {
                            "type": "string"
                        },
                        "sortOrder": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "transactionName": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "AnalysisTransactionCount": {
            "type": "object",
            "required": [
                "accountId",
                "activityDate",
                "analysisTransactionCountId",
                "createdBy",
                "createdDate",
                "transactionCount"
            ],
            "properties": {
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "activityDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "analysisTransactionCountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "analysisTransactionType": {
                    "$ref": "#/definitions/AnalysisTransactionType2"
                },
                "analysisTransactionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "transactionCode": {
                    "type": "string"
                },
                "transactionCount": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AnalysisTransactionTypeCategory2": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id", "sortOrder"],
                    "properties": {
                        "categoryName": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "sortOrder": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "BoReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id", "isCustomReport", "runDefaultSearch", "updatedDate"],
                    "properties": {
                        "boFavoriteReports": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BoFavoriteReport"
                            }
                        },
                        "boReport1": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BoReport"
                            }
                        },
                        "boReport2": {
                            "$ref": "#/definitions/BoReport"
                        },
                        "boReportColumns": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BoReportColumn"
                            }
                        },
                        "boReportFilters": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BoReportFilter"
                            }
                        },
                        "customFilter": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isCustomReport": {
                            "type": "boolean"
                        },
                        "isFavoriteReport": {
                            "type": "boolean"
                        },
                        "ownerId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "reportName": {
                            "type": "string"
                        },
                        "reportType": {
                            "type": "string"
                        },
                        "runDefaultSearch": {
                            "type": "boolean"
                        },
                        "sequences": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BoReportUISequence"
                            }
                        },
                        "standardReportId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            ]
        },
        "BoFavoriteReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["boReportId", "id", "userId"],
                    "properties": {
                        "boReport": {
                            "$ref": "#/definitions/BoReport"
                        },
                        "boReportId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "BoReportColumn": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "boReportId",
                        "createdDate",
                        "detailsAccessible",
                        "displayOrder",
                        "id",
                        "isSortable"
                    ],
                    "properties": {
                        "boReport": {
                            "$ref": "#/definitions/BoReport"
                        },
                        "boReportId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "columnName": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": {
                            "type": "string"
                        },
                        "detailsAccessible": {
                            "type": "boolean"
                        },
                        "displayName": {
                            "type": "string"
                        },
                        "displayOrder": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "displayType": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isSortable": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "BoReportFilter": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "applyCascadeFilter",
                        "boReportId",
                        "id",
                        "order",
                        "required",
                        "triggerCascadeFilter"
                    ],
                    "properties": {
                        "applyCascadeFilter": {
                            "type": "boolean"
                        },
                        "boReport": {
                            "$ref": "#/definitions/BoReport"
                        },
                        "boReportId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "filterLabel": {
                            "type": "string"
                        },
                        "filterModel": {
                            "type": "string"
                        },
                        "filterType": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "order": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "required": {
                            "type": "boolean"
                        },
                        "triggerCascadeFilter": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "BoReportUISequence": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "boReportId",
                        "createdDate",
                        "id",
                        "order",
                        "updatedDate",
                        "userId"
                    ],
                    "properties": {
                        "boReport": {
                            "$ref": "#/definitions/BoReport"
                        },
                        "boReportId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "order": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "selector": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "ChallengeGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdDate",
                        "id",
                        "institutionId",
                        "isDefault",
                        "rowStatusId",
                        "updatedDate"
                    ],
                    "properties": {
                        "challengeGroupDetails": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChallengeGroupDetail"
                            }
                        },
                        "companyChallengeGroups": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyChallengeGroup"
                            }
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isDefault": {
                            "type": "boolean"
                        },
                        "name": {
                            "type": "string"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "ChallengeGroupDetail": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "challengeGroupId",
                        "challengePointId",
                        "createdDate",
                        "id",
                        "isActivatedByThreshold",
                        "isActive",
                        "updatedDate"
                    ],
                    "properties": {
                        "challengeGroup": {
                            "$ref": "#/definitions/ChallengeGroup"
                        },
                        "challengeGroupId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "challengePoint": {
                            "$ref": "#/definitions/ChallengePoint"
                        },
                        "challengePointId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isActivatedByThreshold": {
                            "type": "boolean"
                        },
                        "isActive": {
                            "type": "boolean"
                        },
                        "thresholdAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "ChallengePoint": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "challengePointCategoryId",
                        "challengePointFrequencyTypeId",
                        "hasThreshold",
                        "id"
                    ],
                    "properties": {
                        "challengeGroupDetails": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChallengeGroupDetail"
                            }
                        },
                        "challengeLocation": {
                            "type": "string"
                        },
                        "challengePointCategory": {
                            "$ref": "#/definitions/ChallengePointCategory"
                        },
                        "challengePointCategoryId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "challengePointFrequencyType": {
                            "$ref": "#/definitions/ChallengePointFrequencyType"
                        },
                        "challengePointFrequencyTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "description": {
                            "type": "string"
                        },
                        "hasThreshold": {
                            "type": "boolean"
                        },
                        "hoverText": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "userSessionChallengeStatus": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserSessionChallengeStatus"
                            }
                        }
                    }
                }
            ]
        },
        "ChallengePointCategory": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id", "sort"],
                    "properties": {
                        "challengePoints": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChallengePoint"
                            }
                        },
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "sort": {
                            "type": "number",
                            "format": "decimal"
                        }
                    }
                }
            ]
        },
        "ChallengePointFrequencyType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "challengePoints": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChallengePoint"
                            }
                        },
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "UserSessionChallengeStatus": {
            "type": "object",
            "required": [
                "challengeDate",
                "challengeMethodTypeId",
                "challengePointId",
                "challengeStatusId",
                "id",
                "sessionId"
            ],
            "properties": {
                "challengeDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "challengeMethodTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "challengePoint": {
                    "$ref": "#/definitions/ChallengePoint"
                },
                "challengePointId": {
                    "type": "integer",
                    "format": "int32"
                },
                "challengeStatusId": {
                    "type": "integer",
                    "format": "int32"
                },
                "challengeStatusType": {
                    "$ref": "#/definitions/ChallengeStatusType"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "oobReceiptId": {
                    "type": "integer",
                    "format": "int32"
                },
                "oobValidationMode": {
                    "$ref": "#/definitions/OobValidationMode"
                },
                "oobValidationModeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "session": {
                    "$ref": "#/definitions/Session"
                },
                "sessionId": {
                    "type": "string",
                    "format": "guid"
                }
            }
        },
        "ChallengeStatusType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "userSessionChallengeStatus": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserSessionChallengeStatus"
                            }
                        }
                    }
                }
            ]
        },
        "OobValidationMode": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Session": {
            "type": "object",
            "required": [
                "id",
                "loginDate",
                "mfaCompleted",
                "mfaRequired",
                "secureTokenMfaCompleted",
                "secureTokenMfaRequired",
                "updatedDate",
                "userId"
            ],
            "properties": {
                "browser": {
                    "type": "string"
                },
                "clientConnectionId": {
                    "type": "string",
                    "format": "guid"
                },
                "clientIpAddress": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "guid"
                },
                "latestSessionActivityDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "loginDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "logoffDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "mfaCompleted": {
                    "type": "boolean"
                },
                "mfaRequired": {
                    "type": "boolean"
                },
                "printMailSSoId": {
                    "type": "string"
                },
                "printMailUrl": {
                    "type": "string"
                },
                "secureTokenMfaCompleted": {
                    "type": "boolean"
                },
                "secureTokenMfaRequired": {
                    "type": "boolean"
                },
                "sessionActivities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SessionActivity"
                    }
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "userSessionChallengeStatus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserSessionChallengeStatus"
                    }
                }
            }
        },
        "SessionActivity": {
            "type": "object",
            "required": ["activityId", "createdDate", "sessionId"],
            "properties": {
                "activityId": {
                    "type": "string",
                    "format": "guid"
                },
                "activityName": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "session": {
                    "$ref": "#/definitions/Session"
                },
                "sessionId": {
                    "type": "string",
                    "format": "guid"
                }
            }
        },
        "CompanyChallengeGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "challengeGroupId",
                        "challengeMethodTypeId",
                        "id",
                        "rowStatusId",
                        "updatedDate"
                    ],
                    "properties": {
                        "challengeGroup": {
                            "$ref": "#/definitions/ChallengeGroup"
                        },
                        "challengeGroupId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "challengeMethodTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "company": {
                            "$ref": "#/definitions/Company"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "rowStatusId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "FileArchive": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["createdDate", "fileTypeId", "id", "isValid", "uniqueId"],
                    "properties": {
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "fileContent": {
                            "type": "string",
                            "format": "byte"
                        },
                        "fileName": {
                            "type": "string"
                        },
                        "fileTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "fileValidationFailures": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FileValidationFailure"
                            }
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isValid": {
                            "type": "boolean"
                        },
                        "uniqueId": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                }
            ]
        },
        "FileValidationFailure": {
            "type": "object",
            "required": ["fileArchiveId", "fileValidationFailureTypeId", "id"],
            "properties": {
                "fileArchive": {
                    "$ref": "#/definitions/FileArchive"
                },
                "fileArchiveId": {
                    "type": "integer",
                    "format": "int32"
                },
                "fileValidationFailureType": {
                    "$ref": "#/definitions/FileValidationFailureType"
                },
                "fileValidationFailureTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "validationFailureJson": {
                    "type": "string"
                }
            }
        },
        "FileValidationFailureType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "InformationCenterConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdDate",
                        "endDate",
                        "id",
                        "informationCenterMessageTypeId",
                        "institutionId",
                        "rowStatusId",
                        "startDate",
                        "updatedDate"
                    ],
                    "properties": {
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": {
                            "type": "string"
                        },
                        "endDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "informationCenterMessageType": {
                            "$ref": "#/definitions/InformationCenterMessageType"
                        },
                        "informationCenterMessageTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "sequence": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "startDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "title": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "InformationCenterMessageType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "informationCenterConfigurations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InformationCenterConfiguration"
                            }
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "RowStatus": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "accounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        },
                        "addresses": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Address"
                            }
                        },
                        "beneficiaries": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Beneficiary"
                            }
                        },
                        "beneficiaryAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BeneficiaryAudit"
                            }
                        },
                        "companies": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Company"
                            }
                        },
                        "description": {
                            "type": "string"
                        },
                        "domesticBanks": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DomesticBank"
                            }
                        },
                        "id": {
                            "type": "integer"
                        },
                        "informationCenterConfigurations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InformationCenterConfiguration"
                            }
                        },
                        "institutionNotificationTypes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionNotificationType"
                            }
                        },
                        "institutionProductTypes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionProductType"
                            }
                        },
                        "institutions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Institution2"
                            }
                        },
                        "name": {
                            "type": "string"
                        },
                        "products": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        },
                        "resourceConfigurations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResourceConfiguration"
                            }
                        },
                        "roles": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Role"
                            }
                        },
                        "schedules": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Schedule"
                            }
                        },
                        "userNotificationTypes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserNotificationType"
                            }
                        },
                        "users": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            ]
        },
        "Address": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["createdDate", "id", "rowStatusId", "updatedDate"],
                    "properties": {
                        "addressLine1": {
                            "type": "string"
                        },
                        "addressLine2": {
                            "type": "string"
                        },
                        "addressLine3": {
                            "type": "string"
                        },
                        "city": {
                            "type": "string"
                        },
                        "country": {
                            "$ref": "#/definitions/Country"
                        },
                        "countryId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "postalCode": {
                            "type": "string"
                        },
                        "postalCodeExtension": {
                            "type": "string"
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "rowVersionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "state": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "Country": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "addresses": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Address"
                            }
                        },
                        "countryCode": {
                            "type": "string"
                        },
                        "countryName": {
                            "type": "string"
                        },
                        "currencyCode": {
                            "type": "string"
                        },
                        "currencyName": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "intradaySpot": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "Beneficiary": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "addressId",
                        "approvalCount",
                        "companyId",
                        "completedApprovals",
                        "createdDate",
                        "id",
                        "institutionId",
                        "isEdited",
                        "isFreeForm",
                        "isInternational",
                        "isTemplateBeneficiary",
                        "rowStatusId",
                        "updatedDate"
                    ],
                    "properties": {
                        "additionalDetails": {
                            "type": "string"
                        },
                        "address": {
                            "$ref": "#/definitions/Address"
                        },
                        "addressId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "approvalCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "approvedBy": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TupleOfStringAndDateTime"
                            }
                        },
                        "beneficiaryAccountNumber": {
                            "type": "string"
                        },
                        "beneficiaryAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BeneficiaryAudit"
                            }
                        },
                        "beneficiaryName": {
                            "type": "string"
                        },
                        "company": {
                            "$ref": "#/definitions/Company"
                        },
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "completedApprovals": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "domesticBank": {
                            "$ref": "#/definitions/DomesticBank"
                        },
                        "domesticBankId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "domesticIntermediaryAccountNumber": {
                            "type": "string"
                        },
                        "domesticIntermediaryNotes": {
                            "type": "string"
                        },
                        "eligibleApprovers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "foreignBankAddress": {
                            "$ref": "#/definitions/Address"
                        },
                        "foreignBankAddressId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "foreignBankId": {
                            "type": "string"
                        },
                        "foreignBankIdentificationType": {
                            "$ref": "#/definitions/BankIdentificationType"
                        },
                        "foreignBankIdentificationTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "foreignBankName": {
                            "type": "string"
                        },
                        "foreignIntermediaryBankAddress": {
                            "$ref": "#/definitions/Address"
                        },
                        "foreignIntermediaryBankAddressId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "foreignIntermediaryBankId": {
                            "type": "string"
                        },
                        "foreignIntermediaryBankIdentificationType": {
                            "$ref": "#/definitions/BankIdentificationType"
                        },
                        "foreignIntermediaryBankIdentificationTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "foreignIntermediaryBankName": {
                            "type": "string"
                        },
                        "foreignIntermediaryNotes": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "intermediaryDomesticBank": {
                            "$ref": "#/definitions/DomesticBank"
                        },
                        "intermediaryDomesticBankId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isEdited": {
                            "type": "boolean"
                        },
                        "isForeignCurrency": {
                            "type": "boolean"
                        },
                        "isFreeForm": {
                            "type": "boolean"
                        },
                        "isInternational": {
                            "type": "boolean"
                        },
                        "isTemplateBeneficiary": {
                            "type": "boolean"
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "status": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "useDomesticIntermediary": {
                            "type": "boolean"
                        },
                        "useForeignIntermediary": {
                            "type": "boolean"
                        },
                        "userDefinedDomesticBankAddress": {
                            "$ref": "#/definitions/Address"
                        },
                        "userDefinedDomesticBankAddressId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "userDefinedDomesticBankId": {
                            "type": "string"
                        },
                        "userDefinedDomesticBankIdentificationType": {
                            "$ref": "#/definitions/BankIdentificationType"
                        },
                        "userDefinedDomesticBankIdentificationTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "userDefinedDomesticBankName": {
                            "type": "string"
                        },
                        "userPermissions": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "wires": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Wire"
                            }
                        }
                    }
                }
            ]
        },
        "TupleOfStringAndDateTime": {
            "type": "object",
            "required": ["item2"],
            "properties": {
                "item1": {
                    "type": "string"
                },
                "item2": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "BeneficiaryAudit": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "actionDate",
                        "actionUserId",
                        "beneficiaryActionTypeId",
                        "beneficiaryId",
                        "createdDate",
                        "id",
                        "rowStatusId",
                        "rowVersionId",
                        "updatedDate"
                    ],
                    "properties": {
                        "actionDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "actionUserId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "beneficiary": {
                            "$ref": "#/definitions/Beneficiary"
                        },
                        "beneficiaryActionType": {
                            "$ref": "#/definitions/BeneficiaryActionType"
                        },
                        "beneficiaryActionTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "beneficiaryId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "comments": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "rowVersionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            ]
        },
        "BeneficiaryActionType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "beneficiaryAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BeneficiaryAudit"
                            }
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "DomesticBank": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id", "isActive", "onUs"],
                    "properties": {
                        "addressLine1": {
                            "type": "string"
                        },
                        "addressLine2": {
                            "type": "string"
                        },
                        "bankName": {
                            "type": "string"
                        },
                        "city": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "domesticBankTypeId": {
                            "type": "integer"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isActive": {
                            "type": "boolean"
                        },
                        "onUs": {
                            "type": "boolean"
                        },
                        "routingNumber": {
                            "type": "string"
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "rowVersionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "state": {
                            "$ref": "#/definitions/State"
                        },
                        "stateCode": {
                            "type": "string"
                        },
                        "stateId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "zipCode": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "State": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "stateCode": {
                            "type": "string"
                        },
                        "stateName": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "BankIdentificationType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "Wire": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseWire"
                },
                {
                    "type": "object",
                    "required": [
                        "completedApprovals",
                        "destinationCurrencyAmount",
                        "exchangeFee",
                        "totalCost",
                        "wireActionTypeEnum"
                    ],
                    "properties": {
                        "approvedBy": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TupleOfStringAndDateTime"
                            }
                        },
                        "completedApprovals": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdByUser": {
                            "$ref": "#/definitions/User"
                        },
                        "destinationCurrencyAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "eligibleApprovers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "errorSummary": {
                            "$ref": "#/definitions/ErrorSummary"
                        },
                        "exchangeFee": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "totalCost": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "updatedByUser": {
                            "$ref": "#/definitions/User"
                        },
                        "userPermissions": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "wireActionTypeEnum": {
                            "$ref": "#/definitions/WireActionTypeEnum"
                        },
                        "wireAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireAudit"
                            }
                        },
                        "wireQuotes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireQuote"
                            }
                        }
                    }
                }
            ]
        },
        "ErrorSummary": {
            "type": "object",
            "required": ["type"],
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ErrorDetail"
                    }
                },
                "summaryMessage": {
                    "type": "string"
                },
                "summaryMessageList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/definitions/ErrorType"
                }
            }
        },
        "ErrorDetail": {
            "type": "object",
            "required": ["type"],
            "properties": {
                "attributeName": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "messageList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Lookup"
                    }
                },
                "type": {
                    "$ref": "#/definitions/ErrorType"
                }
            }
        },
        "ErrorType": {
            "type": "integer",
            "description": "",
            "x-enumNames": ["Error", "Info", "Warning"],
            "enum": [0, 1, 2]
        },
        "WireActionTypeEnum": {
            "type": "integer",
            "description": "",
            "x-enumNames": [
                "Undefined",
                "New",
                "Modified",
                "Cancelled",
                "QuoteRequested",
                "QuoteAccepted",
                "QuoteRejected",
                "Approved",
                "Rejected",
                "Transmitted",
                "Expired",
                "Failed",
                "Posted"
            ],
            "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
        },
        "WireAudit": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["actionDate", "actionUserId", "id", "wireActionTypeId", "wireId"],
                    "properties": {
                        "actionDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "actionUserId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "comments": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "wire": {
                            "$ref": "#/definitions/Wire"
                        },
                        "wireActionType": {
                            "$ref": "#/definitions/WireActionType"
                        },
                        "wireActionTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "wireId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "WireActionType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "wireActionType1": {
                            "type": "string"
                        },
                        "wireAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireAudit"
                            }
                        }
                    }
                }
            ]
        },
        "WireQuote": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdBy",
                        "createdDate",
                        "destinationCurrencyAmount",
                        "exchangeFee",
                        "exchangeRate",
                        "expirationDate",
                        "id",
                        "quoteDate",
                        "quoteStatusTypeId",
                        "totalWireCost",
                        "usdAmount",
                        "updatedBy",
                        "updatedDate",
                        "wireFee"
                    ],
                    "properties": {
                        "amexContractNumber": {
                            "type": "string"
                        },
                        "amexQuoteId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "createdUser": {
                            "$ref": "#/definitions/User"
                        },
                        "debitAccountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "destinationCurrencyAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "destinationCurrencyCode": {
                            "type": "string"
                        },
                        "exchangeFee": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "exchangeRate": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "expirationDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionFxWireRatesheetId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "quoteDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "quoteStatusTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "totalWireCost": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "usdAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updatedUser": {
                            "$ref": "#/definitions/User"
                        },
                        "wire": {
                            "$ref": "#/definitions/Wire"
                        },
                        "wireFee": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "wireFeeCurCode": {
                            "type": "string"
                        },
                        "wireId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "wireQuoteStatusType": {
                            "$ref": "#/definitions/WireQuoteStatusType"
                        }
                    }
                }
            ]
        },
        "WireQuoteStatusType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "wireQuotes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireQuote"
                            }
                        }
                    }
                }
            ]
        },
        "BaseWire": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "amount",
                        "approvalCount",
                        "beneficiaryId",
                        "companyId",
                        "createdDate",
                        "debitAccountId",
                        "externallyProcessed",
                        "frequencyTypeId",
                        "id",
                        "isDliWire",
                        "isDomestic",
                        "updatedDate",
                        "wireCompanyId",
                        "wireStatusTypeId"
                    ],
                    "properties": {
                        "account": {
                            "$ref": "#/definitions/Account"
                        },
                        "additionalInformation": {
                            "type": "string"
                        },
                        "amount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "approvalCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "associatedWire": {
                            "$ref": "#/definitions/Wire"
                        },
                        "associatedWireId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "beneficiary": {
                            "$ref": "#/definitions/Beneficiary"
                        },
                        "beneficiaryDetails": {
                            "type": "string"
                        },
                        "beneficiaryId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "company": {
                            "$ref": "#/definitions/Company"
                        },
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "confirmationNumber": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "debitAccountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "destinationCurrencyCode": {
                            "type": "string"
                        },
                        "endDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "externallyProcessed": {
                            "type": "boolean"
                        },
                        "failureReason": {
                            "type": "string"
                        },
                        "firstRepeatOnDay": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "frequencyTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isDliWire": {
                            "type": "boolean"
                        },
                        "isDomestic": {
                            "type": "boolean"
                        },
                        "parentCompany": {
                            "$ref": "#/definitions/Company"
                        },
                        "paymentFrequencyType": {
                            "$ref": "#/definitions/PaymentFrequencyType"
                        },
                        "paymentId": {
                            "type": "string"
                        },
                        "purpose": {
                            "type": "string"
                        },
                        "referenceBeneficiary": {
                            "type": "string"
                        },
                        "referenceNumber": {
                            "type": "string"
                        },
                        "repeatOnLastBusinessDay": {
                            "type": "boolean"
                        },
                        "secondRepeatOnDay": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "startDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "valueDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "wireCompanyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "wireStatusType": {
                            "$ref": "#/definitions/WireStatusType"
                        },
                        "wireStatusTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "wireTemplate": {
                            "$ref": "#/definitions/WireTemplate"
                        },
                        "wireTemplateId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "PaymentFrequencyType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "schedules": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Schedule"
                            }
                        },
                        "wires": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Wire"
                            }
                        }
                    }
                }
            ]
        },
        "Schedule": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdDate",
                        "frequencyId",
                        "id",
                        "pauseSchedule",
                        "recycleJob",
                        "rowStatusId",
                        "scheduleSystemId",
                        "systemUniqueId",
                        "updatedDate"
                    ],
                    "properties": {
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "endDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "firstRepeatOn": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "frequencyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "importBatchId": {
                            "type": "string"
                        },
                        "institutionFiId": {
                            "type": "string"
                        },
                        "interval": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isWeekendIncluded": {
                            "type": "boolean"
                        },
                        "lastScheduled": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "pauseSchedule": {
                            "type": "boolean"
                        },
                        "paymentFrequencyType": {
                            "$ref": "#/definitions/PaymentFrequencyType"
                        },
                        "productType": {
                            "type": "string"
                        },
                        "recycleJob": {
                            "type": "boolean"
                        },
                        "repeatOnLastBusinessDay": {
                            "type": "boolean"
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "runningTime": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "scheduleName": {
                            "type": "string"
                        },
                        "scheduleSystem": {
                            "$ref": "#/definitions/ScheduleSystem"
                        },
                        "scheduleSystemId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "scheduledJobs": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScheduledJob"
                            }
                        },
                        "secondRepeatOn": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "startDateTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "systemUniqueId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "valueDateTime": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "ScheduleSystem": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "schedules": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Schedule"
                            }
                        }
                    }
                }
            ]
        },
        "ScheduledJob": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdDate",
                        "executionDateTime",
                        "id",
                        "jobStatusTypeId",
                        "scheduleId",
                        "updatedDate"
                    ],
                    "properties": {
                        "activityId": {
                            "type": "string",
                            "format": "guid"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "executionDateTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "frequencyTargetDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "jobStatusType": {
                            "$ref": "#/definitions/JobStatusType"
                        },
                        "jobStatusTypeId": {
                            "type": "integer",
                            "format": "byte"
                        },
                        "responseMessages": {
                            "type": "string"
                        },
                        "schedule": {
                            "$ref": "#/definitions/Schedule"
                        },
                        "scheduleId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "JobStatusType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "byte"
                        },
                        "name": {
                            "type": "string"
                        },
                        "scheduledJobs": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScheduledJob"
                            }
                        }
                    }
                }
            ]
        },
        "WireStatusType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "wires": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Wire"
                            }
                        }
                    }
                }
            ]
        },
        "WireTemplate": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "approvalCount",
                        "beneficiaryId",
                        "completedApprovals",
                        "createdBy",
                        "createdDate",
                        "debitAccountId",
                        "id",
                        "initiatedRecurringWire",
                        "isInternational",
                        "templateStatusTypeId",
                        "updatedBy",
                        "updatedDate",
                        "wireCompanyId"
                    ],
                    "properties": {
                        "approvalCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "approvedBy": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TupleOfStringAndDateTime"
                            }
                        },
                        "beneficiary": {
                            "$ref": "#/definitions/Beneficiary"
                        },
                        "beneficiaryId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "completedApprovals": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "debitAccount": {
                            "$ref": "#/definitions/Account"
                        },
                        "debitAccountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "eligibleApprovers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "errorSummary": {
                            "$ref": "#/definitions/ErrorSummary"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "initiatedRecurringWire": {
                            "type": "boolean"
                        },
                        "isInternational": {
                            "type": "boolean"
                        },
                        "notes": {
                            "type": "string"
                        },
                        "purpose": {
                            "type": "string"
                        },
                        "referenceBeneficiary": {
                            "type": "string"
                        },
                        "templateName": {
                            "type": "string"
                        },
                        "templateStatusType": {
                            "$ref": "#/definitions/WireTemplateStatusType"
                        },
                        "templateStatusTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updatedUser": {
                            "$ref": "#/definitions/User"
                        },
                        "userPermissions": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "wireCompany": {
                            "$ref": "#/definitions/Company"
                        },
                        "wireCompanyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "wireTemplateAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireTemplateAudit"
                            }
                        }
                    }
                }
            ]
        },
        "WireTemplateStatusType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "wireTemplates": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireTemplate"
                            }
                        }
                    }
                }
            ]
        },
        "WireTemplateAudit": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "actionDate",
                        "actionUserId",
                        "id",
                        "wireTemplateActionTypeId",
                        "wireTemplateId"
                    ],
                    "properties": {
                        "actionDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "actionUser": {
                            "$ref": "#/definitions/User"
                        },
                        "actionUserId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "wireTemplateActionType": {
                            "$ref": "#/definitions/WireTemplateActionType"
                        },
                        "wireTemplateActionTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "wireTemplateId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "WireTemplateActionType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "wireTemplateAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WireTemplateAudit"
                            }
                        }
                    }
                }
            ]
        },
        "InstitutionNotificationType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "desktopNotification",
                        "email",
                        "id",
                        "institutionId",
                        "isNotificationEnabled",
                        "isRequired",
                        "notificationTypeId",
                        "rowStatusId",
                        "textMessage",
                        "updatedDate"
                    ],
                    "properties": {
                        "desktopNotification": {
                            "type": "boolean"
                        },
                        "email": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isNotificationEnabled": {
                            "type": "boolean"
                        },
                        "isRequired": {
                            "type": "boolean"
                        },
                        "notificationGroup": {
                            "type": "string"
                        },
                        "notificationType": {
                            "$ref": "#/definitions/NotificationType"
                        },
                        "notificationTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "sortOrder": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "textMessage": {
                            "type": "boolean"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "NotificationType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "id",
                        "isActiveByDefault",
                        "notificationPriorityTypeId",
                        "notificationProductTypeId"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionNotificationTypes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionNotificationType"
                            }
                        },
                        "isActiveByDefault": {
                            "type": "boolean"
                        },
                        "name": {
                            "type": "string"
                        },
                        "notificationPriorityType": {
                            "$ref": "#/definitions/NotificationPriorityType"
                        },
                        "notificationPriorityTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "notificationProductType": {
                            "$ref": "#/definitions/NotificationProductType"
                        },
                        "notificationProductTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "notifications": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Notification"
                            }
                        },
                        "sortOrder": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "userNotificationTypes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserNotificationType"
                            }
                        }
                    }
                }
            ]
        },
        "NotificationPriorityType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "notificationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NotificationType"
                    }
                }
            }
        },
        "NotificationProductType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "notificationTypes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NotificationType"
                            }
                        }
                    }
                }
            ]
        },
        "Notification": {
            "type": "object",
            "required": [
                "createdDate",
                "id",
                "notificationTypeId",
                "notificationUniqueIdentifier",
                "showAlert",
                "userNotificationId"
            ],
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "createdDateFiLocalTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "notificationPayload": {
                    "type": "string"
                },
                "notificationType": {
                    "$ref": "#/definitions/NotificationType"
                },
                "notificationTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "notificationUniqueIdentifier": {
                    "type": "string",
                    "format": "guid"
                },
                "showAlert": {
                    "type": "boolean"
                },
                "userNotificationId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UserNotificationType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdDate",
                        "id",
                        "isDesktopRequired",
                        "isEmailRequired",
                        "isTextRequired",
                        "notificationTypeId",
                        "rowStatusId",
                        "updatedDate",
                        "userId"
                    ],
                    "properties": {
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "desktopNotification": {
                            "type": "boolean"
                        },
                        "email": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isDesktopAllowed": {
                            "type": "boolean"
                        },
                        "isDesktopRequired": {
                            "type": "boolean"
                        },
                        "isEmailAllowed": {
                            "type": "boolean"
                        },
                        "isEmailRequired": {
                            "type": "boolean"
                        },
                        "isTextAllowed": {
                            "type": "boolean"
                        },
                        "isTextRequired": {
                            "type": "boolean"
                        },
                        "notificationGroup": {
                            "type": "string"
                        },
                        "notificationType": {
                            "$ref": "#/definitions/NotificationType"
                        },
                        "notificationTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "sortOrder": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "textMessage": {
                            "type": "boolean"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "ResourceConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdDate",
                        "displayExternalWarning",
                        "id",
                        "institutionId",
                        "rowStatusId",
                        "updatedDate"
                    ],
                    "properties": {
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "displayExternalWarning": {
                            "type": "boolean"
                        },
                        "externalWarningMessage": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "link": {
                            "type": "string"
                        },
                        "logo": {
                            "type": "string",
                            "format": "byte"
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "sequence": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "title": {
                            "type": "string"
                        },
                        "tooltip": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "Role": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdDate",
                        "id",
                        "institutionId",
                        "roleTypeId",
                        "rowStatusId",
                        "updatedDate"
                    ],
                    "properties": {
                        "associatedClaims": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssociatedClaim"
                            }
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "roleType": {
                            "$ref": "#/definitions/RoleType"
                        },
                        "roleTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userRoles": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserRole"
                            }
                        }
                    }
                }
            ]
        },
        "RoleType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "roles": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Role"
                            }
                        }
                    }
                }
            ]
        },
        "UserRole": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id", "roleId", "startDate", "userId"],
                    "properties": {
                        "endDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "role": {
                            "$ref": "#/definitions/Role"
                        },
                        "roleId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "startDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "InstitutionAccountDisplaySetting": {
            "type": "object",
            "required": [
                "accountMaskTypeId",
                "allowOverrideMasking",
                "createdBy",
                "createdDate",
                "id",
                "showAccountName",
                "updatedBy",
                "updatedDate"
            ],
            "properties": {
                "accountMaskType": {
                    "$ref": "#/definitions/AccountMaskType"
                },
                "accountMaskTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "allowOverrideMasking": {
                    "type": "boolean"
                },
                "createdBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdByUser": {
                    "$ref": "#/definitions/User"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "institution": {
                    "$ref": "#/definitions/Institution2"
                },
                "showAccountName": {
                    "type": "boolean"
                },
                "updatedBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedByUser": {
                    "$ref": "#/definitions/User"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "AccountMaskType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "InstitutionAffiliation": {
            "type": "object",
            "required": [
                "affiliatedInstitutionId",
                "id",
                "institutionId",
                "updatedBy",
                "updatedDate"
            ],
            "properties": {
                "affiliatedInstitutionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "institutionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "InstitutionMessageCenter": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "archiveSettingId",
                        "id",
                        "updatedBy",
                        "updatedDate",
                        "useSharedEmail"
                    ],
                    "properties": {
                        "archiveSetting": {
                            "$ref": "#/definitions/ArchiveSetting2"
                        },
                        "archiveSettingId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "disclaimer": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "sharedEmail": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updatedUser": {
                            "$ref": "#/definitions/User"
                        },
                        "useSharedEmail": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "ArchiveSetting2": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "InstitutionNachaFileRecord": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "addendaRecordIndicator": {
                    "type": "string"
                },
                "blockingFactor": {
                    "type": "string"
                },
                "checkDigit": {
                    "type": "string"
                },
                "fileIdModifier": {
                    "type": "string"
                },
                "formatCode": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "immediateDestination": {
                    "type": "string"
                },
                "immediateDestinationName": {
                    "type": "string"
                },
                "immediateOrigin": {
                    "type": "string"
                },
                "immediateOriginName": {
                    "type": "string"
                },
                "institution": {
                    "$ref": "#/definitions/Institution2"
                },
                "originatingDfi": {
                    "type": "string"
                },
                "originatorStatusCode": {
                    "type": "string"
                },
                "priorityCode": {
                    "type": "string"
                },
                "receivingDfi": {
                    "type": "string"
                },
                "recordSize": {
                    "type": "string"
                }
            }
        },
        "InstitutionOobConfiguration": {
            "type": "object",
            "required": [
                "allowedOobChallengeFailureCount",
                "id",
                "oobChallengePinNeeded",
                "oobEnabled",
                "updatedDate"
            ],
            "properties": {
                "allowedOobChallengeFailureCount": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "institution": {
                    "$ref": "#/definitions/Institution2"
                },
                "oobChallengePinNeeded": {
                    "type": "boolean"
                },
                "oobEnabled": {
                    "type": "boolean"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "InstitutionTerm": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id", "requireAcceptance", "updatedDate"],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "requireAcceptance": {
                            "type": "boolean"
                        },
                        "termsAndConditions": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "InstitutionUserApprovalSetting": {
            "type": "object",
            "required": [
                "boUserRequireBoApproval",
                "chUserRequireBoApproval",
                "chUserRequireChApproval",
                "id",
                "updatedDate"
            ],
            "properties": {
                "boUserRequireBoApproval": {
                    "type": "boolean"
                },
                "chUserRequireBoApproval": {
                    "type": "boolean"
                },
                "chUserRequireChApproval": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "institution": {
                    "$ref": "#/definitions/Institution2"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "InstitutionWireInternationalWorkflowOverrides": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "allowAccountBalanceValidation",
                        "createdBy",
                        "createdDate",
                        "forceInternationalUsdViaForeignCurrencyWorkflow",
                        "id",
                        "rowStatusId",
                        "updatedBy",
                        "updatedDate",
                        "useExternalFxQuoteRatesheets",
                        "useExternalFxWireProcessing",
                        "useNonCoreWireCompanies"
                    ],
                    "properties": {
                        "allowAccountBalanceValidation": {
                            "type": "boolean"
                        },
                        "createdBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "forceInternationalUsdViaForeignCurrencyWorkflow": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "useExternalFxQuoteRatesheets": {
                            "type": "boolean"
                        },
                        "useExternalFxWireProcessing": {
                            "type": "boolean"
                        },
                        "useNonCoreWireCompanies": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "LoginConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "allowAlphabetsInLoginId",
                        "allowAlphabetsInPassword",
                        "allowLockedOutMessage",
                        "allowNumbersInLoginId",
                        "allowNumbersInPassword",
                        "allowSpecialCharactersInLoginId",
                        "allowSpecialCharactersInPassword",
                        "alphabetsInLoginIdAreRequired",
                        "alphabetsInPasswordAreRequired",
                        "id",
                        "institutionId",
                        "isCompany",
                        "isDefault",
                        "loginIdMaxLength",
                        "loginIdMinLength",
                        "numberOfAllowedAttemptsBeforeLock",
                        "numberOfLowercaseRequiredInLoginId",
                        "numberOfLowercaseRequiredInPassword",
                        "numberOfPrevUsedPasswords",
                        "numberOfUppercaseRequiredInLoginId",
                        "numberOfUppercaseRequiredInPassword",
                        "numbersInLoginIdAreRequired",
                        "numbersInPasswordAreRequired",
                        "passwordExpireInDays",
                        "passwordMaxLength",
                        "passwordMinLength",
                        "sendLockedEmail",
                        "sessionTimeoutMinutes",
                        "specialCharactersInLoginIdAreRequired",
                        "specialCharactersInPasswordAreRequired",
                        "updatedDate",
                        "warnPasswordExpireInDays",
                        "willPasswordExpire"
                    ],
                    "properties": {
                        "allowAlphabetsInLoginId": {
                            "type": "boolean"
                        },
                        "allowAlphabetsInPassword": {
                            "type": "boolean"
                        },
                        "allowLockedOutMessage": {
                            "type": "boolean"
                        },
                        "allowNumbersInLoginId": {
                            "type": "boolean"
                        },
                        "allowNumbersInPassword": {
                            "type": "boolean"
                        },
                        "allowSpecialCharactersInLoginId": {
                            "type": "boolean"
                        },
                        "allowSpecialCharactersInPassword": {
                            "type": "boolean"
                        },
                        "alphabetsInLoginIdAreRequired": {
                            "type": "boolean"
                        },
                        "alphabetsInPasswordAreRequired": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "invalidLoginIdPasswordMessage": {
                            "type": "string"
                        },
                        "isCompany": {
                            "type": "boolean"
                        },
                        "isDefault": {
                            "type": "boolean"
                        },
                        "lockedEmailMessage": {
                            "type": "string"
                        },
                        "lockedOutMessage": {
                            "type": "string"
                        },
                        "loginIdMaxLength": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "loginIdMinLength": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "numberOfAllowedAttemptsBeforeLock": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "numberOfLowercaseRequiredInLoginId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "numberOfLowercaseRequiredInPassword": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "numberOfPrevUsedPasswords": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "numberOfUppercaseRequiredInLoginId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "numberOfUppercaseRequiredInPassword": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "numbersInLoginIdAreRequired": {
                            "type": "boolean"
                        },
                        "numbersInPasswordAreRequired": {
                            "type": "boolean"
                        },
                        "passwordExpireInDays": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "passwordMaxLength": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "passwordMinLength": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "sendLockedEmail": {
                            "type": "boolean"
                        },
                        "sessionTimeoutMinutes": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "specialCharactersInLoginIdAreRequired": {
                            "type": "boolean"
                        },
                        "specialCharactersInPasswordAreRequired": {
                            "type": "boolean"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "warnPasswordExpireInDays": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "willPasswordExpire": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "TransactionCodeGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id", "institutionId", "isReadOnly", "updatedDate"],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isReadOnly": {
                            "type": "boolean"
                        },
                        "name": {
                            "type": "string"
                        },
                        "transactionCodeGroupAssociations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransactionCodeGroupAssociation"
                            }
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "TransactionCodeGroupAssociation": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdDate",
                        "id",
                        "transactionCodeGroupId",
                        "transactionCodeId"
                    ],
                    "properties": {
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "transactionCode": {
                            "$ref": "#/definitions/TransactionCode"
                        },
                        "transactionCodeGroup": {
                            "$ref": "#/definitions/TransactionCodeGroup"
                        },
                        "transactionCodeGroupId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "transactionCodeId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "TransactionCode": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "excluded",
                        "id",
                        "institutionId",
                        "isDeleted",
                        "isDescriptionChanged",
                        "isTypeChanged",
                        "updatedDate"
                    ],
                    "properties": {
                        "achTransactionCodes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchTransactionCode"
                            }
                        },
                        "baiCode": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "baiCodeType": {
                            "$ref": "#/definitions/BaiCodeType"
                        },
                        "changeStatus": {
                            "type": "string"
                        },
                        "code": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "excluded": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institution": {
                            "$ref": "#/definitions/Institution2"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isDeleted": {
                            "type": "boolean"
                        },
                        "isDescriptionChanged": {
                            "type": "boolean"
                        },
                        "isTypeChanged": {
                            "type": "boolean"
                        },
                        "transactionCodeGroupAssociations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransactionCodeGroupAssociation"
                            }
                        },
                        "type": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "AchTransactionCode": {
            "type": "object",
            "required": ["accountTypeId", "id", "transactionCodeId", "transactionTypeId"],
            "properties": {
                "accountType": {
                    "$ref": "#/definitions/AccountType"
                },
                "accountTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "transactionCode": {
                    "$ref": "#/definitions/TransactionCode"
                },
                "transactionCodeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "transactionType": {
                    "$ref": "#/definitions/TransactionType"
                },
                "transactionTypeId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TransactionType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "achBatchRecipients": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchBatchRecipient"
                            }
                        },
                        "achCompanies": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchCompany"
                            }
                        },
                        "achPaymentRecipients": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchPaymentRecipient"
                            }
                        },
                        "achTransactionCodes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchTransactionCode"
                            }
                        },
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "AchPaymentRecipient": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "accountTypeId",
                        "achPaymentId",
                        "amount",
                        "createdDate",
                        "hold",
                        "id",
                        "isRoutingNumberOnUs",
                        "isRoutingNumberValid",
                        "preNote",
                        "transactionTypeId",
                        "updatedDate"
                    ],
                    "properties": {
                        "accountNumber": {
                            "type": "string"
                        },
                        "accountType": {
                            "$ref": "#/definitions/AccountType"
                        },
                        "accountTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achMasterRecipientId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achPayment": {
                            "$ref": "#/definitions/AchPayment"
                        },
                        "achPaymentId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achPaymentRecipientAddendas": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchPaymentRecipientAddenda"
                            }
                        },
                        "addenda": {
                            "type": "string"
                        },
                        "amount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "hold": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isRoutingNumberOnUs": {
                            "type": "boolean"
                        },
                        "isRoutingNumberValid": {
                            "type": "boolean"
                        },
                        "preNote": {
                            "type": "boolean"
                        },
                        "recipientIdNumber": {
                            "type": "string"
                        },
                        "recipientName": {
                            "type": "string"
                        },
                        "routingNumber": {
                            "type": "string"
                        },
                        "rowNum": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "transactionType": {
                            "$ref": "#/definitions/TransactionType"
                        },
                        "transactionTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "AchPaymentRecipientAddenda": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "achPaymentId",
                        "achPaymentRecipientId",
                        "addendaTypeId",
                        "createdDate",
                        "id",
                        "updatedDate"
                    ],
                    "properties": {
                        "achPaymentId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achPaymentRecipient": {
                            "$ref": "#/definitions/AchPaymentRecipient"
                        },
                        "achPaymentRecipientId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "addenda": {
                            "type": "string"
                        },
                        "addendaType": {
                            "$ref": "#/definitions/AddendaType"
                        },
                        "addendaTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "rowNum": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "AddendaType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "BaiCodeType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["baiCode", "baiCodeTitleId", "isSelected"],
                    "properties": {
                        "baiCode": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "baiCodeTitleId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "description": {
                            "type": "string"
                        },
                        "isSelected": {
                            "type": "boolean"
                        },
                        "level": {
                            "type": "string"
                        },
                        "transactionType": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "InstitutionAchProduct": {
            "type": "object",
            "required": [
                "accountBalanceValidationConfiguredInCore",
                "achCompanyMatchTypeId",
                "allowFederalTaxPayments",
                "allowSameDayAch",
                "allowStateTaxPayments",
                "allowTaxPayments",
                "batchApprovalCount",
                "batchAuthenticationTypeId",
                "id",
                "internationalEnabled",
                "paymentApprovalCount",
                "paymentAuthenticationTypeId",
                "recipientApprovalCount",
                "updatedDate",
                "validateAccountBalance"
            ],
            "properties": {
                "accountBalanceValidationConfiguredInCore": {
                    "type": "boolean"
                },
                "achCompanyMatchType": {
                    "$ref": "#/definitions/AchCompanyMatchType"
                },
                "achCompanyMatchTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "allowFederalTaxPayments": {
                    "type": "boolean"
                },
                "allowSameDayAch": {
                    "type": "boolean"
                },
                "allowStateTaxPayments": {
                    "type": "boolean"
                },
                "allowTaxPayments": {
                    "type": "boolean"
                },
                "batchApprovalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "batchAuthenticationType": {
                    "$ref": "#/definitions/AuthenticationType"
                },
                "batchAuthenticationTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "copyInitiatedNachaFiles": {
                    "type": "boolean"
                },
                "daysInAdvance": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "institutionAchRoutings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InstitutionAchRouting"
                    }
                },
                "institutionAchSecCodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InstitutionAchSecCode"
                    }
                },
                "institutionProductType": {
                    "$ref": "#/definitions/InstitutionProductType"
                },
                "internationalEnabled": {
                    "type": "boolean"
                },
                "nachaFileUploadPath": {
                    "type": "string"
                },
                "paymentApprovalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "paymentAuthenticationType": {
                    "$ref": "#/definitions/AuthenticationType"
                },
                "paymentAuthenticationTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "paymentProcessingCompanyConfiguredInCore": {
                    "type": "boolean"
                },
                "recipientApprovalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "remoteServerHost": {
                    "type": "string"
                },
                "remoteServerPassword": {
                    "type": "string"
                },
                "remoteServerPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "remoteServerUserName": {
                    "type": "string"
                },
                "stateTaxCodesArchiveFile": {
                    "$ref": "#/definitions/FileArchive"
                },
                "stateTaxCodesArchiveFileId": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "validateAccountBalance": {
                    "type": "boolean"
                }
            }
        },
        "AchCompanyMatchType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionAchProducts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionAchProduct"
                            }
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "InstitutionAchRouting": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["createdDate", "id", "institutionProductTypeId", "startDate"],
                    "properties": {
                        "bankName": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "endDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionAchProduct": {
                            "$ref": "#/definitions/InstitutionAchProduct"
                        },
                        "institutionProductTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "routingNumber": {
                            "type": "string"
                        },
                        "startDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "InstitutionAchSecCode": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["achSecCodeId", "createdDate", "id", "institutionProductTypeId"],
                    "properties": {
                        "achSecCode": {
                            "$ref": "#/definitions/AchSecCode"
                        },
                        "achSecCodeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionAchProduct": {
                            "$ref": "#/definitions/InstitutionAchProduct"
                        },
                        "institutionProductTypeId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "InstitutionArpProduct": {
            "type": "object",
            "required": [
                "allowArpExceptionCorrections",
                "allowSubstituteProduct",
                "id",
                "manageAchExceptions",
                "showAchExceptions",
                "updatedDate",
                "workAchException",
                "workCheckException"
            ],
            "properties": {
                "allowArpExceptionCorrections": {
                    "type": "boolean"
                },
                "allowSubstituteProduct": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "institutionProductType": {
                    "$ref": "#/definitions/InstitutionProductType"
                },
                "manageAchExceptions": {
                    "type": "boolean"
                },
                "showAchExceptions": {
                    "type": "boolean"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "workAchException": {
                    "type": "boolean"
                },
                "workCheckException": {
                    "type": "boolean"
                }
            }
        },
        "InstitutionBillPayProduct": {
            "type": "object",
            "required": ["id", "updatedBy", "updatedDate"],
            "properties": {
                "billPayServiceName": {
                    "type": "string"
                },
                "billPayServiceUrl": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "institutionProductType": {
                    "$ref": "#/definitions/InstitutionProductType"
                },
                "landingPageUrl": {
                    "type": "string"
                },
                "navigationMode": {
                    "type": "integer",
                    "format": "int32"
                },
                "sharedKey": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "InstitutionElectronicDocuments": {
            "type": "object",
            "required": ["id", "monthlyFee", "updatedDate"],
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "electronicDocumentServiceName": {
                    "type": "string"
                },
                "electronicDocumentServiceUri": {
                    "type": "string"
                },
                "electronicDocumentType": {
                    "$ref": "#/definitions/ElectronicDocumentType"
                },
                "electronicDocumentTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "institutionProductType": {
                    "$ref": "#/definitions/InstitutionProductType"
                },
                "monthlyFee": {
                    "type": "number",
                    "format": "double"
                },
                "navigationMode": {
                    "type": "integer",
                    "format": "int32"
                },
                "sharedKey": {
                    "type": "string"
                },
                "showSsoFields": {
                    "type": "boolean"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ElectronicDocumentType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "institutionElectronicDocuments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InstitutionElectronicDocuments"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "InstitutionInternalTransferProduct": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["allowLoanPaymentPastDue", "id"],
                    "properties": {
                        "allowLoanPaymentPastDue": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionInternalTransferProductLinkAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionInternalTransferProductLinkAccount"
                            }
                        },
                        "institutionProductType": {
                            "$ref": "#/definitions/InstitutionProductType"
                        }
                    }
                }
            ]
        },
        "InstitutionInternalTransferProductLinkAccount": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdDate",
                        "fromAccountTypeId",
                        "id",
                        "institutionProductTypeId",
                        "toAccountTypeId"
                    ],
                    "properties": {
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "fromAccountTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionInternalTransferProduct": {
                            "$ref": "#/definitions/InstitutionInternalTransferProduct"
                        },
                        "institutionProductTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "toAccountTypeId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "InstitutionProductCutoffTime": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["endCutoffTime", "id", "institutionProductTypeId", "updatedDate"],
                    "properties": {
                        "blackoutPeriodEndTime": {
                            "type": "string",
                            "format": "duration"
                        },
                        "blackoutPeriodStartTime": {
                            "type": "string",
                            "format": "duration"
                        },
                        "cutoffTimeSubType": {
                            "$ref": "#/definitions/CutoffTimeSubType"
                        },
                        "cutoffTimeSubTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "endCutoffTime": {
                            "type": "string",
                            "format": "duration"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionProductType": {
                            "$ref": "#/definitions/InstitutionProductType"
                        },
                        "institutionProductTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "processingDayType": {
                            "$ref": "#/definitions/ProcessingDayType"
                        },
                        "processingDayTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "showInChannel": {
                            "type": "boolean"
                        },
                        "startCutoffTime": {
                            "type": "string",
                            "format": "duration"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "CutoffTimeSubType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "ProcessingDayType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionProductCutoffTimes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionProductCutoffTime"
                            }
                        },
                        "processingDay": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "InstitutionReportingConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "hasBai",
                        "hasCsv",
                        "hasDownload",
                        "hasEmail",
                        "hasPdf",
                        "hasQuickBooks",
                        "hasQuicken",
                        "hasTiff",
                        "hasWord",
                        "id",
                        "institutionProductTypeId",
                        "standardReportId",
                        "supportsBai",
                        "updatedDate"
                    ],
                    "properties": {
                        "hasBai": {
                            "type": "boolean"
                        },
                        "hasCsv": {
                            "type": "boolean"
                        },
                        "hasDownload": {
                            "type": "boolean"
                        },
                        "hasEmail": {
                            "type": "boolean"
                        },
                        "hasPdf": {
                            "type": "boolean"
                        },
                        "hasQuickBooks": {
                            "type": "boolean"
                        },
                        "hasQuicken": {
                            "type": "boolean"
                        },
                        "hasTiff": {
                            "type": "boolean"
                        },
                        "hasWord": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionProductType": {
                            "$ref": "#/definitions/InstitutionProductType"
                        },
                        "institutionProductTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "standardReportId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "supportsBai": {
                            "type": "boolean"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "InstitutionReportingProduct": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["channelMobile", "channelTablet", "channelWeb", "id"],
                    "properties": {
                        "channelMobile": {
                            "type": "boolean"
                        },
                        "channelTablet": {
                            "type": "boolean"
                        },
                        "channelWeb": {
                            "type": "boolean"
                        },
                        "exportFormats": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportExportFormat"
                            }
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionProductType": {
                            "$ref": "#/definitions/InstitutionProductType"
                        }
                    }
                }
            ]
        },
        "ReportExportFormat": {
            "type": "object",
            "required": ["isConfigured"],
            "properties": {
                "isConfigured": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "InstitutionSsoProduct": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "id",
                        "institutionProductTypeId",
                        "rowStatusId",
                        "ssoLoginSystemId",
                        "updatedBy",
                        "updatedDate"
                    ],
                    "properties": {
                        "clientId": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionProductType": {
                            "$ref": "#/definitions/InstitutionProductType"
                        },
                        "institutionProductTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "landingPageUrl": {
                            "type": "string"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "serviceUrl": {
                            "type": "string"
                        },
                        "sharedEncryptionInitializationVector": {
                            "type": "string"
                        },
                        "sharedEncryptionKey": {
                            "type": "string"
                        },
                        "ssoLoginSystem": {
                            "$ref": "#/definitions/SsoLoginSystem"
                        },
                        "ssoLoginSystemId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            ]
        },
        "SsoLoginSystem": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["ssoLoginSystemId"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "institutionSsoProducts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionSsoProduct"
                            }
                        },
                        "name": {
                            "type": "string"
                        },
                        "ssoLoginSystemId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "userSsoLogins": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserSsoLogin"
                            }
                        }
                    }
                }
            ]
        },
        "UserSsoLogin": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "rowStatusId",
                        "ssoLoginSystemId",
                        "updatedBy",
                        "updatedDate",
                        "userId",
                        "userSsoLoginId"
                    ],
                    "properties": {
                        "rowStatusId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "ssoAccessKey": {
                            "type": "string"
                        },
                        "ssoLoginId": {
                            "type": "string"
                        },
                        "ssoLoginSystem": {
                            "$ref": "#/definitions/SsoLoginSystem"
                        },
                        "ssoLoginSystemId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "userSsoLoginId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "InstitutionStopPayment": {
            "type": "object",
            "required": ["approvalCount", "feePerRequest", "id", "updatedDate"],
            "properties": {
                "approvalCount": {
                    "type": "integer"
                },
                "feePerRequest": {
                    "type": "number",
                    "format": "double"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "institutionProductType": {
                    "$ref": "#/definitions/InstitutionProductType"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "InstitutionWireInternationalProduct": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "beneficiaryApprovalCount",
                        "dailyLimit",
                        "id",
                        "internationalUsdReadOnly",
                        "outgoingSettlementTypeId",
                        "paymentApprovalCount",
                        "paymentApprovalType",
                        "requirePaymentPurpose",
                        "updatedBy",
                        "updatedDate",
                        "wireTraditionalInternationalEnabled",
                        "wireUsdEnabled"
                    ],
                    "properties": {
                        "beneficiaryApprovalCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "dailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "fxClientId": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionProductType": {
                            "$ref": "#/definitions/InstitutionProductType"
                        },
                        "institutionWirePaymentApprovalSettings": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionWirePaymentApprovalSetting"
                            }
                        },
                        "internationalUsdReadOnly": {
                            "type": "boolean"
                        },
                        "outgoingSettlementTypeId": {
                            "type": "integer",
                            "format": "byte"
                        },
                        "paymentApprovalCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "paymentApprovalType": {
                            "type": "integer",
                            "format": "byte"
                        },
                        "requirePaymentPurpose": {
                            "type": "boolean"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updatedUser": {
                            "$ref": "#/definitions/User"
                        },
                        "validateAccountBalance": {
                            "type": "boolean"
                        },
                        "wireSettlementAccount": {
                            "type": "string"
                        },
                        "wireTraditionalInternationalEnabled": {
                            "type": "boolean"
                        },
                        "wireUsdEnabled": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "InstitutionWirePaymentApprovalSetting": {
            "type": "object",
            "required": [
                "approvalCount",
                "id",
                "institutionProductTypeId",
                "startAmount",
                "updatedBy",
                "updatedDate"
            ],
            "properties": {
                "approvalCount": {
                    "type": "integer",
                    "format": "byte"
                },
                "endAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "institutionProductType": {
                    "$ref": "#/definitions/InstitutionProductType"
                },
                "institutionProductTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "startAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "updatedBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "InstitutionWireProduct": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "beneficiaryApprovalCount",
                        "dailyLimit",
                        "id",
                        "internationalEnabled",
                        "limitFutureDateEnabled",
                        "paymentApprovalCount",
                        "updatedBy",
                        "updatedDate",
                        "wireDliInternationalEnabled"
                    ],
                    "properties": {
                        "beneficiaryApprovalCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "beneficiaryAuthenticationType": {
                            "$ref": "#/definitions/AuthenticationType"
                        },
                        "beneficiaryAuthenticationTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "dailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionProductType": {
                            "$ref": "#/definitions/InstitutionProductType"
                        },
                        "institutionWirePaymentApprovalSettings": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InstitutionWirePaymentApprovalSetting"
                            }
                        },
                        "internationalEnabled": {
                            "type": "boolean"
                        },
                        "limitFutureDateEnabled": {
                            "type": "boolean"
                        },
                        "maximumFutureDays": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "paymentApprovalCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "paymentApprovalType": {
                            "type": "integer",
                            "format": "byte"
                        },
                        "paymentAuthenticationType": {
                            "$ref": "#/definitions/AuthenticationType"
                        },
                        "paymentAuthenticationTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "requirePaymentPurpose": {
                            "type": "boolean"
                        },
                        "templateApprovalCount": {
                            "type": "integer",
                            "format": "byte"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updatedUser": {
                            "$ref": "#/definitions/User"
                        },
                        "wireDliInternationalEnabled": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "UserType1": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "users": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            ]
        },
        "FavoriteReport": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id", "reportingFilterId", "userId"],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "reportingFilter": {
                            "$ref": "#/definitions/ReportingFilter"
                        },
                        "reportingFilterId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "ReportingFilter": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "id",
                        "isAscendingSort",
                        "isFavorite",
                        "isStandardReport",
                        "updatedDate"
                    ],
                    "properties": {
                        "accountTypes": {
                            "type": "string"
                        },
                        "amountOperator": {
                            "type": "string"
                        },
                        "companyUniqueId": {
                            "type": "string"
                        },
                        "dateType": {
                            "type": "string"
                        },
                        "favoriteReports": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FavoriteReport"
                            }
                        },
                        "fromAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "fromDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "fromPaymentId": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isAscendingSort": {
                            "type": "boolean"
                        },
                        "isFavorite": {
                            "type": "boolean"
                        },
                        "isStandardReport": {
                            "type": "boolean"
                        },
                        "name": {
                            "type": "string"
                        },
                        "owner": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "paymentIdOperator": {
                            "type": "string"
                        },
                        "paymentTypes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FilterPaymentType"
                            }
                        },
                        "postedTransactions": {
                            "type": "boolean"
                        },
                        "priorDays": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "reportType": {
                            "type": "string"
                        },
                        "reportingBalanceFilter": {
                            "$ref": "#/definitions/ReportingBalanceFilter"
                        },
                        "reportingConfigurations": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportingConfiguration"
                            }
                        },
                        "reportingFilter1": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportingFilter"
                            }
                        },
                        "reportingFilter2": {
                            "$ref": "#/definitions/ReportingFilter"
                        },
                        "reportingFilterAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportingFilterAccount"
                            }
                        },
                        "reportingFilterPaymentTypes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportingFilterPaymentType"
                            }
                        },
                        "reportingFilterSorts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportingFilterSort"
                            }
                        },
                        "reportingTransactionFilter": {
                            "$ref": "#/definitions/ReportingTransactionFilter"
                        },
                        "sequence": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "sortBy": {
                            "type": "string"
                        },
                        "specificDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "standardReportTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "toAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "toDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "toPaymentId": {
                            "type": "string"
                        },
                        "transactionDirection": {
                            "type": "string"
                        },
                        "transactionType": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            ]
        },
        "FilterPaymentType": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "ReportingBalanceFilter": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "reportingFilter": {
                            "$ref": "#/definitions/ReportingFilter"
                        }
                    }
                }
            ]
        },
        "ReportingConfiguration": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "hasBai",
                        "hasCsv",
                        "hasDownload",
                        "hasEmail",
                        "hasPdf",
                        "hasQuickBooks",
                        "hasQuicken",
                        "hasTiff",
                        "hasWord",
                        "id",
                        "productId",
                        "standardReportId",
                        "updatedDate"
                    ],
                    "properties": {
                        "hasBai": {
                            "type": "boolean"
                        },
                        "hasCsv": {
                            "type": "boolean"
                        },
                        "hasDownload": {
                            "type": "boolean"
                        },
                        "hasEmail": {
                            "type": "boolean"
                        },
                        "hasPdf": {
                            "type": "boolean"
                        },
                        "hasQuickBooks": {
                            "type": "boolean"
                        },
                        "hasQuicken": {
                            "type": "boolean"
                        },
                        "hasTiff": {
                            "type": "boolean"
                        },
                        "hasWord": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "product": {
                            "$ref": "#/definitions/Product"
                        },
                        "productId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "reportingFilter": {
                            "$ref": "#/definitions/ReportingFilter"
                        },
                        "standardReportId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "ReportingFilterAccount": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["accountId", "id", "reportingFilterId", "updatedDate"],
                    "properties": {
                        "account": {
                            "$ref": "#/definitions/Account"
                        },
                        "accountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "reportingFilter": {
                            "$ref": "#/definitions/ReportingFilter"
                        },
                        "reportingFilterId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "ReportingFilterPaymentType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id", "reportingFilterId", "updatedDate"],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "paymentType": {
                            "type": "string"
                        },
                        "reportingFilter": {
                            "$ref": "#/definitions/ReportingFilter"
                        },
                        "reportingFilterId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "ReportingFilterSort": {
            "type": "object",
            "required": [
                "createdDate",
                "id",
                "reportingFilterId",
                "sequence",
                "updatedDate",
                "userId"
            ],
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "reportingFilter": {
                    "$ref": "#/definitions/ReportingFilter"
                },
                "reportingFilterId": {
                    "type": "integer",
                    "format": "int32"
                },
                "sequence": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportingTransactionFilter": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "amountOperator": {
                            "type": "string"
                        },
                        "fromAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "fromPaymentId": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "paymentIdOperator": {
                            "type": "string"
                        },
                        "reportingFilter": {
                            "$ref": "#/definitions/ReportingFilter"
                        },
                        "toAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "toPaymentId": {
                            "type": "string"
                        },
                        "transactionDirection": {
                            "type": "string"
                        },
                        "transactionType": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "TextMessagingCarrier": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["active", "id", "updatedDate"],
                    "properties": {
                        "active": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "providerId": {
                            "type": "string"
                        },
                        "serviceId": {
                            "type": "string"
                        },
                        "serviceTypeId": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "PendingEditStatus": {
            "type": "integer",
            "description": "",
            "x-enumNames": ["Edited", "Pending", "Approved", "Discard", "Rejected", "FiPending"],
            "enum": [1, 2, 3, 4, 5, 6]
        },
        "UserAccountGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["createdDate", "id", "sequency", "updatedDate", "userId"],
                    "properties": {
                        "accountGroupName": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "sequency": {
                            "type": "integer",
                            "format": "byte"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userAccountGroupAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserAccountGroupAccount"
                            }
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "UserAccountGroupAccount": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "accountId",
                        "createdDate",
                        "id",
                        "sequence",
                        "userAccountGroupId"
                    ],
                    "properties": {
                        "account": {
                            "$ref": "#/definitions/Account"
                        },
                        "accountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "sequence": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "userAccountGroup": {
                            "$ref": "#/definitions/UserAccountGroup"
                        },
                        "userAccountGroupId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "UserAccount": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["accountId", "createdDate", "id", "userId"],
                    "properties": {
                        "account": {
                            "$ref": "#/definitions/Account"
                        },
                        "accountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userAccountLimits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserAccountLimit"
                            }
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "UserAccountLimit": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdDate",
                        "dailyLimit",
                        "id",
                        "perTransactionLimit",
                        "productTypeId",
                        "updatedDate",
                        "userAccountId"
                    ],
                    "properties": {
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "dailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "perTransactionLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "productType": {
                            "$ref": "#/definitions/ProductType"
                        },
                        "productTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userAccount": {
                            "$ref": "#/definitions/UserAccount"
                        },
                        "userAccountId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "UserAchCompany": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["achCompanyId", "createdDate", "id", "updatedDate", "userId"],
                    "properties": {
                        "achCompany": {
                            "$ref": "#/definitions/AchCompany"
                        },
                        "achCompanyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "dailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "perTransactionLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "UserAudit": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["createdDate", "id", "updatedDate", "userId"],
                    "properties": {
                        "comment": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "UserDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id", "keyCreatedDate", "keyLastUsedDate", "userId"],
                    "properties": {
                        "authenticationId": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "key": {
                            "type": "string"
                        },
                        "keyCreatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "keyLastUsedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "UserIpAccessSetting": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["createdBy", "createdDate", "updatedBy", "updatedDate", "userId"],
                    "properties": {
                        "createdBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "restricted": {
                            "type": "boolean"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "UserIpAccess": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdBy",
                        "createdDate",
                        "id",
                        "updatedBy",
                        "updatedDate",
                        "userId"
                    ],
                    "properties": {
                        "createdBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "ipAddress": {
                            "type": "string"
                        },
                        "nickname": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "UserNotification": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdDate",
                        "id",
                        "isEmailSent",
                        "isRead",
                        "isTextMessageSent",
                        "notificationId",
                        "notificationStatusTypeId",
                        "updatedDate",
                        "userId"
                    ],
                    "properties": {
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isEmailSent": {
                            "type": "boolean"
                        },
                        "isRead": {
                            "type": "boolean"
                        },
                        "isTextMessageSent": {
                            "type": "boolean"
                        },
                        "notification": {
                            "$ref": "#/definitions/Notification"
                        },
                        "notificationId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "notificationStatusType": {
                            "$ref": "#/definitions/NotificationStatusType"
                        },
                        "notificationStatusTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "NotificationStatusType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "UserOobDetail": {
            "type": "object",
            "required": [
                "createdDate",
                "id",
                "isLocked",
                "isOobPinCollected",
                "needCollection",
                "preferredOobValidationModeId",
                "updatedDate"
            ],
            "properties": {
                "audioPhoneNumber": {
                    "type": "string"
                },
                "challengePin": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "isLocked": {
                    "type": "boolean"
                },
                "isOobPinCollected": {
                    "type": "boolean"
                },
                "localSuspendEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "needCollection": {
                    "type": "boolean"
                },
                "oobAuthCount": {
                    "type": "integer"
                },
                "oobValidationMode": {
                    "$ref": "#/definitions/OobValidationMode"
                },
                "preferredOobValidationModeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "remindMeCount": {
                    "type": "integer"
                },
                "smsPhoneNumber": {
                    "type": "string"
                },
                "suspendEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "UserPasswordHistory": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["createdDate", "id", "userId"],
                    "properties": {
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "password": {
                            "type": "string"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "UserProductLimit": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["createdDate", "id", "productId", "updatedDate", "userId"],
                    "properties": {
                        "approvalLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "initiationLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "product": {
                            "$ref": "#/definitions/Product"
                        },
                        "productId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "UserSecureTokenSecurity": {
            "type": "object",
            "required": [
                "createdDate",
                "id",
                "isLocked",
                "needCollection",
                "remindMeCount",
                "tokenAuthFailureCount",
                "updatedDate"
            ],
            "properties": {
                "challengePin": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "isLocked": {
                    "type": "boolean"
                },
                "localSuspendEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "needCollection": {
                    "type": "boolean"
                },
                "remindMeCount": {
                    "type": "integer"
                },
                "suspendEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "tokenAuthFailureCount": {
                    "type": "integer"
                },
                "tokenCredentialId": {
                    "type": "string"
                },
                "tokenVendorUserId": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "UserTimeAccessSetting": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["createdBy", "createdDate", "updatedBy", "updatedDate", "userId"],
                    "properties": {
                        "createdBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "restricted": {
                            "type": "boolean"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "UserTimeAccess3": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdBy",
                        "createdDate",
                        "dayOfWeekId",
                        "id",
                        "updatedBy",
                        "updatedDate",
                        "userId",
                        "userTimeAccessTypeId"
                    ],
                    "properties": {
                        "createdBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "dayOfWeekId": {
                            "type": "integer"
                        },
                        "endTime": {
                            "type": "string",
                            "format": "duration"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "startTime": {
                            "type": "string",
                            "format": "duration"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "$ref": "#/definitions/User"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "userTimeAccessTypeId": {
                            "type": "integer"
                        }
                    }
                }
            ]
        },
        "UserWidget": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdDate",
                        "height",
                        "id",
                        "positionLeft",
                        "positionTop",
                        "updatedDate",
                        "userId",
                        "widgetId",
                        "width"
                    ],
                    "properties": {
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "height": {
                            "type": "integer"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "positionLeft": {
                            "type": "integer"
                        },
                        "positionTop": {
                            "type": "integer"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "widget": {
                            "$ref": "#/definitions/Widget"
                        },
                        "widgetId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "width": {
                            "type": "integer"
                        }
                    }
                }
            ]
        },
        "Widget": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "hasPermission",
                        "id",
                        "institutionId",
                        "isFullScreenAllowed",
                        "isPermissionRequired",
                        "isRequired",
                        "isResizable"
                    ],
                    "properties": {
                        "defaultContent": {
                            "type": "string"
                        },
                        "defaultHeight": {
                            "type": "integer"
                        },
                        "defaultLeft": {
                            "type": "integer"
                        },
                        "defaultTop": {
                            "type": "integer"
                        },
                        "defaultWidth": {
                            "type": "integer"
                        },
                        "description": {
                            "type": "string"
                        },
                        "hasPermission": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "imageUrl": {
                            "type": "string"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isFullScreenAllowed": {
                            "type": "boolean"
                        },
                        "isPermissionRequired": {
                            "type": "boolean"
                        },
                        "isRequired": {
                            "type": "boolean"
                        },
                        "isResizable": {
                            "type": "boolean"
                        },
                        "maxHeight": {
                            "type": "integer"
                        },
                        "maxWidth": {
                            "type": "integer"
                        },
                        "minHeight": {
                            "type": "integer"
                        },
                        "minWidth": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        },
                        "permissionMessage": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        },
                        "userWidgets": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserWidget"
                            }
                        }
                    }
                }
            ]
        },
        "BatchBalanceType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "achCompanies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AchCompany"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "AchFederalTaxPayment": {
            "type": "object",
            "required": [
                "createdDate",
                "id",
                "payFromAccountId",
                "recipientAccountTypeId",
                "taxPeriodEndDate",
                "updatedDate"
            ],
            "properties": {
                "achFederalTaxPaymentAmounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AchFederalTaxPaymentAmount"
                    }
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "payFromAccount": {
                    "$ref": "#/definitions/Account"
                },
                "payFromAccountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "recipientAccountNumber": {
                    "type": "string"
                },
                "recipientAccountType": {
                    "$ref": "#/definitions/AccountType"
                },
                "recipientAccountTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "recipientIdNumber": {
                    "type": "string"
                },
                "recipientName": {
                    "type": "string"
                },
                "recipientRoutingNumber": {
                    "type": "string"
                },
                "taxCode": {
                    "type": "string"
                },
                "taxPayerId": {
                    "type": "string"
                },
                "taxPeriodEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "AchFederalTaxPaymentAmount": {
            "type": "object",
            "required": ["achPaymentId", "amount", "createdDate", "id", "updatedDate"],
            "properties": {
                "achFederalAmountType": {
                    "$ref": "#/definitions/AchFederalAmountType"
                },
                "achFederalAmountTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "achPaymentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number",
                    "format": "decimal"
                },
                "amountType": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "AchFederalAmountType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "amountType": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AchNachaFileCopyAudit": {
            "type": "object",
            "required": [
                "<AchPaymentId>k__BackingField",
                "<AchPayment>k__BackingField",
                "<CreatedByUser>k__BackingField",
                "<CreatedBy>k__BackingField",
                "<CreatedDate>k__BackingField",
                "<FileCopyStatus>k__BackingField",
                "<Id>k__BackingField",
                "<Message>k__BackingField",
                "<NachaFileName>k__BackingField"
            ],
            "properties": {
                "<AchPaymentId>k__BackingField": {
                    "type": "integer",
                    "format": "int32"
                },
                "<AchPayment>k__BackingField": {
                    "$ref": "#/definitions/AchPayment"
                },
                "<CreatedByUser>k__BackingField": {
                    "$ref": "#/definitions/User"
                },
                "<CreatedBy>k__BackingField": {
                    "type": "integer",
                    "format": "int32"
                },
                "<CreatedDate>k__BackingField": {
                    "type": "string",
                    "format": "date-time"
                },
                "<FileCopyStatus>k__BackingField": {
                    "type": "string"
                },
                "<Id>k__BackingField": {
                    "type": "integer",
                    "format": "int32"
                },
                "<Message>k__BackingField": {
                    "type": "string"
                },
                "<NachaFileName>k__BackingField": {
                    "type": "string"
                }
            }
        },
        "AchPaymentType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "AchStateTaxPayment": {
            "type": "object",
            "required": [
                "createdDate",
                "id",
                "payFromAccountId",
                "recipientAccountTypeId",
                "taxPeriodEndDate",
                "updatedDate"
            ],
            "properties": {
                "achStateTaxPaymentAmounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AchStateTaxPaymentAmount"
                    }
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "payFromAccount": {
                    "$ref": "#/definitions/Account"
                },
                "payFromAccountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "recipientAccountNumber": {
                    "type": "string"
                },
                "recipientAccountType": {
                    "$ref": "#/definitions/AccountType"
                },
                "recipientAccountTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "recipientIdNumber": {
                    "type": "string"
                },
                "recipientName": {
                    "type": "string"
                },
                "recipientRoutingNumber": {
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/State"
                },
                "stateId": {
                    "type": "integer",
                    "format": "int32"
                },
                "taxCode": {
                    "type": "string"
                },
                "taxPayerId": {
                    "type": "string"
                },
                "taxPeriodEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "AchStateTaxPaymentAmount": {
            "type": "object",
            "required": [
                "achPaymentId",
                "achStateAmountTypeId",
                "amount",
                "createdDate",
                "id",
                "updatedDate"
            ],
            "properties": {
                "achPaymentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "achStateAmountType": {
                    "$ref": "#/definitions/AchStateAmountType"
                },
                "achStateAmountTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number",
                    "format": "decimal"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "AchStateAmountType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "amountType": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AchStatusType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "BatchStatusType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "achBatches": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AchBatch"
                            }
                        },
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "AchBatchRecipientAddenda": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "achBatchRecipientId",
                        "addendaTypeId",
                        "createdDate",
                        "id",
                        "updatedDate"
                    ],
                    "properties": {
                        "achBatchId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "achBatchRecipient": {
                            "$ref": "#/definitions/AchBatchRecipient"
                        },
                        "achBatchRecipientId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "addenda": {
                            "type": "string"
                        },
                        "addendaType": {
                            "$ref": "#/definitions/AddendaType"
                        },
                        "addendaTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "rowNum": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "InternalTransferProduct": {
            "type": "object",
            "required": ["allowLoanPaymentPastDue", "id"],
            "properties": {
                "allowLoanPaymentPastDue": {
                    "type": "boolean"
                },
                "approvalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "authenticationTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "dailyLimit": {
                    "type": "number",
                    "format": "decimal"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "internalTransferProductLinkAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InternalTransferProductLinkAccount"
                    }
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "templateApprovalCount": {
                    "type": "integer",
                    "format": "byte"
                }
            }
        },
        "WireInternationalProduct": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "beneficiaryApprovalCount",
                        "dailyLimit",
                        "id",
                        "internationalUsd",
                        "internationalUsdReadOnly",
                        "paymentApprovalCount",
                        "paymentApprovalType",
                        "requirePaymentPurpose",
                        "updatedBy",
                        "updatedDate",
                        "wireUsdEnabled"
                    ],
                    "properties": {
                        "beneficiaryApprovalCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "dailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "internationalUsd": {
                            "type": "boolean"
                        },
                        "internationalUsdReadOnly": {
                            "type": "boolean"
                        },
                        "paymentApprovalCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "paymentApprovalType": {
                            "type": "integer",
                            "format": "byte"
                        },
                        "product": {
                            "$ref": "#/definitions/Product"
                        },
                        "requirePaymentPurpose": {
                            "type": "boolean"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updatedUser": {
                            "$ref": "#/definitions/User"
                        },
                        "validateAccountBalance": {
                            "type": "boolean"
                        },
                        "wirePaymentApprovalSettings": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WirePaymentApprovalSetting"
                            }
                        },
                        "wireUsdEnabled": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "WirePaymentApprovalSetting": {
            "type": "object",
            "required": [
                "approvalCount",
                "id",
                "productId",
                "startAmount",
                "updatedBy",
                "updatedDate"
            ],
            "properties": {
                "approvalCount": {
                    "type": "integer",
                    "format": "byte"
                },
                "endAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "productId": {
                    "type": "integer",
                    "format": "int32"
                },
                "startAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "updatedBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "wireProduct": {
                    "$ref": "#/definitions/WireProduct"
                }
            }
        },
        "WireProduct": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "beneficiaryApprovalCount",
                        "beneficiaryAuthenticationTypeId",
                        "dailyLimit",
                        "farthestWireExistInDays",
                        "id",
                        "internationalEnabled",
                        "internationalUsdReadOnly",
                        "isCompanyDliUsdEnabled",
                        "isCompanyWireProductEnabled",
                        "isDliCompanyProductEnabled",
                        "isFiDliProductEnabled",
                        "isFiDliUsdEnabled",
                        "isFiInternationalEnabled",
                        "isFiWireProductEnabled",
                        "isInternationalUsdEnabled",
                        "limitFutureDateEnabled",
                        "paymentApprovalCount",
                        "paymentAuthenticationTypeId",
                        "requirePaymentPurposeDli",
                        "updatedBy",
                        "updatedDate"
                    ],
                    "properties": {
                        "beneficiaryApprovalCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "beneficiaryAuthenticationTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "dailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "farthestWireExistInDays": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "internationalEnabled": {
                            "type": "boolean"
                        },
                        "internationalUsdReadOnly": {
                            "type": "boolean"
                        },
                        "isCompanyDliUsdEnabled": {
                            "type": "boolean"
                        },
                        "isCompanyWireProductEnabled": {
                            "type": "boolean"
                        },
                        "isDliCompanyProductEnabled": {
                            "type": "boolean"
                        },
                        "isFiDliProductEnabled": {
                            "type": "boolean"
                        },
                        "isFiDliUsdEnabled": {
                            "type": "boolean"
                        },
                        "isFiInternationalEnabled": {
                            "type": "boolean"
                        },
                        "isFiWireProductEnabled": {
                            "type": "boolean"
                        },
                        "isInternationalUsdEnabled": {
                            "type": "boolean"
                        },
                        "limitFutureDateEnabled": {
                            "type": "boolean"
                        },
                        "maximumFutureDays": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "paymentApprovalCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "paymentApprovalType": {
                            "type": "integer",
                            "format": "byte"
                        },
                        "paymentAuthenticationTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "product": {
                            "$ref": "#/definitions/Product"
                        },
                        "requirePaymentPurpose": {
                            "type": "boolean"
                        },
                        "requirePaymentPurposeDli": {
                            "type": "boolean"
                        },
                        "templateApprovalCount": {
                            "type": "integer",
                            "format": "byte"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updatedUser": {
                            "$ref": "#/definitions/User"
                        },
                        "wirePaymentApprovalSettings": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WirePaymentApprovalSetting"
                            }
                        }
                    }
                }
            ]
        },
        "ArpExceptionCorrection": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["accountId", "amount", "arpExceptionId", "createdDate", "id"],
                    "properties": {
                        "account": {
                            "$ref": "#/definitions/Account"
                        },
                        "accountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "amount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "arpException": {
                            "$ref": "#/definitions/ArpException"
                        },
                        "arpExceptionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "checkNumber": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "issuedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "payee": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "ArpException": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["accountId", "createdDate", "id", "isDebit"],
                    "properties": {
                        "account": {
                            "$ref": "#/definitions/Account"
                        },
                        "accountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "activityIntentKey": {
                            "type": "string"
                        },
                        "arpDecision": {
                            "$ref": "#/definitions/ArpDecision"
                        },
                        "arpDecisionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "arpExceptionCorrections": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ArpExceptionCorrection"
                            }
                        },
                        "checkImageNumber": {
                            "type": "string"
                        },
                        "checkNumber": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "ddaBatchNumber": {
                            "type": "string"
                        },
                        "ddaSequenceNumber": {
                            "type": "string"
                        },
                        "decisionDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "fromworkStation": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isDebit": {
                            "type": "boolean"
                        },
                        "issuedAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "issuedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "paidAmount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "payee": {
                            "type": "string"
                        },
                        "posPayItemId": {
                            "type": "string"
                        },
                        "protected": {
                            "type": "string"
                        },
                        "reason": {
                            "type": "string"
                        },
                        "sourceOfEntry": {
                            "type": "string"
                        },
                        "transactionId": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "ArpDecision": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "InternalTransferTransaction": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "amount",
                        "companyId",
                        "completedApprovals",
                        "createdDate",
                        "fromAccountId",
                        "id",
                        "internalTransferStatusTypeId",
                        "isEdited",
                        "lastEditedDate",
                        "paymentFrequencyTypeId",
                        "submittedToScheduler",
                        "toAccountId",
                        "updatedDate"
                    ],
                    "properties": {
                        "amount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "approvedBy": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TupleOfStringAndDateTime"
                            }
                        },
                        "batchId": {
                            "type": "string"
                        },
                        "childInternalTransferTransactions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTransaction"
                            }
                        },
                        "comments": {
                            "type": "string"
                        },
                        "company": {
                            "$ref": "#/definitions/Company"
                        },
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "completedApprovals": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "confirmationNumber": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdByUser": {
                            "$ref": "#/definitions/User"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "eligibleApprovers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "endDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "errorSummary": {
                            "$ref": "#/definitions/ErrorSummary"
                        },
                        "firstRepeatOnDay": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "fromAccount": {
                            "$ref": "#/definitions/Account"
                        },
                        "fromAccountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "hasNoEndDate": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "internalTransferAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferAudit"
                            }
                        },
                        "internalTransferStatusType": {
                            "$ref": "#/definitions/InternalTransferStatusType"
                        },
                        "internalTransferStatusTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "internalTransferTemplate": {
                            "$ref": "#/definitions/InternalTransferTemplate"
                        },
                        "internalTransferTemplateId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isEdited": {
                            "type": "boolean"
                        },
                        "lastEditedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "memo": {
                            "type": "string"
                        },
                        "message": {
                            "type": "string"
                        },
                        "messageType": {
                            "type": "string"
                        },
                        "numberOfApprovalNeeded": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "parentInternalTransferTransaction": {
                            "$ref": "#/definitions/InternalTransferTransaction"
                        },
                        "parentInternalTransferTransactionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "paymentFrequencyType": {
                            "$ref": "#/definitions/PaymentFrequencyType"
                        },
                        "paymentFrequencyTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "paymentOptionType": {
                            "$ref": "#/definitions/PaymentOptionType"
                        },
                        "paymentOptionTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "permissions": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductPermission"
                            }
                        },
                        "repeatOnLastBusinessDay": {
                            "type": "boolean"
                        },
                        "seconRepeatOnDay": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "startDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "submittedToScheduler": {
                            "type": "boolean"
                        },
                        "toAccount": {
                            "$ref": "#/definitions/Account"
                        },
                        "toAccountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "transactionId": {
                            "type": "string"
                        },
                        "transferDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedByUser": {
                            "$ref": "#/definitions/User"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "InternalTransferAudit": {
            "type": "object",
            "required": [
                "createdBy",
                "createdDate",
                "internalTransferActionTypeId",
                "internalTransferAuditId",
                "internalTransferTransactionId"
            ],
            "properties": {
                "comments": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "internalTransferActionType": {
                    "$ref": "#/definitions/InternalTransferActionType"
                },
                "internalTransferActionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "internalTransferAuditId": {
                    "type": "integer",
                    "format": "int32"
                },
                "internalTransferTransaction": {
                    "$ref": "#/definitions/InternalTransferTransaction"
                },
                "internalTransferTransactionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "InternalTransferActionType": {
            "type": "object",
            "required": ["internalTransferActionTypeId"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "internalTransferActionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "internalTransferAudits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InternalTransferAudit"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "InternalTransferStatusType": {
            "type": "object",
            "required": ["internalTransferStatusTypeId"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "internalTransferStatusTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "internalTransferTransactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InternalTransferTransaction"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "PaymentOptionType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "ProductPermission": {
            "type": "object",
            "required": ["id", "productId", "updatedDate"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "permission": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "productAccountPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductAccountPermission"
                    }
                },
                "productId": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ProductAccountPermission": {
            "type": "object",
            "required": ["accountProductId", "id", "productPermissionId", "updatedDate"],
            "properties": {
                "accountProduct": {
                    "$ref": "#/definitions/AccountProduct"
                },
                "accountProductId": {
                    "type": "integer",
                    "format": "int32"
                },
                "entitlements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Entitlement"
                    }
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "productPermission": {
                    "$ref": "#/definitions/ProductPermission"
                },
                "productPermissionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Entitlement": {
            "type": "object",
            "required": ["id", "objectState"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "objectState": {
                    "$ref": "#/definitions/ObjectState"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "NonCoreWireCompanyInternationalAccount": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "accountId",
                        "createdBy",
                        "createdDate",
                        "dailyLimit",
                        "id",
                        "perTransactionLimit",
                        "rowStatusId",
                        "updatedBy",
                        "updatedDate",
                        "wireCompanyId"
                    ],
                    "properties": {
                        "account": {
                            "$ref": "#/definitions/Account"
                        },
                        "accountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "dailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nonCoreWireCompanyInternational": {
                            "$ref": "#/definitions/NonCoreWireCompanyInternational"
                        },
                        "perTransactionLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "wireCompanyId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "NonCoreWireCompanyInternational": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "createdBy",
                        "createdDate",
                        "dailyLimit",
                        "id",
                        "perTransactionLimit",
                        "rowStatusId",
                        "updatedBy",
                        "updatedDate"
                    ],
                    "properties": {
                        "availableBalanceValidationCoreTable": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "company": {
                            "$ref": "#/definitions/Company"
                        },
                        "createdBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "dailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nonCoreWireCompanyInternationalAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NonCoreWireCompanyInternationalAccount"
                            }
                        },
                        "perTransactionLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "rowStatus": {
                            "$ref": "#/definitions/RowStatus"
                        },
                        "rowStatusId": {
                            "type": "integer"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "wireInternationalBalanceValidationType": {
                            "$ref": "#/definitions/WireInternationalBalanceValidationType"
                        },
                        "wireInternationalBalanceValidationTypeId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "WireInternationalBalanceValidationType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "StopPayment": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "accountId",
                        "approvalCount",
                        "approvalsCompleted",
                        "createdDate",
                        "id",
                        "startCheckNumber",
                        "stopPaymentStatusTypeId",
                        "updatedDate"
                    ],
                    "properties": {
                        "account": {
                            "$ref": "#/definitions/Account"
                        },
                        "accountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "amount": {
                            "type": "number",
                            "format": "double"
                        },
                        "approvalCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "approvalsCompleted": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "approvedBy": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TupleOfStringAndDateTime"
                            }
                        },
                        "checkDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "confirmationNumber": {
                            "type": "string"
                        },
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "eligibleApprovers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "endCheckNumber": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "enteredBy": {
                            "type": "string"
                        },
                        "expireDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "payee": {
                            "type": "string"
                        },
                        "remarks": {
                            "type": "string"
                        },
                        "startCheckNumber": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "stopPaymentAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StopPaymentAudit"
                            }
                        },
                        "stopPaymentStatusType": {
                            "$ref": "#/definitions/StopPaymentStatusType"
                        },
                        "stopPaymentStatusTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "transactionId": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userPermissions": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ]
        },
        "StopPaymentAudit": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["createdDate", "id", "stopPaymentAuditActionId", "stopPaymentId"],
                    "properties": {
                        "createdBy": {
                            "type": "string"
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "remarks": {
                            "type": "string"
                        },
                        "stopPayment": {
                            "$ref": "#/definitions/StopPayment"
                        },
                        "stopPaymentAuditAction": {
                            "$ref": "#/definitions/StopPaymentAuditAction"
                        },
                        "stopPaymentAuditActionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "stopPaymentId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "StopPaymentAuditAction": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        },
                        "stopPaymentAudits": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StopPaymentAudit"
                            }
                        }
                    }
                }
            ]
        },
        "StopPaymentStatusType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "CompanyLimit": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["companyId", "id", "updatedDate"],
                    "properties": {
                        "company": {
                            "$ref": "#/definitions/Company"
                        },
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "dailyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "monthlyLimit": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "CompanyType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "companies": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Company"
                            }
                        },
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "FileImportLayout": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "companyId",
                        "fileFormatTypeId",
                        "id",
                        "productTypeId",
                        "updatedDate"
                    ],
                    "properties": {
                        "company": {
                            "$ref": "#/definitions/Company"
                        },
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "delimiter": {
                            "type": "string"
                        },
                        "fileFormatType": {
                            "$ref": "#/definitions/FileFormatType"
                        },
                        "fileFormatTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "fileImportLayoutDetails": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FileImportLayoutDetail"
                            }
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "productType": {
                            "$ref": "#/definitions/ProductType"
                        },
                        "productTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "templateName": {
                            "type": "string"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "FileFormatType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "FileImportLayoutDetail": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": [
                        "fileImportFieldId",
                        "fileImportLayoutId",
                        "id",
                        "order",
                        "updatedDate"
                    ],
                    "properties": {
                        "additionalInformationFour": {
                            "type": "string"
                        },
                        "additionalInformationOne": {
                            "type": "string"
                        },
                        "additionalInformationThree": {
                            "type": "string"
                        },
                        "additionalInformationTwo": {
                            "type": "string"
                        },
                        "beginPosition": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "endPosition": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "fileImportField": {
                            "$ref": "#/definitions/FileImportField"
                        },
                        "fileImportFieldId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "fileImportLayout": {
                            "$ref": "#/definitions/FileImportLayout"
                        },
                        "fileImportLayoutId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "order": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "FileImportField": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["fileTypeId", "id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "fieldName": {
                            "type": "string"
                        },
                        "fileType": {
                            "$ref": "#/definitions/FileType"
                        },
                        "fileTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "FileType": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "InternalTransferAddTransactionDetail": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseEntity"
                },
                {
                    "type": "object",
                    "required": ["id", "internalTransferStatusTypeId", "paymentFrequencyTypeId"],
                    "properties": {
                        "amount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "batchId": {
                            "type": "string"
                        },
                        "endDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "errorSummary": {
                            "$ref": "#/definitions/ErrorSummary"
                        },
                        "firstRepeatOnDay": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "fromAccount": {
                            "$ref": "#/definitions/Account"
                        },
                        "hasNoEndDate": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "internalTransferStatusTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "internalTransferTemplateId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "memo": {
                            "type": "string"
                        },
                        "paymentFrequencyTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "paymentOptionTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "repeatOnLastBusinessDay": {
                            "type": "boolean"
                        },
                        "seconRepeatOnDay": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "startDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "toAccount": {
                            "$ref": "#/definitions/Account"
                        },
                        "transactionId": {
                            "type": "string"
                        },
                        "transferDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "updatedBy": {
                            "type": "string"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "ArpProduct": {
            "type": "object",
            "required": [
                "allowArpExceptionCorrections",
                "fiAllowArpExceptionCorrections",
                "fiAllowSubstituteProduct",
                "fiManageAchExceptions",
                "fiShowAchExceptions",
                "fiWorkAchException",
                "fiWorkCheckException",
                "id",
                "manageAchExceptions",
                "showAchExceptions",
                "updatedDate",
                "useSubstituteProduct",
                "workAchException",
                "workCheckException"
            ],
            "properties": {
                "allowArpExceptionCorrections": {
                    "type": "boolean"
                },
                "fiAllowArpExceptionCorrections": {
                    "type": "boolean"
                },
                "fiAllowSubstituteProduct": {
                    "type": "boolean"
                },
                "fiManageAchExceptions": {
                    "type": "boolean"
                },
                "fiShowAchExceptions": {
                    "type": "boolean"
                },
                "fiWorkAchException": {
                    "type": "boolean"
                },
                "fiWorkCheckException": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "manageAchExceptions": {
                    "type": "boolean"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "showAchExceptions": {
                    "type": "boolean"
                },
                "substituteProductClientId": {
                    "type": "string"
                },
                "substituteProductLandingPageUrl": {
                    "type": "string"
                },
                "substituteProductName": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "useSubstituteProduct": {
                    "type": "boolean"
                },
                "workAchException": {
                    "type": "boolean"
                },
                "workCheckException": {
                    "type": "boolean"
                }
            }
        },
        "BillPayProduct": {
            "type": "object",
            "required": ["id", "updatedBy", "updatedDate"],
            "properties": {
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "billPayServiceName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "updatedBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ElectronicDocumentsProduct": {
            "type": "object",
            "required": ["id", "monthlyFee", "updatedDate"],
            "properties": {
                "esiEmail": {
                    "type": "string"
                },
                "esiId": {
                    "type": "string"
                },
                "electronicDocumentServiceName": {
                    "type": "string"
                },
                "electronicDocumentTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "monthlyFee": {
                    "type": "number",
                    "format": "double"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "RemoteDepositProduct": {
            "type": "object",
            "required": ["id", "remoteDepositProductTypeId", "updatedBy", "updatedDate"],
            "properties": {
                "companySsoLogin": {
                    "$ref": "#/definitions/CompanySsoLogin"
                },
                "companySsoLoginId": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "monthlyFee": {
                    "type": "number",
                    "format": "decimal"
                },
                "remoteDepositProductType": {
                    "$ref": "#/definitions/RemoteDepositProductType"
                },
                "remoteDepositProductTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CompanySsoLogin": {
            "type": "object",
            "required": ["companyId", "id", "ssoLoginSystemId", "updatedBy", "updatedDate"],
            "properties": {
                "clientCompanyId": {
                    "type": "string"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "ssoLoginSystem": {
                    "$ref": "#/definitions/SsoLoginSystem"
                },
                "ssoLoginSystemId": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "RemoteDepositProductType": {
            "type": "object",
            "required": ["remoteDepositProductTypeId"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "remoteDepositProductTypeId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportingProduct": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                }
            }
        },
        "StopPaymentProduct": {
            "type": "object",
            "required": ["approvalCount", "feePerRequest", "id", "updatedDate"],
            "properties": {
                "approvalCount": {
                    "type": "integer"
                },
                "feePerRequest": {
                    "type": "number",
                    "format": "double"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ArpReportFile": {
            "type": "object",
            "required": ["accountId", "createdDate", "id"],
            "properties": {
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "fileContent": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CoreAccount": {
            "type": "object",
            "properties": {
                "cifNumber": {
                    "type": "string"
                },
                "coreStatus": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "CompanyAccountDisplaySetting": {
            "type": "object",
            "required": [
                "accountMaskTypeId",
                "allowOverrideMasking",
                "createdBy",
                "createdDate",
                "id",
                "showAccountName",
                "updatedBy",
                "updatedDate"
            ],
            "properties": {
                "accountMaskType": {
                    "$ref": "#/definitions/AccountMaskType"
                },
                "accountMaskTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "allowOverrideMasking": {
                    "type": "boolean"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "createdBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdByUser": {
                    "$ref": "#/definitions/User"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "showAccountName": {
                    "type": "boolean"
                },
                "updatedBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedByUser": {
                    "$ref": "#/definitions/User"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "CompanyUserApprovalSetting": {
            "type": "object",
            "required": [
                "boUserRequireBoApproval",
                "chUserRequireBoApproval",
                "chUserRequireChApproval",
                "id",
                "updatedDate"
            ],
            "properties": {
                "boUserRequireBoApproval": {
                    "type": "boolean"
                },
                "chUserRequireBoApproval": {
                    "type": "boolean"
                },
                "chUserRequireChApproval": {
                    "type": "boolean"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "InternalTransferTemplateAudit": {
            "type": "object",
            "required": [
                "createdBy",
                "createdDate",
                "id",
                "internalTransferTemplateActionTypeId",
                "internalTransferTemplateId"
            ],
            "properties": {
                "createdBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdByUser": {
                    "$ref": "#/definitions/User"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "internalTransferTemplate": {
                    "$ref": "#/definitions/InternalTransferTemplate"
                },
                "internalTransferTemplateActionType": {
                    "$ref": "#/definitions/InternalTransferTemplateActionType"
                },
                "internalTransferTemplateActionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "internalTransferTemplateId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "InternalTransferTemplateActionType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "InternalTransferTemplateDetail": {
            "type": "object",
            "required": [
                "amount",
                "createdBy",
                "createdDate",
                "fromAccountId",
                "id",
                "internalTransferTemplateId",
                "toAccountId",
                "updatedBy",
                "updatedDate"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "decimal"
                },
                "createdBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "createdByUser": {
                    "$ref": "#/definitions/User"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "fromAccount": {
                    "$ref": "#/definitions/Account"
                },
                "fromAccountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "internalTransferTemplate": {
                    "$ref": "#/definitions/InternalTransferTemplate"
                },
                "internalTransferTemplateId": {
                    "type": "integer",
                    "format": "int32"
                },
                "memo": {
                    "type": "string"
                },
                "toAccount": {
                    "$ref": "#/definitions/Account"
                },
                "toAccountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedBy": {
                    "type": "integer",
                    "format": "int32"
                },
                "updatedByUser": {
                    "$ref": "#/definitions/User"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "InternalTransferTemplateStatusType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "InternalTransferType": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DeleteTransferTemplateRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "required": ["transferTemplateId"],
                    "properties": {
                        "transferTemplateId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "EditTransferTemplateRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransferTemplate": {
                            "$ref": "#/definitions/InternalTransferTemplate"
                        }
                    }
                }
            ]
        },
        "GetTransferRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "required": ["internalTransferId"],
                    "properties": {
                        "internalTransferId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "GetAllTransfersRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransferIds": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                }
            ]
        },
        "GetTransfersRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "properties": {
                        "batchId": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "GetTransferTemplateDetailRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "required": ["editTemplate", "transferTemplateId"],
                    "properties": {
                        "editTemplate": {
                            "type": "boolean"
                        },
                        "transferTemplateId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "RejectTransferTemplateRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "required": ["transferTemplateId"],
                    "properties": {
                        "transferTemplateId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "SearchTransferRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "properties": {
                        "transferFilter": {
                            "$ref": "#/definitions/InternalTransferTransactionFilter"
                        }
                    }
                }
            ]
        },
        "InternalTransferTransactionFilter": {
            "type": "object",
            "required": ["paymentOptionTypeId"],
            "properties": {
                "accountOperator": {
                    "type": "string"
                },
                "bothAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Account"
                    }
                },
                "createdDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "createdDateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "fromAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Account"
                    }
                },
                "fromAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "paymentOptionTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Lookup"
                    }
                },
                "toAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Account"
                    }
                },
                "toAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "transactionId": {
                    "type": "string"
                },
                "transferDateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "transferDateTo": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "SearchTransferTemplateRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "amountMax": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "amountMin": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "amountType": {
                            "type": "string"
                        },
                        "fromAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        },
                        "internalTransferTemplateStatusTypes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTemplateStatusTypeEnum"
                            }
                        },
                        "internalTransferTypes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTypeEnum"
                            }
                        },
                        "templateName": {
                            "type": "string"
                        },
                        "toAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        }
                    }
                }
            ]
        },
        "InternalTransferTemplateStatusTypeEnum": {
            "type": "integer",
            "description": "",
            "x-enumNames": ["Undefined", "PendingApproval", "Ready", "Rejected", "Deleted"],
            "enum": [0, 1, 2, 3, 4]
        },
        "InternalTransferTypeEnum": {
            "type": "integer",
            "description": "",
            "x-enumNames": ["Undefined", "OneToOne", "OneToMany", "ManyToOne"],
            "enum": [0, 1, 2, 3]
        },
        "SearchRecurringTransferRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "properties": {
                        "searchFilter": {
                            "$ref": "#/definitions/RecurringInternalTransferFilter"
                        }
                    }
                }
            ]
        },
        "RecurringInternalTransferFilter": {
            "type": "object",
            "required": ["amountEnd", "amountSpecific", "amountStart"],
            "properties": {
                "accountOperator": {
                    "type": "string"
                },
                "amountEnd": {
                    "type": "number",
                    "format": "decimal"
                },
                "amountSpecific": {
                    "type": "number",
                    "format": "decimal"
                },
                "amountStart": {
                    "type": "number",
                    "format": "decimal"
                },
                "amountType": {
                    "type": "string"
                },
                "bothAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Account"
                    }
                },
                "createdDateEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "createdDateSpecific": {
                    "type": "string",
                    "format": "date-time"
                },
                "createdDateStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "createdDateType": {
                    "type": "string"
                },
                "frequency": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Lookup"
                    }
                },
                "fromAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Account"
                    }
                },
                "nextTransferDateEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "nextTransferDateSpecific": {
                    "type": "string",
                    "format": "date-time"
                },
                "nextTransferDateStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "nextTransferDateType": {
                    "type": "string"
                },
                "status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Lookup"
                    }
                },
                "toAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Account"
                    }
                },
                "transactionId": {
                    "type": "string"
                }
            }
        },
        "ExecuteScheduledTransferRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "required": ["companyId", "internalTransferId", "jobId", "userId"],
                    "properties": {
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "institutionFiId": {
                            "type": "string"
                        },
                        "internalTransferId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "jobId": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "nextPaymentDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "GetPendingTransfersRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "required": ["isTransferLoanPayment"],
                    "properties": {
                        "isTransferLoanPayment": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "TransferStatusCheckRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object"
                }
            ]
        },
        "SearchLoanPaymentRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "properties": {
                        "accountOperator": {
                            "type": "string"
                        },
                        "amountFrom": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "amountTo": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "bothAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        },
                        "createdDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "createdDateFrom": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "createdDateTo": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "createdDateType": {
                            "type": "string"
                        },
                        "fromAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        },
                        "paymentDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "paymentDateFrom": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "paymentDateTo": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "paymentDateType": {
                            "type": "string"
                        },
                        "paymentOptionTypes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Lookup"
                            }
                        },
                        "statuses": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Lookup"
                            }
                        },
                        "toAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        },
                        "transactionId": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "CreateStopPaymentRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "properties": {
                        "stopPayment": {
                            "$ref": "#/definitions/StopPayment"
                        }
                    }
                }
            ]
        },
        "GetStopPaymentDetailsRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "required": ["stopPaymentId"],
                    "properties": {
                        "stopPaymentId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "CancelStopPaymentRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "required": ["stopPaymentId"],
                    "properties": {
                        "remarks": {
                            "type": "string"
                        },
                        "stopPaymentId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "SearchStopPaymentsRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "required": ["outPutType"],
                    "properties": {
                        "outPutType": {
                            "$ref": "#/definitions/OutPutType"
                        },
                        "stopSearchFilter": {
                            "$ref": "#/definitions/StpSearchModel"
                        }
                    }
                }
            ]
        },
        "OutPutType": {
            "type": "integer",
            "description": "",
            "x-enumNames": ["Entity", "Pdf", "Csv", "Tiff", "Bai", "Quicken", "QuickBook", "Nacha"],
            "enum": [0, 1, 2, 3, 4, 5, 6, 7]
        },
        "StpSearchModel": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Account"
                    }
                },
                "checkAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "checkAmountEnd": {
                    "type": "number",
                    "format": "decimal"
                },
                "checkAmountStart": {
                    "type": "number",
                    "format": "decimal"
                },
                "checkAmountType": {
                    "type": "string"
                },
                "checkDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "checkDateEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "checkDateStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "checkDateType": {
                    "type": "string"
                },
                "checkNumber": {
                    "type": "string"
                },
                "checkNumberEnd": {
                    "type": "string"
                },
                "checkNumberStart": {
                    "type": "string"
                },
                "checkNumberType": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "createdDateEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "createdDateStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "createdDateType": {
                    "type": "string"
                },
                "payee": {
                    "type": "string"
                },
                "statusKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "RejectStopPaymentRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "properties": {
                        "lookups": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Lookup"
                            }
                        }
                    }
                }
            ]
        },
        "ApproveStopPaymentRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "properties": {
                        "lookups": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Lookup"
                            }
                        }
                    }
                }
            ]
        },
        "StopPaymentRequestExpiredRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "properties": {
                        "accountNumber": {
                            "type": "string"
                        },
                        "accountType": {
                            "type": "string"
                        },
                        "confirmationNumber": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "StopPaymentUpdateRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "properties": {
                        "accountNumber": {
                            "type": "string"
                        },
                        "accountType": {
                            "type": "string"
                        },
                        "amount": {
                            "type": "number",
                            "format": "float"
                        },
                        "checkDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "confirmationNumber": {
                            "type": "string"
                        },
                        "endCheckNumber": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "expireDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "payeeName": {
                            "type": "string"
                        },
                        "startCheckNumber": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            ]
        },
        "GetEligibleStopPaymentAccountsRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "required": ["companyId"],
                    "properties": {
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "GetCompanyStopPaymentConfigurationRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "required": ["companyId"],
                    "properties": {
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "SaveCompanyStopPaymentRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "required": ["approvalCount", "companyId"],
                    "properties": {
                        "accountIds": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        "approvalCount": {
                            "type": "integer"
                        },
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "TreasuryChallengeRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseRequest2"
                },
                {
                    "type": "object",
                    "properties": {
                        "clientStatus": {
                            "type": "string"
                        },
                        "oneTimePassword": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "AddTransferRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/TreasuryChallengeRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransferAddTransaction": {
                            "$ref": "#/definitions/InternalTransferAddTransaction"
                        }
                    }
                }
            ]
        },
        "InternalTransferAddTransaction": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "batchId": {
                    "type": "string"
                },
                "errorSummary": {
                    "$ref": "#/definitions/ErrorSummary"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InternalTransferAddTransactionDetail"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ApproveTransferRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/TreasuryChallengeRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "comments": {
                            "type": "string"
                        },
                        "internalTransferIds": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                }
            ]
        },
        "EditTransferRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/TreasuryChallengeRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransfer": {
                            "$ref": "#/definitions/InternalTransferTransaction"
                        }
                    }
                }
            ]
        },
        "RejectTransferRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/TreasuryChallengeRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "comments": {
                            "type": "string"
                        },
                        "internalTransferIds": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                }
            ]
        },
        "CancelTransferRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/TreasuryChallengeRequest"
                },
                {
                    "type": "object",
                    "required": ["internalTransferId"],
                    "properties": {
                        "comments": {
                            "type": "string"
                        },
                        "internalTransferId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "AddOfxTransferRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/TreasuryChallengeRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransferAddTransaction": {
                            "$ref": "#/definitions/InternalTransferAddTransaction"
                        }
                    }
                }
            ]
        },
        "EditOfxTransferRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/TreasuryChallengeRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransfer": {
                            "$ref": "#/definitions/InternalTransferTransaction"
                        }
                    }
                }
            ]
        },
        "CancelOfxTransferRequest": {
            "allOf": [
                {
                    "$ref": "#/definitions/TreasuryChallengeRequest"
                },
                {
                    "type": "object",
                    "required": ["internalTransferId"],
                    "properties": {
                        "comments": {
                            "type": "string"
                        },
                        "internalTransferId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "ResponseDetailCollection2": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ResponseDetail2"
            }
        },
        "ResponseDetail2": {
            "type": "object",
            "required": ["responseCode"],
            "properties": {
                "responseCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "responseMessage": {
                    "type": "string"
                }
            }
        },
        "ApproveTransferTemplateResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransferTemplate": {
                            "$ref": "#/definitions/InternalTransferTemplate"
                        }
                    }
                }
            ]
        },
        "CreateTransferTemplateResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "required": ["templateNameExist"],
                    "properties": {
                        "internalTransferTemplate": {
                            "$ref": "#/definitions/InternalTransferTemplate"
                        },
                        "templateNameExist": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "DeleteTransferTemplateResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object"
                }
            ]
        },
        "EditTransferTemplateResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransferTemplate": {
                            "$ref": "#/definitions/InternalTransferTemplate"
                        }
                    }
                }
            ]
        },
        "GetTransferResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransfer": {
                            "$ref": "#/definitions/InternalTransferTransaction"
                        }
                    }
                }
            ]
        },
        "GetAllTransfersResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransfers": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTransaction"
                            }
                        },
                        "ofxInternalTransfers": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OfxInternalTransferTransaction"
                            }
                        }
                    }
                }
            ]
        },
        "OfxInternalTransferTransaction": {
            "type": "object",
            "required": ["amount", "id"],
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "decimal"
                },
                "fromAccountNumber": {
                    "type": "string"
                },
                "fromAccountType": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "toAccountNumber": {
                    "type": "string"
                },
                "toAccountType": {
                    "type": "string"
                },
                "transferDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "transferId": {
                    "type": "string"
                }
            }
        },
        "GetTransfersResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransfers": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTransaction"
                            }
                        }
                    }
                }
            ]
        },
        "GetTransferTemplateDetailResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransferTemplate": {
                            "$ref": "#/definitions/InternalTransferTemplate"
                        }
                    }
                }
            ]
        },
        "RejectTransferTemplateResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransferTemplate": {
                            "$ref": "#/definitions/InternalTransferTemplate"
                        }
                    }
                }
            ]
        },
        "SearchTransferResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransfers": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTransaction"
                            }
                        },
                        "ofxInternalTransfers": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OfxInternalTransferTransaction"
                            }
                        }
                    }
                }
            ]
        },
        "SearchTransferTemplateResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransferTemplates": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTemplate"
                            }
                        }
                    }
                }
            ]
        },
        "SearchRecurringTransferResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransfers": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTransaction"
                            }
                        }
                    }
                }
            ]
        },
        "CancelTransferResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransfer": {
                            "$ref": "#/definitions/InternalTransferTransaction"
                        }
                    }
                }
            ]
        },
        "GetPendingTransfersResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransfers": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTransaction"
                            }
                        }
                    }
                }
            ]
        },
        "TransferStatusCheckResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object"
                }
            ]
        },
        "SearchLoanPaymentResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransfers": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTransaction"
                            }
                        }
                    }
                }
            ]
        },
        "ExecuteScheduledTransferResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "confirmationNumber": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "CancelOfxTransferResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "errorSummary": {
                            "$ref": "#/definitions/ErrorSummary"
                        },
                        "transactionId": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "CreateStopPaymentResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "stopPayment": {
                            "$ref": "#/definitions/StopPayment"
                        }
                    }
                }
            ]
        },
        "GetStopPaymentDetailsResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "stopPayment": {
                            "$ref": "#/definitions/StopPayment"
                        }
                    }
                }
            ]
        },
        "CancelStopPaymentResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "stopPayment": {
                            "$ref": "#/definitions/StopPayment"
                        }
                    }
                }
            ]
        },
        "SearchStopPaymentsResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "stopPayments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StopPayment"
                            }
                        }
                    }
                }
            ]
        },
        "RejectStopPaymentResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "stopPayments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StopPayment"
                            }
                        }
                    }
                }
            ]
        },
        "ApproveStopPaymentResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "stopPayments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StopPayment"
                            }
                        }
                    }
                }
            ]
        },
        "StopPaymentRequestExpiredResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object"
                }
            ]
        },
        "StopPaymentUpdateResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object"
                }
            ]
        },
        "GetEligibleStopPaymentAccountsResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "properties": {
                        "accounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EligibleStopPaymentAccount"
                            }
                        }
                    }
                }
            ]
        },
        "EligibleStopPaymentAccount": {
            "type": "object",
            "required": ["id", "isStopPayEnabled"],
            "properties": {
                "cifNumber": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "isStopPayEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "GetCompanyStopPaymentConfigurationResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "required": ["approvalCount", "id"],
                    "properties": {
                        "approvalCount": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "id": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "SaveCompanyStopPaymentResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object"
                }
            ]
        },
        "TreasuryChallengeResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse2"
                },
                {
                    "type": "object",
                    "required": ["hasAlternate"],
                    "properties": {
                        "actionType": {
                            "type": "string"
                        },
                        "challengeMethodType": {
                            "$ref": "#/definitions/ChallengeMethodTypeEnum"
                        },
                        "errorCode": {
                            "type": "string"
                        },
                        "hasAlternate": {
                            "type": "boolean"
                        },
                        "message": {
                            "type": "string"
                        },
                        "methodUsed": {
                            "type": "string"
                        },
                        "sendMessage": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "ChallengeMethodTypeEnum": {
            "type": "integer",
            "description": "",
            "x-enumNames": ["OutOfBand", "SecureToken"],
            "enum": [1, 2]
        },
        "AddTransferResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/TreasuryChallengeResponse"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransferAddTransaction": {
                            "$ref": "#/definitions/InternalTransferAddTransaction"
                        }
                    }
                }
            ]
        },
        "ApproveTransferResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/TreasuryChallengeResponse"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransfers": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTransaction"
                            }
                        }
                    }
                }
            ]
        },
        "EditTransferResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/TreasuryChallengeResponse"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransfer": {
                            "$ref": "#/definitions/InternalTransferTransaction"
                        }
                    }
                }
            ]
        },
        "RejectTransferResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/TreasuryChallengeResponse"
                },
                {
                    "type": "object",
                    "properties": {
                        "internalTransfers": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InternalTransferTransaction"
                            }
                        }
                    }
                }
            ]
        },
        "AddOfxTransferResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/TreasuryChallengeResponse"
                },
                {
                    "type": "object",
                    "properties": {
                        "errorSummary": {
                            "$ref": "#/definitions/ErrorSummary"
                        },
                        "transactionId": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "EditOfxTransferResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/TreasuryChallengeResponse"
                },
                {
                    "type": "object",
                    "properties": {
                        "errorSummary": {
                            "$ref": "#/definitions/ErrorSummary"
                        },
                        "transactionId": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "AchFilterUserModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/AchFilterUserModel"
            }
        },
        "AchFilterUserModel": {
            "type": "object",
            "required": ["userId", "userUniqueId"],
            "properties": {
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "userUniqueId": {
                    "type": "string",
                    "format": "guid"
                }
            }
        },
        "ErrorResponseModel": {
            "type": "object",
            "properties": {
                "responseDetails": {
                    "$ref": "#/definitions/ResponseDetailModelCollection"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "CompanyUserAccountModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/CompanyUserAccountModel"
            }
        },
        "CompanyUserAccountModel": {
            "type": "object",
            "required": ["accountUniqueId"],
            "properties": {
                "accountUniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "accountNumber": {
                    "type": "string"
                },
                "entitledUserUniqueIds": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "guid"
                    }
                }
            }
        },
        "AchFilterAuditHistoryModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/AchFilterAuditHistoryModel"
            }
        },
        "AchFilterAuditHistoryModel": {
            "type": "object",
            "required": ["achFilterUniqueId"],
            "properties": {
                "achFilterUniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "auditEvents": {
                    "$ref": "#/definitions/AchFilterAuditEventModelCollection"
                }
            }
        },
        "AchFilterAuditEventModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/AchFilterAuditEventModel"
            }
        },
        "AchFilterAuditEventModel": {
            "type": "object",
            "required": ["achFilterAuditEventId"],
            "properties": {
                "achFilterAuditEventId": {
                    "type": "integer",
                    "format": "int32"
                },
                "actionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "action": {
                    "type": "string"
                },
                "actionUsername": {
                    "type": "string"
                },
                "editedFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AchFilterAuditHistoryRequestModel": {
            "type": "object",
            "properties": {
                "achFilterUniqueIds": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "guid"
                    }
                }
            }
        },
        "ReportDataModelOfListOfAchFilterReportModel": {
            "type": "object",
            "required": ["totalCount", "isPaged", "maxPageSize", "recordCountInCurrentPage"],
            "properties": {
                "reportTitle": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AchFilterReportModel"
                    }
                },
                "totalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "isPaged": {
                    "type": "boolean"
                },
                "maxPageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "recordCountInCurrentPage": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AchFilterReportModel": {
            "type": "object",
            "required": ["achFilterUniqueId", "accountAllowsAllCredits", "accountAllowsAllDebits"],
            "properties": {
                "accountNickname": {
                    "type": "string"
                },
                "accountNumber": {
                    "type": "string"
                },
                "achCompanyId": {
                    "type": "string"
                },
                "achCompanyName": {
                    "type": "string"
                },
                "achFilterUniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "allowType": {
                    "type": "string"
                },
                "accountAllowsAllCredits": {
                    "type": "boolean"
                },
                "accountAllowsAllDebits": {
                    "type": "boolean"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "filterRuleName": {
                    "type": "string"
                },
                "fromAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "remarks": {
                    "type": "string"
                },
                "routingNumber": {
                    "type": "string"
                },
                "standardEntryClassCode": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "toAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "transactionType": {
                    "type": "string"
                },
                "companyName": {
                    "type": "string"
                }
            }
        },
        "AchFilterReportRequestModel": {
            "type": "object",
            "required": ["companyGuidUniqueId"],
            "properties": {
                "accountUniqueIds": {
                    "$ref": "#/definitions/GuidKeyCollection"
                },
                "achCompanyId": {
                    "type": "string"
                },
                "achCompanyName": {
                    "type": "string"
                },
                "amountEnd": {
                    "type": "number",
                    "format": "decimal"
                },
                "amountStart": {
                    "type": "number",
                    "format": "decimal"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "pagingParameters": {
                    "$ref": "#/definitions/PagingParameters"
                },
                "standardEntryClassCodes": {
                    "$ref": "#/definitions/TextKeyCollection"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "statuses": {
                    "$ref": "#/definitions/TextKeyCollection"
                },
                "transactionTypes": {
                    "$ref": "#/definitions/TextKeyCollection"
                },
                "userUniqueIds": {
                    "$ref": "#/definitions/GuidKeyCollection"
                },
                "companyGuidUniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "filterRuleName": {
                    "type": "string"
                }
            }
        },
        "GuidKeyCollection": {
            "type": "array",
            "items": {
                "type": "string",
                "format": "guid"
            }
        },
        "AchFilterReportDownloadRequestModel": {
            "type": "object",
            "required": ["companyGuidUniqueId"],
            "properties": {
                "accountUniqueIds": {
                    "$ref": "#/definitions/GuidKeyCollection"
                },
                "achCompanyId": {
                    "type": "string"
                },
                "achCompanyName": {
                    "type": "string"
                },
                "amountEnd": {
                    "type": "number",
                    "format": "decimal"
                },
                "amountStart": {
                    "type": "number",
                    "format": "decimal"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "pagingParameters": {
                    "$ref": "#/definitions/PagingParameters"
                },
                "standardEntryClassCodes": {
                    "$ref": "#/definitions/TextKeyCollection"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "statuses": {
                    "$ref": "#/definitions/TextKeyCollection"
                },
                "transactionTypes": {
                    "$ref": "#/definitions/TextKeyCollection"
                },
                "userUniqueIds": {
                    "$ref": "#/definitions/GuidKeyCollection"
                },
                "companyGuidUniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "filterRuleName": {
                    "type": "string"
                }
            }
        },
        "UserActivityTypeModel": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "PositivePayCompanyCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/PositivePayCompany"
            }
        },
        "PositivePayCompany": {
            "type": "object",
            "required": ["companyGuidUniqueId"],
            "properties": {
                "companyGuidUniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "DateTypeModel": {
            "type": "object",
            "required": ["id", "orderId"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "GetCompanyListByFiModel": {
            "type": "object",
            "properties": {
                "companies": {
                    "$ref": "#/definitions/FilterLookupModelCollection"
                }
            }
        },
        "FilterLookupModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/FilterLookupModel"
            }
        },
        "GetAchCompanyListByParentCompanyModel": {
            "type": "object",
            "properties": {
                "companies": {
                    "$ref": "#/definitions/FilterLookupModelCollection"
                }
            }
        },
        "GetAchCompanyListByParentCompanyRequestModel": {
            "type": "object",
            "properties": {
                "companyGuidUniqueIds": {
                    "$ref": "#/definitions/GuidKeyCollection"
                }
            }
        },
        "ReportUserModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ReportUserModel"
            }
        },
        "ReportUserModel": {
            "type": "object",
            "required": ["userUniqueId"],
            "properties": {
                "userId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userUniqueId": {
                    "type": "string",
                    "format": "guid"
                }
            }
        },
        "GetBoReportUserListForCompaniesResponseModel": {
            "type": "object",
            "properties": {
                "users": {
                    "$ref": "#/definitions/FilterLookupModelCollection"
                }
            }
        },
        "GetBoReportUserListForCompaniesRequestModel": {
            "type": "object",
            "properties": {
                "companyGuidUniqueIds": {
                    "$ref": "#/definitions/GuidKeyCollection"
                }
            }
        },
        "GetInternalTransferStatusTypesResponseModel": {
            "type": "object",
            "properties": {
                "internalTransferStatusTypes": {
                    "$ref": "#/definitions/FilterLookupModelCollection"
                }
            }
        },
        "GetAccountsRequestModel": {
            "type": "object",
            "properties": {
                "companyGuidUniqueIds": {
                    "$ref": "#/definitions/GuidKeyCollection"
                }
            }
        },
        "ReportModelBase": {
            "type": "object",
            "required": ["isCustomReport", "isFavoriteReport"],
            "properties": {
                "columnModels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportColumnModelBase"
                    }
                },
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isCustomReport": {
                    "type": "boolean"
                },
                "isFavoriteReport": {
                    "type": "boolean"
                },
                "sequences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportSequence"
                    }
                }
            }
        },
        "ReportColumnModelBase": {
            "type": "object",
            "required": ["displayOrder", "isSortable", "detailsAccessible"],
            "properties": {
                "columnName": {
                    "type": "string"
                },
                "displayType": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "displayOrder": {
                    "type": "integer",
                    "format": "int32"
                },
                "isSortable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "detailsAccessible": {
                    "type": "boolean"
                },
                "detailColumnConfiguration": {
                    "$ref": "#/definitions/DetailColumnConfigurationModel"
                }
            }
        },
        "DetailColumnConfigurationModel": {
            "type": "object",
            "properties": {
                "detailHeader": {
                    "type": "string"
                },
                "detailActions": {
                    "$ref": "#/definitions/DetailActionModelCollection"
                },
                "detailFields": {
                    "$ref": "#/definitions/DetailFieldModelCollection"
                }
            }
        },
        "DetailActionModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/DetailActionModel"
            }
        },
        "DetailActionModel": {
            "type": "object",
            "properties": {
                "actionsUrl": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "optionsUrl": {
                    "type": "string"
                },
                "action": {
                    "$ref": "#/definitions/ActionMetaDataModel"
                }
            }
        },
        "ActionMetaDataModel": {
            "type": "object",
            "properties": {
                "parameters": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "DetailFieldModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/DetailFieldModel"
            }
        },
        "DetailFieldModel": {
            "type": "object",
            "required": ["displayOrder"],
            "properties": {
                "displayOrder": {
                    "type": "integer",
                    "format": "int32"
                },
                "displayType": {
                    "type": "string"
                },
                "fieldName": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "ReportSequence": {
            "type": "object",
            "required": ["reportId", "order"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "reportId": {
                    "type": "integer",
                    "format": "int32"
                },
                "order": {
                    "type": "integer",
                    "format": "int32"
                },
                "selector": {
                    "type": "string"
                }
            }
        },
        "GetBoReportFilterModel": {
            "type": "object",
            "required": ["runDefaultSearch", "reportId"],
            "properties": {
                "filters": {
                    "$ref": "#/definitions/FilterCollection"
                },
                "reportName": {
                    "type": "string"
                },
                "reportType": {
                    "type": "string"
                },
                "runDefaultSearch": {
                    "type": "boolean"
                },
                "reportId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "FilterCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Filter"
            }
        },
        "Filter": {
            "type": "object",
            "required": ["order", "isRequired", "isDataBound"],
            "properties": {
                "label": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "order": {
                    "type": "integer",
                    "format": "int32"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "cascadeChildren": {
                    "type": "array",
                    "items": {
                        "additionalProperties": {}
                    }
                },
                "type": {
                    "type": "string"
                },
                "isDataBound": {
                    "type": "boolean"
                },
                "endpoint": {
                    "type": "string"
                },
                "parameters": {
                    "$ref": "#/definitions/ParameterCollection"
                },
                "toggleOptions": {
                    "$ref": "#/definitions/ToggleOptionCollection"
                },
                "filterOptions": {
                    "$ref": "#/definitions/FilterOptionCollection"
                }
            }
        },
        "ParameterCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Parameter"
            }
        },
        "Parameter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "localSource": {
                    "type": "string"
                }
            }
        },
        "ToggleOptionCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ToggleOption"
            }
        },
        "ToggleOption": {
            "type": "object",
            "required": ["order"],
            "properties": {
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "FilterOptionCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/FilterOption"
            }
        },
        "FilterOption": {
            "type": "object",
            "required": ["order"],
            "properties": {
                "id": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "order": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "OfxCompanyModel": {
            "type": "object",
            "required": ["isOfxEnabled", "success", "userLevelAccessEnabled"],
            "properties": {
                "errorDescription": {
                    "type": "string"
                },
                "isOfxEnabled": {
                    "type": "boolean"
                },
                "ofxAuthenticationCode": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "userLevelAccessEnabled": {
                    "type": "boolean"
                }
            }
        },
        "SaveReportCustomFilterResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "type": "object"
                }
            ]
        },
        "WireHistoryModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ModelBase"
                },
                {
                    "type": "object",
                    "required": ["amount", "changedDate"],
                    "properties": {
                        "wireCompany": {
                            "type": "string"
                        },
                        "companyName": {
                            "type": "string"
                        },
                        "valueDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "amount": {
                            "type": "number",
                            "format": "decimal"
                        },
                        "status": {
                            "type": "string"
                        },
                        "beneficiaryName": {
                            "type": "string"
                        },
                        "beneficiaryAccount": {
                            "type": "string"
                        },
                        "frequency": {
                            "type": "string"
                        },
                        "debitAccount": {
                            "type": "string"
                        },
                        "transactionId": {
                            "type": "string"
                        },
                        "purpose": {
                            "type": "string"
                        },
                        "changedBy": {
                            "type": "string"
                        },
                        "changedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "ReportDataModelOfListOfUserActivityModel": {
            "type": "object",
            "required": ["totalCount", "isPaged", "maxPageSize", "recordCountInCurrentPage"],
            "properties": {
                "reportTitle": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserActivityModel"
                    }
                },
                "totalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "isPaged": {
                    "type": "boolean"
                },
                "maxPageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "recordCountInCurrentPage": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UserActivityModel": {
            "type": "object",
            "required": ["userActivityId", "activityDate"],
            "properties": {
                "userActivityId": {
                    "type": "integer",
                    "format": "int64"
                },
                "activityDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "userName": {
                    "type": "string"
                },
                "loginId": {
                    "type": "string"
                },
                "activity": {
                    "type": "string"
                },
                "sessionId": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "browser": {
                    "type": "string"
                },
                "companyName": {
                    "type": "string"
                },
                "userStatus": {
                    "type": "string"
                },
                "activityType": {
                    "type": "string"
                },
                "userType": {
                    "type": "string"
                }
            }
        },
        "ChannelUserActivityReportFilter": {
            "allOf": [
                {
                    "$ref": "#/definitions/ReportFilterBase"
                },
                {
                    "type": "object",
                    "required": ["companyId"],
                    "properties": {
                        "userIds": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        "dateType": {
                            "type": "string"
                        },
                        "fromDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "toDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "specificDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "fromTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "toTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "userActivityTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "companyId": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            ]
        },
        "FiNumberModel": {
            "type": "object",
            "required": ["isOfxEnabled", "success", "userLevelAccessEnabled", "ofxReady"],
            "properties": {
                "errorDescription": {
                    "type": "string"
                },
                "isOfxEnabled": {
                    "type": "boolean"
                },
                "ofxFiNumber": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "userLevelAccessEnabled": {
                    "type": "boolean"
                },
                "ofxReady": {
                    "type": "boolean"
                }
            }
        },
        "OfxUserAccessModel": {
            "type": "object",
            "required": ["isOfxEnabledForUser", "success"],
            "properties": {
                "errorDescription": {
                    "type": "string"
                },
                "isOfxEnabledForUser": {
                    "type": "boolean"
                },
                "ofxFiNumber": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "SaveOfxCompanyRequest": {
            "type": "object",
            "required": ["companyId", "isOfxEnabled", "userLevelAccessEnabled"],
            "properties": {
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isOfxEnabled": {
                    "type": "boolean"
                },
                "ofxFiNumber": {
                    "type": "string"
                },
                "ofxAuthenticationCode": {
                    "type": "string"
                },
                "userLevelAccessEnabled": {
                    "type": "boolean"
                },
                "modifiedBy": {
                    "type": "string"
                }
            }
        },
        "NotFoundResult": {
            "type": "object",
            "description": "Represents an action result that returns an empty NotFound response.",
            "properties": {
                "request": {
                    "description": "Gets the request message which led to this result.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HttpRequestMessage"
                        }
                    ]
                }
            }
        },
        "CompanyModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/CompanyModel2"
            }
        },
        "CompanyModel2": {
            "type": "object",
            "required": ["uniqueId"],
            "properties": {
                "cifNumber": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "companyUniqueId": {
                    "type": "string"
                }
            }
        },
        "CompanySearchModel2": {
            "type": "object",
            "properties": {
                "companyTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "rowStatusIds": {
                    "$ref": "#/definitions/NumberKeyCollection"
                }
            }
        },
        "NumberKeyCollection": {
            "type": "array",
            "items": {
                "type": "integer",
                "format": "int32"
            }
        },
        "AccountModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/AccountModel2"
            }
        },
        "AccountModel2": {
            "type": "object",
            "required": ["accountId", "accountUniqueId"],
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountNumber": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "accountUniqueId": {
                    "type": "string",
                    "format": "guid"
                }
            }
        },
        "PositivePayAccountSearchModel": {
            "type": "object",
            "required": ["hasCheckException", "hasAchException", "hasAchFilter"],
            "properties": {
                "companyUniqueIds": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "guid"
                    }
                },
                "hasCheckException": {
                    "type": "boolean"
                },
                "hasAchException": {
                    "type": "boolean"
                },
                "hasAchFilter": {
                    "type": "boolean"
                }
            }
        },
        "CheckExceptionModelDataPage": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataPageOfCheckExceptionModel"
                },
                {
                    "type": "object",
                    "required": ["hasEtlCompletedSuccessfully"],
                    "properties": {
                        "hasEtlCompletedSuccessfully": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "DataPageOfCheckExceptionModel": {
            "type": "object",
            "required": [
                "pageSize",
                "maxPageSize",
                "pageNumber",
                "totalCount",
                "recordCountInCurrentPage"
            ],
            "properties": {
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxPageSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "recordCountInCurrentPage": {
                    "type": "integer",
                    "format": "int32"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CheckExceptionModel"
                    }
                }
            }
        },
        "CheckExceptionModel": {
            "type": "object",
            "required": [
                "arpExceptionDetailUniqueId",
                "arpExceptionDetailId",
                "paidAmount",
                "companyId",
                "isCorrectionRequestCreated"
            ],
            "properties": {
                "arpExceptionDetailUniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "arpExceptionDetailId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountNumber": {
                    "type": "string"
                },
                "checkNumber": {
                    "type": "string"
                },
                "paidAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "issuedAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "postedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "issuedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "issuedPayee": {
                    "type": "string"
                },
                "returnReasonDescription": {
                    "type": "string"
                },
                "attachment": {
                    "type": "string",
                    "format": "guid"
                },
                "decisionStatus": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "exceptionReason": {
                    "type": "string"
                },
                "financialInstitutionId": {
                    "type": "string"
                },
                "companyName": {
                    "type": "string"
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "companyUniqueId": {
                    "type": "string"
                },
                "fromWorkStation": {
                    "type": "string"
                },
                "attachmentFileName": {
                    "type": "string"
                },
                "returnReasonUniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "returnReasonId": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastDecisionByUserUniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "lastDecisionTakenBy": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "sourceOfEntry": {
                    "type": "string"
                },
                "protected": {
                    "type": "string"
                },
                "ddaBatchNumber": {
                    "type": "string"
                },
                "ddaSequenceNumber": {
                    "type": "string"
                },
                "posPayItemId": {
                    "type": "string"
                },
                "audits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AuditModel"
                    }
                },
                "isCorrectionRequestCreated": {
                    "type": "boolean"
                },
                "checkImageNumber": {
                    "type": "string"
                }
            }
        },
        "AuditModel": {
            "type": "object",
            "required": ["timestamp"],
            "properties": {
                "username": {
                    "type": "string"
                },
                "action": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "comments": {
                    "type": "string"
                }
            }
        },
        "SearchCheckExceptionModel": {
            "type": "object",
            "properties": {
                "accountUniqueIds": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "guid"
                    }
                },
                "checkNumber": {
                    "type": "string"
                },
                "decisionStatus": {
                    "type": "string"
                },
                "decisionByUserUniqueIds": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "guid"
                    }
                },
                "issuedPayee": {
                    "type": "string"
                },
                "issuedDate": {
                    "$ref": "#/definitions/DateFilterModel"
                },
                "issuedAmount": {
                    "$ref": "#/definitions/DecimalFilterModel"
                },
                "postedDate": {
                    "$ref": "#/definitions/DateFilterModel"
                },
                "postedAmount": {
                    "$ref": "#/definitions/DecimalFilterModel"
                },
                "type": {
                    "type": "string"
                },
                "exceptionReasons": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pagingParameters": {
                    "$ref": "#/definitions/PagingParameters"
                }
            }
        },
        "DateFilterModel": {
            "type": "object",
            "required": ["startDate", "endDate"],
            "properties": {
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "searchType": {
                    "type": "string"
                }
            }
        },
        "DecimalFilterModel": {
            "type": "object",
            "required": ["startAmount", "endAmount"],
            "properties": {
                "startAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "endAmount": {
                    "type": "number",
                    "format": "decimal"
                }
            }
        },
        "ResponseMessageResult": {
            "type": "object",
            "description": "Represents an action result that returns a specified response message.",
            "properties": {
                "response": {
                    "type": "file"
                }
            }
        },
        "CompanyOptionModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/CompanyOptionModel"
            }
        },
        "CompanyOptionModel": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ProductFeatureAccountModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ProductFeatureAccountModel"
            }
        },
        "ProductFeatureAccountModel": {
            "type": "object",
            "properties": {
                "featureParticipations": {
                    "$ref": "#/definitions/ProductAccountFeatureParticipationModelCollection"
                },
                "featureName": {
                    "type": "string"
                }
            }
        },
        "ProductAccountFeatureParticipationModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ProductFeatureAccountParticipationModel"
            }
        },
        "ProductFeatureAccountParticipationModel": {
            "type": "object",
            "required": ["accountId", "isParticipating"],
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountNumber": {
                    "type": "string"
                },
                "accountType": {
                    "type": "string"
                },
                "cifNumber": {
                    "type": "string"
                },
                "isParticipating": {
                    "type": "boolean"
                }
            }
        },
        "GetProductFeatureAccountsRequestModel": {
            "type": "object",
            "properties": {
                "companyGuidUniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "accountNumber": {
                    "type": "string"
                },
                "accountType": {
                    "type": "string"
                }
            }
        },
        "SavePositivePayCompanyConfigurationRequestModel": {
            "type": "object",
            "properties": {
                "productFeatureAccounts": {
                    "$ref": "#/definitions/ProductFeatureAccountModelCollection"
                },
                "options": {
                    "$ref": "#/definitions/CompanyOptionModelCollection"
                }
            }
        },
        "ProductFeatureAccountParticipationsResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseResponse"
                },
                {
                    "type": "object",
                    "properties": {
                        "productFeatureAccountParticipations": {
                            "$ref": "#/definitions/ProductAccountFeatureParticipationModelCollection"
                        }
                    }
                }
            ]
        },
        "InstitutionOptionModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/InstitutionOptionModel"
            }
        },
        "InstitutionOptionModel": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "GetArpAccountsResponseModel": {
            "type": "object",
            "properties": {
                "checkExceptionAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ArpCheckExceptionAccountModel"
                    }
                },
                "achExceptionAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ArpAchExceptionAccountModel"
                    }
                }
            }
        },
        "ArpCheckExceptionAccountModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ArpExceptionAccountModel"
                },
                {
                    "type": "object",
                    "required": ["hasCheckException"],
                    "properties": {
                        "hasCheckException": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "ArpExceptionAccountModel": {
            "type": "object",
            "required": ["accountId"],
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountNumber": {
                    "type": "string"
                },
                "cifNumber": {
                    "type": "string"
                },
                "accountType": {
                    "type": "string"
                }
            }
        },
        "ArpAchExceptionAccountModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ArpExceptionAccountModel"
                },
                {
                    "type": "object",
                    "required": ["hasAchException"],
                    "properties": {
                        "hasAchException": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "UpdateCompanyArpProductModel": {
            "type": "object",
            "required": ["companyId"],
            "properties": {
                "arpProductFeature": {
                    "$ref": "#/definitions/ArpProductFeatureModel"
                },
                "achExceptionAccounts": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "checkExceptionAccounts": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ArpProductFeatureModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProductFeatureModel"
                },
                {
                    "type": "object",
                    "required": [
                        "allowArpExceptions",
                        "fiAllowArpExceptions",
                        "fiAllowSubstituteProduct",
                        "fiManageAchExceptions",
                        "fiShowAchExceptions",
                        "fiWorkAchException",
                        "fiWorkCheckException",
                        "manageAchExceptions",
                        "showAchExceptions",
                        "useSubstituteProduct",
                        "workAchException",
                        "workCheckException",
                        "allowIssuedItemActivityReview"
                    ],
                    "properties": {
                        "allowArpExceptions": {
                            "type": "boolean"
                        },
                        "arpAccounts": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountModel"
                            }
                        },
                        "fiAllowArpExceptions": {
                            "type": "boolean"
                        },
                        "fiAllowSubstituteProduct": {
                            "type": "boolean"
                        },
                        "fiManageAchExceptions": {
                            "type": "boolean"
                        },
                        "fiShowAchExceptions": {
                            "type": "boolean"
                        },
                        "fiWorkAchException": {
                            "type": "boolean"
                        },
                        "fiWorkCheckException": {
                            "type": "boolean"
                        },
                        "manageAchExceptions": {
                            "type": "boolean"
                        },
                        "showAchExceptions": {
                            "type": "boolean"
                        },
                        "substituteProductConfig": {
                            "$ref": "#/definitions/ArpSsoSubstituteConfigModel"
                        },
                        "useSubstituteProduct": {
                            "type": "boolean"
                        },
                        "workAchException": {
                            "type": "boolean"
                        },
                        "workCheckException": {
                            "type": "boolean"
                        },
                        "allowIssuedItemActivityReview": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "ArpSsoSubstituteConfigModel": {
            "type": "object",
            "properties": {
                "ssoProductName": {
                    "type": "string"
                },
                "ssoClientId": {
                    "type": "string"
                },
                "ssoLandingPageUrl": {
                    "type": "string"
                }
            }
        },
        "InstitutionCheckExceptionReturnReasonCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/InstitutionCheckExceptionReturnReason"
            }
        },
        "InstitutionCheckExceptionReturnReason": {
            "type": "object",
            "required": ["isDeleted", "isDefault"],
            "properties": {
                "institutionCheckExceptionReturnReasonUniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "description": {
                    "type": "string"
                },
                "isDeleted": {
                    "type": "boolean"
                },
                "isDefault": {
                    "type": "boolean"
                }
            }
        },
        "InstitutionProductConfigurationModel": {
            "type": "object",
            "properties": {
                "institutionExternalReportTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InstitutionExternalReportTypesModel"
                    }
                }
            }
        },
        "InstitutionExternalReportTypesModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/GenericEnumModel"
                },
                {
                    "type": "object",
                    "required": [
                        "uniqueId",
                        "institutionId",
                        "externalReportTypeId",
                        "isEnabled",
                        "updatedBy",
                        "updatedDate"
                    ],
                    "properties": {
                        "uniqueId": {
                            "type": "string",
                            "format": "guid"
                        },
                        "institutionId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "externalReportTypeId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isEnabled": {
                            "type": "boolean"
                        },
                        "updatedBy": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "updatedDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "GenericEnumModel": {
            "type": "object",
            "required": ["id"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "CompanyProductConfigurationModel": {
            "type": "object",
            "required": ["companyId"],
            "properties": {
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountProductConfigurationModel"
                    }
                }
            }
        },
        "AccountProductConfigurationModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/AccountModel"
                },
                {
                    "type": "object",
                    "required": ["accountId", "isEnabled"],
                    "properties": {
                        "accountId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "isEnabled": {
                            "type": "boolean"
                        }
                    }
                }
            ]
        },
        "GetAchCompanyMatchTypeParametersResponse": {
            "type": "object",
            "properties": {
                "matchTypeParameters": {
                    "$ref": "#/definitions/MatchTypeParameterCollection"
                }
            }
        },
        "MatchTypeParameterCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/MatchTypeParameter"
            }
        },
        "MatchTypeParameter": {
            "type": "object",
            "required": ["id", "includedInMatch"],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "includedInMatch": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "GetAchCompanyByMatchTypeParametersResponse": {
            "type": "object",
            "properties": {
                "achCompanies": {
                    "$ref": "#/definitions/CompanyIdParentCompanyNameTupleCollection"
                }
            }
        },
        "CompanyIdParentCompanyNameTupleCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/CompanyIdParentCompanyNameTuple"
            }
        },
        "CompanyIdParentCompanyNameTuple": {
            "type": "object",
            "required": ["achCompanyId"],
            "properties": {
                "achCompanyId": {
                    "type": "string",
                    "format": "guid"
                },
                "parentCompanyName": {
                    "type": "string"
                }
            }
        },
        "CopyCoreAchCompanyDataResponse": {
            "type": "object",
            "required": ["achCompanyId", "success"],
            "properties": {
                "achCompanyId": {
                    "type": "string",
                    "format": "guid"
                },
                "success": {
                    "type": "boolean"
                },
                "responseDetails": {
                    "$ref": "#/definitions/ResponseDetailModelCollection"
                }
            }
        },
        "CopyCoreAchCompanyDataRequest": {
            "type": "object",
            "required": ["copyAchCompanyId"],
            "properties": {
                "copyAchCompanyId": {
                    "type": "string",
                    "format": "guid"
                },
                "achCompanyIds": {
                    "$ref": "#/definitions/GuidKeyCollection"
                }
            }
        },
        "RefreshCoreAchCompanyDataResponse": {
            "type": "object",
            "required": ["achCompanyId", "success"],
            "properties": {
                "achCompanyId": {
                    "type": "string",
                    "format": "guid"
                },
                "success": {
                    "type": "boolean"
                },
                "responseDetails": {
                    "$ref": "#/definitions/ResponseDetailModelCollection"
                }
            }
        },
        "RefreshCoreAchCompanyDataRequest": {
            "type": "object",
            "required": ["achCompanyId"],
            "properties": {
                "achCompanyId": {
                    "type": "string",
                    "format": "guid"
                },
                "name": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "secCode": {
                    "type": "string"
                },
                "entryDescription": {
                    "type": "string"
                },
                "discretionaryData": {
                    "type": "string"
                }
            }
        },
        "DomesticBankModelCollection": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/DomesticBankModel"
            }
        },
        "DomesticBankModel": {
            "type": "object",
            "required": ["id", "isOnUs"],
            "properties": {
                "bankName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "isOnUs": {
                    "type": "boolean"
                },
                "routingNumber": {
                    "type": "string"
                }
            }
        },
        "AchNoticeOfChangeFilterModel": {
            "type": "object",
            "properties": {
                "originalEffectiveDate": {
                    "$ref": "#/definitions/DateFilterModel"
                },
                "companyUniqueIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "achCompanyId": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "recipientName": {
                    "type": "string"
                },
                "pagingParameters": {
                    "$ref": "#/definitions/PagingModel"
                }
            }
        },
        "GetChildSupportPaymentResponse": {
            "type": "object",
            "properties": {
                "childSupportPayment": {
                    "$ref": "#/definitions/ChildSupportPaymentModel"
                },
                "errorMessage": {
                    "type": "string"
                }
            }
        },
        "ChildSupportPaymentModel": {
            "type": "object",
            "required": [
                "id",
                "achPaymentGuidUniqueId",
                "parentId",
                "batchId",
                "restricted",
                "debitAmount",
                "creditAmount",
                "numberOfApprovalsNeeded",
                "achPaymentTypeId"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "achPaymentGuidUniqueId": {
                    "type": "string",
                    "format": "guid"
                },
                "frequency": {
                    "$ref": "#/definitions/AchFrequencyModel"
                },
                "parentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "batchId": {
                    "type": "integer",
                    "format": "int32"
                },
                "offsetAccount": {
                    "$ref": "#/definitions/LookupModel"
                },
                "name": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                },
                "achCompanyName": {
                    "type": "string"
                },
                "achCompanyId": {
                    "type": "string"
                },
                "secCode": {
                    "type": "string"
                },
                "discretionaryData": {
                    "type": "string"
                },
                "entryDescription": {
                    "type": "string"
                },
                "restricted": {
                    "type": "boolean"
                },
                "debitAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "creditAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "transactionId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "numberOfApprovalsNeeded": {
                    "type": "integer",
                    "format": "int32"
                },
                "audit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AuditModel"
                    }
                },
                "reversalAchPaymentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "achPaymentTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChildSupportRecipientModel"
                    }
                }
            }
        },
        "AchFrequencyModel": {
            "type": "object",
            "required": ["noEndDate", "repeatOnDay1", "repeatOnDay2", "paymentFrequencyType"],
            "properties": {
                "repeatOn": {
                    "type": "string"
                },
                "startOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "endOn": {
                    "type": "string",
                    "format": "date-time"
                },
                "effectiveDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "initiatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "noEndDate": {
                    "type": "boolean"
                },
                "repeatOnDay1": {
                    "type": "integer",
                    "format": "int32"
                },
                "repeatOnDay2": {
                    "type": "integer",
                    "format": "int32"
                },
                "repeatOnLastBusinessDay": {
                    "type": "boolean"
                },
                "paymentFrequencyType": {
                    "type": "string",
                    "minLength": 1
                },
                "nextPaymentDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "summary": {
                    "type": "string"
                }
            }
        },
        "ChildSupportRecipientModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/AchRecipientModel"
                },
                {
                    "type": "object",
                    "properties": {
                        "addendas": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChildSupportRecipientAddendaModel"
                            }
                        }
                    }
                }
            ]
        },
        "ChildSupportRecipientAddendaModel": {
            "type": "object",
            "properties": {
                "caseIdentifier": {
                    "type": "string"
                },
                "employmentTermination": {
                    "type": "boolean"
                },
                "fipsCode": {
                    "type": "string"
                },
                "medicalSupport": {
                    "type": "boolean"
                },
                "nonCustodialParentFirstName": {
                    "type": "string"
                },
                "nonCustodialParentLastName": {
                    "type": "string"
                },
                "nonCustodialParentSsn": {
                    "type": "string"
                },
                "payDate": {
                    "type": "string"
                }
            }
        },
        "AchRecipientModel": {
            "type": "object",
            "required": [
                "id",
                "name",
                "idNumber",
                "accountNumber",
                "accountType",
                "routingNumber",
                "transactionType",
                "amount",
                "prenote",
                "hold"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string",
                    "minLength": 1
                },
                "idNumber": {
                    "type": "string",
                    "minLength": 1
                },
                "accountNumber": {
                    "type": "string",
                    "minLength": 1
                },
                "accountType": {
                    "type": "string",
                    "minLength": 1
                },
                "routingNumber": {
                    "type": "string",
                    "minLength": 1
                },
                "transactionType": {
                    "type": "string",
                    "minLength": 1
                },
                "amount": {
                    "type": "number",
                    "format": "decimal"
                },
                "prenote": {
                    "type": "boolean"
                },
                "hold": {
                    "type": "boolean"
                },
                "achMasterRecipientId": {
                    "type": "integer",
                    "format": "int32"
                },
                "addendas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LookupModel"
                    }
                }
            }
        },
        "GetAchPaymentResponse": {
            "type": "object",
            "properties": {
                "achPayment": {
                    "$ref": "#/definitions/AchPaymentModel"
                },
                "errorMessage": {
                    "type": "string"
                }
            }
        },
        "AchPaymentModel": {
            "type": "object",
            "required": [
                "id",
                "achPaymentGuidUniqueId",
                "recipients",
                "frequency",
                "parentId",
                "batchId",
                "offsetAccount",
                "name",
                "achCompanyName",
                "achCompanyId",
                "secCode",
                "discretionaryData",
                "entryDescription",
                "restricted",
                "debitAmount",
                "creditAmount",
                "transactionId",
                "status",
                "numberOfApprovalsNeeded",
                "achPaymentTypeId"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "achPaymentGuidUniqueId": {
                    "type": "string",
                    "format": "guid",
                    "minLength": 1
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AchRecipientModel"
                    }
                },
                "frequency": {
                    "$ref": "#/definitions/AchFrequencyModel"
                },
                "parentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "batchId": {
                    "type": "integer",
                    "format": "int32"
                },
                "offsetAccount": {
                    "$ref": "#/definitions/LookupModel"
                },
                "name": {
                    "type": "string",
                    "minLength": 1
                },
                "templateName": {
                    "type": "string"
                },
                "achCompanyName": {
                    "type": "string",
                    "minLength": 1
                },
                "achCompanyId": {
                    "type": "string",
                    "minLength": 1
                },
                "secCode": {
                    "type": "string",
                    "minLength": 1
                },
                "discretionaryData": {
                    "type": "string",
                    "minLength": 1
                },
                "entryDescription": {
                    "type": "string",
                    "minLength": 1
                },
                "restricted": {
                    "type": "boolean"
                },
                "debitAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "creditAmount": {
                    "type": "number",
                    "format": "decimal"
                },
                "transactionId": {
                    "type": "string",
                    "minLength": 1
                },
                "status": {
                    "type": "string",
                    "minLength": 1
                },
                "numberOfApprovalsNeeded": {
                    "type": "integer",
                    "format": "int32"
                },
                "audit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AuditModel"
                    }
                },
                "reversalAchPaymentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "achPaymentTypeId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "DownloadPaymentResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "format": "byte"
                },
                "fileName": {
                    "type": "string"
                },
                "mimeType": {
                    "type": "string"
                },
                "errorMessage": {
                    "type": "string"
                }
            }
        }
    }
}
